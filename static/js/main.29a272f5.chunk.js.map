{"version":3,"sources":["components/easter-egg/brodyquest.mp3","components/easter-egg/easter-egg.png","webpack:///./src/utils/graph/index.js?3237","actions/index.js","reducers/layers.js","actions/nodes.js","reducers/nodes.js","reducers/tags.js","actions/tags.js","reducers/node-type.js","actions/node-type.js","reducers/visible.js","reducers/pipeline.js","reducers/flags.js","utils/worker.js","actions/graph.js","reducers/graph.js","reducers/index.js","utils/index.js","selectors/pipeline.js","selectors/tags.js","selectors/disabled.js","selectors/edges.js","selectors/ranks.js","selectors/nodes.js","config.js","selectors/layout.js","store/helpers.js","store/index.js","actions/check-font-loaded.js","selectors/layers.js","selectors/linked-nodes.js","components/icons/node-icon.js","components/flowchart/icon.js","components/flowchart/draw.js","components/tooltip/index.js","components/flowchart/index.js","components/pipeline-list/index.js","components/tag-list/index.js","components/node-list/filter-nodes.js","components/node-list/node-list-search.js","components/icons/visible.js","components/icons/invisible.js","components/node-list/node-list-toggle.js","selectors/node-types.js","components/node-list/node-list-row.js","components/node-list/node-list-group.js","components/node-list/node-list-groups.js","components/node-list/index.js","components/icon-button/index.js","components/icons/label.js","components/icons/layers.js","components/icons/menu.js","components/icons/theme.js","components/icons/export.js","components/icons/map.js","components/icons/plus.js","components/icons/minus.js","components/icons/reset.js","components/primary-toolbar/index.js","components/minimap-toolbar/index.js","components/minimap/draw.js","components/minimap/index.js","components/sidebar/index.js","components/export-modal/export-graph.js","components/export-modal/index.js","components/icons/loading.js","components/wrapper/index.js","store/normalize-data.js","utils/flags.js","store/initial-state.js","components/app/index.js","components/easter-egg/index.js","utils/random-utils.js","utils/random-data.js","utils/data/animals.mock.js","utils/data/demo.mock.js","utils/data-source.js","store/load-data.js","index.js","utils/graph/common.js","utils/graph/solver.js","utils/graph/layout.js","utils/graph/graph.js","utils/graph/routing.js","utils/graph/index.js"],"names":["module","exports","addMethods","methods","w","Worker","URL","createObjectURL","Blob","name","toggleExportModal","visible","type","updateZoom","zoom","layerReducer","layerState","action","Object","assign","toggleNodeClicked","nodeClicked","toggleNodesDisabled","nodeIDs","isDisabled","toggleNodeHovered","nodeHovered","nodeReducer","nodeState","updateState","newState","clicked","includes","disabled","reduce","id","hovered","tagReducer","tagState","active","tagID","enabled","nodeTypeReducer","nodeTypeState","typeID","visibleReducer","visibleState","exportModal","layers","sidebar","miniMap","pipelineReducer","pipelineState","pipeline","flagsReducer","flagsState","value","isTest","jest","graphWorker","require","graph","worker","mockWorker","terminate","keys","forEach","payload","Promise","resolve","toggleLoading","loading","updateGraph","layoutWorker","getJob","instance","running","then","response","preventWorkerQueues","state","newgraph","graphNew","graphDagre","graphState","createReducer","initialState","key","combinedReducer","combineReducers","flags","layer","node","nodeType","tag","edge","chartSize","fontLoaded","textLabels","theme","rootReducer","data","resetDataReducer","arrayToObject","array","callback","newObject","unique","d","i","arr","indexOf","getNodeIDs","ids","getNodeDisabledPipeline","createSelector","pipelines","nodePipelines","activePipeline","nodeID","getPipelineNodeIDs","nodeDisabledPipeline","filter","getPipelineTagIDs","tags","nodeTags","visibleTags","getTagEnabled","getTagData","tagIDs","tagName","tagActive","tagEnabled","sort","map","Boolean","getTagCount","total","length","getNodeDisabledTag","tagCount","some","getNodeDisabled","nodeDisabledNode","nodeDisabledTag","typeDisabled","getVisibleNodeIDs","nodeDisabled","getVisibleLayerIDs","nodeLayer","layerIDs","layersVisible","visibleLayerIDs","layerID","getEdgeDisabled","sources","targets","edgeIDs","edgeSources","edgeTargets","edgeID","source","target","getEdgeIDs","getEdgeSources","getEdgeTargets","getTransitiveEdges","transitiveEdges","walkGraphEdges","path","concat","join","push","addNewEdge","getVisibleEdges","edgeDisabled","getLayerNodes","layerNodes","getNodeRank","edges","nodeDeps","sourceID","targetID","toposortedNodes","batchingToposort","nodeRanks","rank","getNodeName","getNodeType","getFontLoaded","getNodeActive","hoveredNode","activeViaTag","getNodeSelected","clickedNode","getNodeData","nodeName","a","b","disabled_node","disabled_tag","disabled_type","getGroupedNodes","nodes","obj","item","hasOwnProperty","getNodeTextWidth","nodeTextWidth","svg","select","document","body","append","attr","selectAll","enter","text","each","width","this","getBBox","remove","getNodeSize","iconSize","padding","showLabels","isTask","x","y","textWidth","innerWidth","height","textOffset","iconOffset","getVisibleNodes","fullName","nodeFullName","nodeSize","nodeRank","label","fullDataPath","substr","sidebarWidth","description","default","icon","getGraphInput","getChartSize","visibleSidebar","left","top","outerChartWidth","getSidebarWidth","outerWidth","outerHeight","getChartZoom","noWindow","window","loadState","serializedState","localStorage","getItem","JSON","parse","err","console","error","saveState","nodeTypeDisabled","stringify","setItem","pruneFalseyKeys","newObj","updateGraphOnChange","store","watchGraph","watch","getState","subscribe","graphInput","dispatch","configureStore","createStore","reducer","applyMiddleware","thunk","flag","checkFontLoaded","fonts","fontName","check","checkIfLoaded","setTimeout","step","performance","now","requestAnimationFrame","ready","onloadingdone","getLayers","size","layerName","bounds","nearestLayer","bound","Infinity","currentBound","prevBound","nextBound","start","end","rectWidth","Math","max","getCentralNode","getVisibleEdgesByNode","sourceEdges","targetEdges","findLinkedNodes","edgesByNode","visited","getLinkedNodes","linkedNodes","paths","task","parameters","className","viewBox","svgNode","createElementNS","drawLayers","props","el","layerGroup","enterLayers","exit","merge","drawLayerNames","layerNameGroup","transition","duration","DURATION","style","layerNames","enterLayerNames","drawNodes","centralNode","nodeActive","nodeSelected","nodeGroup","enterNodes","classed","on","handleNodeClick","handleNodeMouseOver","handleNodeMouseOut","handleNodeKeyDown","catch","finally","order","drawEdges","edgeGroup","lineShape","line","curve","curveBasis","enterEdges","attrTween","current","points","previous","interpolatePath","zeroWidthSpace","String","fromCharCode","Tooltip","targetRect","isRight","isTop","xOffset","yOffset","classnames","transform","replace","insertZeroWidthSpace","defaultProps","FlowChart","Component","constructor","super","handleWindowResize","updateChartSize","handleBeforePrint","gs","graphSize","marginx","marginy","handleAfterPrint","onToggleNodeClicked","event","stopPropagation","handleChartClick","onToggleNodeHovered","showTooltip","hideTooltip","keyCode","tooltip","containerRef","React","createRef","svgRef","wrapperRef","edgesRef","nodesRef","layersRef","layerNamesRef","componentDidMount","selectD3Elements","initZoomBehaviour","addGlobalEventListeners","update","componentWillUnmount","removeGlobalEventListeners","componentDidUpdate","prevProps","chartZoom","changed","names","call","zoomToFit","objectA","objectB","prop","wrapper","onUpdateChartSize","getBoundingClientRect","ResizeObserver","resizeObserver","observe","addEventListener","unobserve","removeEventListener","zoomBehaviour","interpolate","scale","k","scaleExtent","minScale","maxScale","translateExtent","ty","onUpdateZoom","applied","reset","currentTransform","zoomTransform","targetScale","targetX","targetY","zoomIdentity","translateTo","scaleTo","targetTransform","translateX","translateY","min","translate","options","setState","render","ref","onClick","refX","refY","markerUnits","markerWidth","markerHeight","orient","emptyEdges","emptyNodes","emptyGraphSize","connect","ownProps","onUpdateActivePipeline","onChanged","defaultText","primaryText","onToggleTagActive","toggleTagActive","onToggleTagFilter","toggleTagFilter","Fragment","title","onMouseEnter","onMouseLeave","checked","onChange","e","escapeRegExp","utils","getHighlightedText","highlightMatch","searchValue","addHighlightedLabel","highlightedLabel","newNodes","filterNodes","filterNodesByType","valueRegex","RegExp","match","nodeMatchesSearch","getFilteredNodes","filteredNodes","onUpdateSearchValue","container","useRef","handleWindowKeyDown","isKeyF","isKeyCtrlOrCmd","ctrlKey","metaKey","input","querySelector","activeElement","focus","preventDefault","blur","useEffect","onKeyDown","onToggleNodesDisabled","getNodeTypeIDs","getTypeNodeCount","types","typeNodeIDs","visibleTypeNodeIDs","getNodeTypes","typeName","typeNodeCount","nodeCount","NodeListRow","children","selected","VisibilityIcon","VisibleIcon","InvisibleIcon","faded","onFocus","onBlur","dangerouslySetInnerHTML","__html","htmlFor","aria-label","onToggleTypeDisabled","toggleTypeDisabled","collapsed","onToggleCollapsed","flipId","inverseFlipId","toLowerCase","onAppear","classList","add","onanimationend","opacity","onExit","removeElement","storedState","handleKeyDown","handleKeyEvent","escape","useState","groupsCollapsed","setCollapsed","flipKey","handleNodeSelection","updateSearchValue","autoHide","hideTracksWhenNotNeeded","icons","xmlns","menu","export","strokeWidth","plus","minus","IconButton","ariaLabel","ariaLive","labelText","Icon","aria-live","disableLayerBtn","visibleLayers","onToggleExportModal","onToggleLayers","onToggleSidebar","toggleSidebar","onToggleTextLabels","onToggleTheme","themeBtn","labelBtn","exportBtn","layerBtn","scaleZoom","factor","onToggleMiniMap","onUpdateChartZoom","miniMapBtn","round","drawViewport","mapSize","getViewport","minX","minY","maxX","maxY","viewport","sizeOffset","MiniMap","onPointerEnter","isPointerInside","onPointerLeave","onPointerUpGlobal","isPointerDown","onPointerDown","onPointerMove","onPointerWheel","deltaY","ZOOM_RATE","onPointerWheelGlobal","contains","useTransition","time","Number","Date","lastTransitionTime","TRANSITION_WAIT","graphWidth","graphHeight","containerRect","clientX","clientY","viewportRef","bind","passive","pointerEventName","mapScale","transformStyle","_","inputEvents","onWheel","PointerEvent","getMapSize","scaledWidth","exportGraph","format","mockFn","downloadFormats","png","downloadPng","downloadSvg","download","clone","parentNode","appendChild","cloneNode","setAttribute","removeAttribute","maxWidth","createElement","innerHTML","prepend","css","removeChild","onToggle","onClose","normalizeData","isParam","Error","Array","isArray","validateInput","schema_id","full_name","addNode","createEdgeID","addEdge","addPipeline","selected_pipeline","addTag","addLayer","Flags","isDefined","flagsConfig","defaults","result","mergeLocalStorage","localStorageState","deepmerge","preparePipelineState","prepareNonPipelineState","url","urlParams","location","href","searchParams","warn","getFlagsFromUrl","getInitialState","App","announceFlags","checkWebFontLoading","updatePipelineData","message","flagsEnabled","allNames","info","isEnabled","status","statusIcon","getFlagsMessage","EasterEgg","play","audio","Audio","mp3","loop","KonamiCode","listen","toggleState","toggleAudio","toggleCSS","pause","src","img","alt","seed","get","characters","charAt","floor","random","generateHash","set","toString","getSeedFromURL","seedrandom","getNumberArray","n","from","randomIndex","randomNumber","ceil","randomNumberBetween","getRandom","range","LOREM_IPSUM","split","getRandomName","LAYERS","Pipeline","generatePipelines","rankCount","getRankCount","rankLayers","getRankLayers","generateTags","generateNodes","generateEdges","finalise","pipelineCount","layerSize","rankNodeCount","getRankNodeCount","createNode","getType","_sources","initialRank","getNodePipelines","getRandomTags","_targets","len","taken","getRandomSelection","getNodesByRank","nodesByRank","edgeCount","ranks","parseFloat","getRandomNodeAtRank","rankIndex","rankValue","rankNodes","sourceRankIndex","remainingRankCount","biasedRandom","_sourceNode","_targetNode","activeNodes","degree","values","activeTags","activeEdges","visibleNodes","sortedNodes","find","all","generateRandomPipeline","getPipelineData","animals","demo","getRandomPipeline","getDataValue","qs","search","REACT_APP_DATA_SOURCE","process","isDemo","host","encodeURIComponent","getSourceID","loadJsonData","json","KedroViz","updateData","loadData","ReactDOM","getElementById","halfPI","PI","snap","unit","distance1d","abs","angle","atan2","nodeLeft","nodeRight","nodeTop","nodeBottom","groupByRow","rows","rowNumbers","row","sortedRows","compare","delta","localeCompare","nearestOnLine","ax","ay","bx","by","dx","dy","positionClamped","subtract","equalTo","greaterOrEqual","solve","constraints","iterations","strict","solveStrict","solveLoose","co","distance","operator","strength","weightA","weightB","solver","kiwi","variables","expression","constraint","Eq","Ge","required","strong","addConstraint","updateVariables","expandDenseRows","spaceY","densities","rowDensity","currentOffsetY","density","edgeAngle","targetNode","sourceNode","sourceRow","targetRow","defaultOptions","layout","spaceX","layerSpaceY","basisX","routing","minPassageGap","stemUnit","stemMinSource","stemMinTarget","stemMax","stemSpaceSource","stemSpaceTarget","addEdgeLinks","addNearestLayers","layerConstraints","crossingConstraints","parallelConstraints","parallelSingleConstraints","parallelDoubleConstraints","separationConstraints","snapConstraints","rowConstraints","layerSpace","nextLayer","nextLayerNodes","layerNode","crossingConstraint","edgeA","edgeB","j","parallelConstraint","sourceHasOneTarget","targetHasOneSource","halfIterations","l","rowNodes","separation","minSeparation","targetSeparation","sourceSeparation","sourceOffsetX","currentPoint","firstNode","nearestPoint","nearestDistance","rowExtended","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","nextNode","nodeGap","offsetX","candidatePoint","offsetY","sourceEdgeDistance","targetEdgeDistance","targetOffsetX","sourceOffsetY","targetOffsetY","sourceStem","targetStem","pointYMax","point","offset","offsetNode","offsetEdge","nodeById","layersMap","res","hasValidLayer","findNodeBy","targetThenSourceNodes","nodeDistance","targetNodes","sourceNodes","nodeA","nodeB","successors","metric","accept","nearest","hasLayers","dagre","graphlib","Graph","setGraph","ranker","ranksep","setNode","setEdge"],"mappings":"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D,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC,OAAQ,YAEV,CACED,OAAQ,WACRC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","file":"static/js/main.29a272f5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/brodyquest.6259cc84.mp3\";","module.exports = __webpack_public_path__ + \"static/media/easter-egg.e702bd5f.png\";","\n\t\t\t\tvar addMethods = require(\"../../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"graphNew\",\"graphDagre\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(URL.createObjectURL(new Blob([\"/*! For license information please see a48df5ce533b9ddf6f78.worker.js.LICENSE.txt */\\n!function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){\\\"undefined\\\"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\\\"Module\\\"}),Object.defineProperty(t,\\\"__esModule\\\",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&\\\"object\\\"===typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\\\"default\\\",{enumerable:!0,value:t}),2&e&&\\\"string\\\"!=typeof t)for(var o in t)n.d(r,o,function(e){return t[e]}.bind(null,o));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,\\\"a\\\",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p=\\\"./\\\",n(n.s=290)}([function(t,e,n){var r;try{r={cloneDeep:n(230),constant:n(53),defaults:n(231),each:n(80),filter:n(83),find:n(232),flatten:n(110),forEach:n(81),forIn:n(237),has:n(94),isUndefined:n(95),last:n(238),map:n(96),mapValues:n(239),max:n(240),merge:n(242),min:n(248),minBy:n(249),now:n(250),pick:n(251),range:n(256),reduce:n(98),sortBy:n(259),uniqueId:n(264),values:n(103),zipObject:n(265)}}catch(o){}r||(r=window._),t.exports=r},function(t,e){var n=Array.isArray;t.exports=n},function(t,e,n){\\\"use strict\\\";var r=n(0),o=n(5).Graph;function i(t,e,n,o){var i;do{i=r.uniqueId(o)}while(t.hasNode(i));return n.dummy=e,t.setNode(i,n),i}function a(t){return r.max(r.map(t.nodes(),(function(e){var n=t.node(e).rank;if(!r.isUndefined(n))return n})))}t.exports={addDummyNode:i,simplify:function(t){var e=(new o).setGraph(t.graph());return r.forEach(t.nodes(),(function(n){e.setNode(n,t.node(n))})),r.forEach(t.edges(),(function(n){var r=e.edge(n.v,n.w)||{weight:0,minlen:1},o=t.edge(n);e.setEdge(n.v,n.w,{weight:r.weight+o.weight,minlen:Math.max(r.minlen,o.minlen)})})),e},asNonCompoundGraph:function(t){var e=new o({multigraph:t.isMultigraph()}).setGraph(t.graph());return r.forEach(t.nodes(),(function(n){t.children(n).length||e.setNode(n,t.node(n))})),r.forEach(t.edges(),(function(n){e.setEdge(n,t.edge(n))})),e},successorWeights:function(t){var e=r.map(t.nodes(),(function(e){var n={};return r.forEach(t.outEdges(e),(function(e){n[e.w]=(n[e.w]||0)+t.edge(e).weight})),n}));return r.zipObject(t.nodes(),e)},predecessorWeights:function(t){var e=r.map(t.nodes(),(function(e){var n={};return r.forEach(t.inEdges(e),(function(e){n[e.v]=(n[e.v]||0)+t.edge(e).weight})),n}));return r.zipObject(t.nodes(),e)},intersectRect:function(t,e){var n,r,o=t.x,i=t.y,a=e.x-o,u=e.y-i,s=t.width/2,c=t.height/2;if(!a&&!u)throw new Error(\\\"Not possible to find intersection inside of the rectangle\\\");Math.abs(u)*s>Math.abs(a)*c?(u<0&&(c=-c),n=c*a/u,r=c):(a<0&&(s=-s),n=s,r=s*u/a);return{x:o+n,y:i+r}},buildLayerMatrix:function(t){var e=r.map(r.range(a(t)+1),(function(){return[]}));return r.forEach(t.nodes(),(function(n){var o=t.node(n),i=o.rank;r.isUndefined(i)||(e[i][o.order]=n)})),e},normalizeRanks:function(t){var e=r.min(r.map(t.nodes(),(function(e){return t.node(e).rank})));r.forEach(t.nodes(),(function(n){var o=t.node(n);r.has(o,\\\"rank\\\")&&(o.rank-=e)}))},removeEmptyRanks:function(t){var e=r.min(r.map(t.nodes(),(function(e){return t.node(e).rank}))),n=[];r.forEach(t.nodes(),(function(r){var o=t.node(r).rank-e;n[o]||(n[o]=[]),n[o].push(r)}));var o=0,i=t.graph().nodeRankFactor;r.forEach(n,(function(e,n){r.isUndefined(e)&&n%i!==0?--o:o&&r.forEach(e,(function(e){t.node(e).rank+=o}))}))},addBorderNode:function(t,e,n,r){var o={width:0,height:0};arguments.length>=4&&(o.rank=n,o.order=r);return i(t,\\\"border\\\",o,e)},maxRank:a,partition:function(t,e){var n={lhs:[],rhs:[]};return r.forEach(t,(function(t){e(t)?n.lhs.push(t):n.rhs.push(t)})),n},time:function(t,e){var n=r.now();try{return e()}finally{console.log(t+\\\" time: \\\"+(r.now()-n)+\\\"ms\\\")}},notime:function(t,e){return e()}}},function(t,e,n){var r;try{r={clone:n(117),constant:n(53),each:n(80),filter:n(83),has:n(94),isArray:n(1),isEmpty:n(194),isFunction:n(20),isUndefined:n(95),keys:n(10),map:n(96),reduce:n(98),size:n(197),transform:n(203),union:n(204),values:n(103)}}catch(o){}r||(r=window._),t.exports=r},function(t,e){t.exports=function(t){var e=typeof t;return null!=t&&(\\\"object\\\"==e||\\\"function\\\"==e)}},function(t,e,n){var r;try{r=n(115)}catch(o){}r||(r=window.graphlib),t.exports=r},function(t,e,n){var r=n(63),o=\\\"object\\\"==typeof self&&self&&self.Object===Object&&self,i=r||o||Function(\\\"return this\\\")();t.exports=i},function(t,e){t.exports=function(t){return null!=t&&\\\"object\\\"==typeof t}},function(t,e,n){var r=n(20),o=n(47);t.exports=function(t){return null!=t&&o(t.length)&&!r(t)}},function(t,e,n){var r=n(174),o=n(184),i=n(13),a=n(1),u=n(191);t.exports=function(t){return\\\"function\\\"==typeof t?t:null==t?i:\\\"object\\\"==typeof t?a(t)?o(t[0],t[1]):r(t):u(t)}},function(t,e,n){var r=n(66),o=n(49),i=n(8);t.exports=function(t){return i(t)?r(t):o(t)}},function(t,e,n){var r=n(128),o=n(134);t.exports=function(t,e){var n=o(t,e);return r(n)?n:void 0}},function(t,e,n){var r=n(15),o=n(130),i=n(131),a=r?r.toStringTag:void 0;t.exports=function(t){return null==t?void 0===t?\\\"[object Undefined]\\\":\\\"[object Null]\\\":a&&a in Object(t)?o(t):i(t)}},function(t,e){t.exports=function(t){return t}},function(t,e){t.exports=function(t,e){return t===e||t!==t&&e!==e}},function(t,e,n){var r=n(6).Symbol;t.exports=r},function(t,e,n){(function(t){var r=n(6),o=n(150),i=e&&!e.nodeType&&e,a=i&&\\\"object\\\"==typeof t&&t&&!t.nodeType&&t,u=a&&a.exports===i?r.Buffer:void 0,s=(u?u.isBuffer:void 0)||o;t.exports=s}).call(this,n(46)(t))},function(t,e,n){var r=n(66),o=n(154),i=n(8);t.exports=function(t){return i(t)?r(t,!0):o(t)}},function(t,e,n){var r=n(159),o=n(43),i=n(160),a=n(75),u=n(161),s=n(12),c=n(64),f=c(r),d=c(o),h=c(i),p=c(a),l=c(u),v=s;(r&&\\\"[object DataView]\\\"!=v(new r(new ArrayBuffer(1)))||o&&\\\"[object Map]\\\"!=v(new o)||i&&\\\"[object Promise]\\\"!=v(i.resolve())||a&&\\\"[object Set]\\\"!=v(new a)||u&&\\\"[object WeakMap]\\\"!=v(new u))&&(v=function(t){var e=s(t),n=\\\"[object Object]\\\"==e?t.constructor:void 0,r=n?c(n):\\\"\\\";if(r)switch(r){case f:return\\\"[object DataView]\\\";case d:return\\\"[object Map]\\\";case h:return\\\"[object Promise]\\\";case p:return\\\"[object Set]\\\";case l:return\\\"[object WeakMap]\\\"}return e}),t.exports=v},function(t,e,n){var r=n(12),o=n(7);t.exports=function(t){return\\\"symbol\\\"==typeof t||o(t)&&\\\"[object Symbol]\\\"==r(t)}},function(t,e,n){var r=n(12),o=n(4);t.exports=function(t){if(!o(t))return!1;var e=r(t);return\\\"[object Function]\\\"==e||\\\"[object GeneratorFunction]\\\"==e||\\\"[object AsyncFunction]\\\"==e||\\\"[object Proxy]\\\"==e}},function(t,e,n){var r=n(30),o=n(31);t.exports=function(t,e,n,i){var a=!n;n||(n={});for(var u=-1,s=e.length;++u<s;){var c=e[u],f=i?i(n[c],t[c],c,n,t):void 0;void 0===f&&(f=t[c]),a?o(n,c,f):r(n,c,f)}return n}},function(t,e,n){var r=n(149),o=n(7),i=Object.prototype,a=i.hasOwnProperty,u=i.propertyIsEnumerable,s=r(function(){return arguments}())?r:function(t){return o(t)&&a.call(t,\\\"callee\\\")&&!u.call(t,\\\"callee\\\")};t.exports=s},function(t,e,n){var r=n(151),o=n(33),i=n(48),a=i&&i.isTypedArray,u=a?o(a):r;t.exports=u},function(t,e,n){var r=n(19);t.exports=function(t){if(\\\"string\\\"==typeof t||r(t))return t;var e=t+\\\"\\\";return\\\"0\\\"==e&&1/t==-1/0?\\\"-0\\\":e}},function(t,e,n){var r=n(26),o=n(123),i=n(124),a=n(125),u=n(126),s=n(127);function c(t){var e=this.__data__=new r(t);this.size=e.size}c.prototype.clear=o,c.prototype.delete=i,c.prototype.get=a,c.prototype.has=u,c.prototype.set=s,t.exports=c},function(t,e,n){var r=n(118),o=n(119),i=n(120),a=n(121),u=n(122);function s(t){var e=-1,n=null==t?0:t.length;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}s.prototype.clear=r,s.prototype.delete=o,s.prototype.get=i,s.prototype.has=a,s.prototype.set=u,t.exports=s},function(t,e,n){var r=n(14);t.exports=function(t,e){for(var n=t.length;n--;)if(r(t[n][0],e))return n;return-1}},function(t,e,n){var r=n(11)(Object,\\\"create\\\");t.exports=r},function(t,e,n){var r=n(143);t.exports=function(t,e){var n=t.__data__;return r(e)?n[\\\"string\\\"==typeof e?\\\"string\\\":\\\"hash\\\"]:n.map}},function(t,e,n){var r=n(31),o=n(14),i=Object.prototype.hasOwnProperty;t.exports=function(t,e,n){var a=t[e];i.call(t,e)&&o(a,n)&&(void 0!==n||e in t)||r(t,e,n)}},function(t,e,n){var r=n(65);t.exports=function(t,e,n){\\\"__proto__\\\"==e&&r?r(t,e,{configurable:!0,enumerable:!0,value:n,writable:!0}):t[e]=n}},function(t,e){var n=/^(?:0|[1-9]\\\\d*)$/;t.exports=function(t,e){var r=typeof t;return!!(e=null==e?9007199254740991:e)&&(\\\"number\\\"==r||\\\"symbol\\\"!=r&&n.test(t))&&t>-1&&t%1==0&&t<e}},function(t,e){t.exports=function(t){return function(e){return t(e)}}},function(t,e){var n=Object.prototype;t.exports=function(t){var e=t&&t.constructor;return t===(\\\"function\\\"==typeof e&&e.prototype||n)}},function(t,e,n){var r=n(67)(Object.getPrototypeOf,Object);t.exports=r},function(t,e,n){var r=n(54),o=n(172)(r);t.exports=o},function(t,e,n){var r=n(1),o=n(58),i=n(186),a=n(90);t.exports=function(t,e){return r(t)?t:o(t,e)?[t]:i(a(t))}},function(t,e){t.exports=function(t,e){for(var n=-1,r=null==t?0:t.length,o=Array(r);++n<r;)o[n]=e(t[n],n,t);return o}},function(t,e,n){var r=n(13),o=n(99),i=n(100);t.exports=function(t,e){return i(o(t,e,r),t+\\\"\\\")}},function(t,e,n){var r=n(14),o=n(8),i=n(32),a=n(4);t.exports=function(t,e,n){if(!a(n))return!1;var u=typeof e;return!!(\\\"number\\\"==u?o(n)&&i(e,n.length):\\\"string\\\"==u&&e in n)&&r(n[e],t)}},function(t,e,n){\\\"use strict\\\";var r=n(0);t.exports={longestPath:function(t){var e={};r.forEach(t.sources(),(function n(o){var i=t.node(o);if(r.has(e,o))return i.rank;e[o]=!0;var a=r.min(r.map(t.outEdges(o),(function(e){return n(e.w)-t.edge(e).minlen})));return a!==Number.POSITIVE_INFINITY&&void 0!==a&&null!==a||(a=0),i.rank=a}))},slack:function(t,e){return t.node(e.w).rank-t.node(e.v).rank-t.edge(e).minlen}}},function(t,e,n){\\\"use strict\\\";var r=n(3);t.exports=o;function o(t){this._isDirected=!r.has(t,\\\"directed\\\")||t.directed,this._isMultigraph=!!r.has(t,\\\"multigraph\\\")&&t.multigraph,this._isCompound=!!r.has(t,\\\"compound\\\")&&t.compound,this._label=void 0,this._defaultNodeLabelFn=r.constant(void 0),this._defaultEdgeLabelFn=r.constant(void 0),this._nodes={},this._isCompound&&(this._parent={},this._children={},this._children[\\\"\\\\0\\\"]={}),this._in={},this._preds={},this._out={},this._sucs={},this._edgeObjs={},this._edgeLabels={}}function i(t,e){t[e]?t[e]++:t[e]=1}function a(t,e){--t[e]||delete t[e]}function u(t,e,n,o){var i=\\\"\\\"+e,a=\\\"\\\"+n;if(!t&&i>a){var u=i;i=a,a=u}return i+\\\"\\\\x01\\\"+a+\\\"\\\\x01\\\"+(r.isUndefined(o)?\\\"\\\\0\\\":o)}function s(t,e,n,r){var o=\\\"\\\"+e,i=\\\"\\\"+n;if(!t&&o>i){var a=o;o=i,i=a}var u={v:o,w:i};return r&&(u.name=r),u}function c(t,e){return u(t,e.v,e.w,e.name)}o.prototype._nodeCount=0,o.prototype._edgeCount=0,o.prototype.isDirected=function(){return this._isDirected},o.prototype.isMultigraph=function(){return this._isMultigraph},o.prototype.isCompound=function(){return this._isCompound},o.prototype.setGraph=function(t){return this._label=t,this},o.prototype.graph=function(){return this._label},o.prototype.setDefaultNodeLabel=function(t){return r.isFunction(t)||(t=r.constant(t)),this._defaultNodeLabelFn=t,this},o.prototype.nodeCount=function(){return this._nodeCount},o.prototype.nodes=function(){return r.keys(this._nodes)},o.prototype.sources=function(){var t=this;return r.filter(this.nodes(),(function(e){return r.isEmpty(t._in[e])}))},o.prototype.sinks=function(){var t=this;return r.filter(this.nodes(),(function(e){return r.isEmpty(t._out[e])}))},o.prototype.setNodes=function(t,e){var n=arguments,o=this;return r.each(t,(function(t){n.length>1?o.setNode(t,e):o.setNode(t)})),this},o.prototype.setNode=function(t,e){return r.has(this._nodes,t)?(arguments.length>1&&(this._nodes[t]=e),this):(this._nodes[t]=arguments.length>1?e:this._defaultNodeLabelFn(t),this._isCompound&&(this._parent[t]=\\\"\\\\0\\\",this._children[t]={},this._children[\\\"\\\\0\\\"][t]=!0),this._in[t]={},this._preds[t]={},this._out[t]={},this._sucs[t]={},++this._nodeCount,this)},o.prototype.node=function(t){return this._nodes[t]},o.prototype.hasNode=function(t){return r.has(this._nodes,t)},o.prototype.removeNode=function(t){var e=this;if(r.has(this._nodes,t)){var n=function(t){e.removeEdge(e._edgeObjs[t])};delete this._nodes[t],this._isCompound&&(this._removeFromParentsChildList(t),delete this._parent[t],r.each(this.children(t),(function(t){e.setParent(t)})),delete this._children[t]),r.each(r.keys(this._in[t]),n),delete this._in[t],delete this._preds[t],r.each(r.keys(this._out[t]),n),delete this._out[t],delete this._sucs[t],--this._nodeCount}return this},o.prototype.setParent=function(t,e){if(!this._isCompound)throw new Error(\\\"Cannot set parent in a non-compound graph\\\");if(r.isUndefined(e))e=\\\"\\\\0\\\";else{for(var n=e+=\\\"\\\";!r.isUndefined(n);n=this.parent(n))if(n===t)throw new Error(\\\"Setting \\\"+e+\\\" as parent of \\\"+t+\\\" would create a cycle\\\");this.setNode(e)}return this.setNode(t),this._removeFromParentsChildList(t),this._parent[t]=e,this._children[e][t]=!0,this},o.prototype._removeFromParentsChildList=function(t){delete this._children[this._parent[t]][t]},o.prototype.parent=function(t){if(this._isCompound){var e=this._parent[t];if(\\\"\\\\0\\\"!==e)return e}},o.prototype.children=function(t){if(r.isUndefined(t)&&(t=\\\"\\\\0\\\"),this._isCompound){var e=this._children[t];if(e)return r.keys(e)}else{if(\\\"\\\\0\\\"===t)return this.nodes();if(this.hasNode(t))return[]}},o.prototype.predecessors=function(t){var e=this._preds[t];if(e)return r.keys(e)},o.prototype.successors=function(t){var e=this._sucs[t];if(e)return r.keys(e)},o.prototype.neighbors=function(t){var e=this.predecessors(t);if(e)return r.union(e,this.successors(t))},o.prototype.isLeaf=function(t){return 0===(this.isDirected()?this.successors(t):this.neighbors(t)).length},o.prototype.filterNodes=function(t){var e=new this.constructor({directed:this._isDirected,multigraph:this._isMultigraph,compound:this._isCompound});e.setGraph(this.graph());var n=this;r.each(this._nodes,(function(n,r){t(r)&&e.setNode(r,n)})),r.each(this._edgeObjs,(function(t){e.hasNode(t.v)&&e.hasNode(t.w)&&e.setEdge(t,n.edge(t))}));var o={};return this._isCompound&&r.each(e.nodes(),(function(t){e.setParent(t,function t(r){var i=n.parent(r);return void 0===i||e.hasNode(i)?(o[r]=i,i):i in o?o[i]:t(i)}(t))})),e},o.prototype.setDefaultEdgeLabel=function(t){return r.isFunction(t)||(t=r.constant(t)),this._defaultEdgeLabelFn=t,this},o.prototype.edgeCount=function(){return this._edgeCount},o.prototype.edges=function(){return r.values(this._edgeObjs)},o.prototype.setPath=function(t,e){var n=this,o=arguments;return r.reduce(t,(function(t,r){return o.length>1?n.setEdge(t,r,e):n.setEdge(t,r),r})),this},o.prototype.setEdge=function(){var t,e,n,o,a=!1,c=arguments[0];\\\"object\\\"===typeof c&&null!==c&&\\\"v\\\"in c?(t=c.v,e=c.w,n=c.name,2===arguments.length&&(o=arguments[1],a=!0)):(t=c,e=arguments[1],n=arguments[3],arguments.length>2&&(o=arguments[2],a=!0)),t=\\\"\\\"+t,e=\\\"\\\"+e,r.isUndefined(n)||(n=\\\"\\\"+n);var f=u(this._isDirected,t,e,n);if(r.has(this._edgeLabels,f))return a&&(this._edgeLabels[f]=o),this;if(!r.isUndefined(n)&&!this._isMultigraph)throw new Error(\\\"Cannot set a named edge when isMultigraph = false\\\");this.setNode(t),this.setNode(e),this._edgeLabels[f]=a?o:this._defaultEdgeLabelFn(t,e,n);var d=s(this._isDirected,t,e,n);return t=d.v,e=d.w,Object.freeze(d),this._edgeObjs[f]=d,i(this._preds[e],t),i(this._sucs[t],e),this._in[e][f]=d,this._out[t][f]=d,this._edgeCount++,this},o.prototype.edge=function(t,e,n){var r=1===arguments.length?c(this._isDirected,arguments[0]):u(this._isDirected,t,e,n);return this._edgeLabels[r]},o.prototype.hasEdge=function(t,e,n){var o=1===arguments.length?c(this._isDirected,arguments[0]):u(this._isDirected,t,e,n);return r.has(this._edgeLabels,o)},o.prototype.removeEdge=function(t,e,n){var r=1===arguments.length?c(this._isDirected,arguments[0]):u(this._isDirected,t,e,n),o=this._edgeObjs[r];return o&&(t=o.v,e=o.w,delete this._edgeLabels[r],delete this._edgeObjs[r],a(this._preds[e],t),a(this._sucs[t],e),delete this._in[e][r],delete this._out[t][r],this._edgeCount--),this},o.prototype.inEdges=function(t,e){var n=this._in[t];if(n){var o=r.values(n);return e?r.filter(o,(function(t){return t.v===e})):o}},o.prototype.outEdges=function(t,e){var n=this._out[t];if(n){var o=r.values(n);return e?r.filter(o,(function(t){return t.w===e})):o}},o.prototype.nodeEdges=function(t,e){var n=this.inEdges(t,e);if(n)return n.concat(this.outEdges(t,e))}},function(t,e,n){var r=n(11)(n(6),\\\"Map\\\");t.exports=r},function(t,e,n){var r=n(135),o=n(142),i=n(144),a=n(145),u=n(146);function s(t){var e=-1,n=null==t?0:t.length;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}s.prototype.clear=r,s.prototype.delete=o,s.prototype.get=i,s.prototype.has=a,s.prototype.set=u,t.exports=s},function(t,e){t.exports=function(t,e){for(var n=-1,r=null==t?0:t.length;++n<r&&!1!==e(t[n],n,t););return t}},function(t,e){t.exports=function(t){return t.webpackPolyfill||(t.deprecate=function(){},t.paths=[],t.children||(t.children=[]),Object.defineProperty(t,\\\"loaded\\\",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,\\\"id\\\",{enumerable:!0,get:function(){return t.i}}),t.webpackPolyfill=1),t}},function(t,e){t.exports=function(t){return\\\"number\\\"==typeof t&&t>-1&&t%1==0&&t<=9007199254740991}},function(t,e,n){(function(t){var r=n(63),o=e&&!e.nodeType&&e,i=o&&\\\"object\\\"==typeof t&&t&&!t.nodeType&&t,a=i&&i.exports===o&&r.process,u=function(){try{var t=i&&i.require&&i.require(\\\"util\\\").types;return t||a&&a.binding&&a.binding(\\\"util\\\")}catch(e){}}();t.exports=u}).call(this,n(46)(t))},function(t,e,n){var r=n(34),o=n(152),i=Object.prototype.hasOwnProperty;t.exports=function(t){if(!r(t))return o(t);var e=[];for(var n in Object(t))i.call(t,n)&&\\\"constructor\\\"!=n&&e.push(n);return e}},function(t,e,n){var r=n(70),o=n(71),i=Object.prototype.propertyIsEnumerable,a=Object.getOwnPropertySymbols,u=a?function(t){return null==t?[]:(t=Object(t),r(a(t),(function(e){return i.call(t,e)})))}:o;t.exports=u},function(t,e){t.exports=function(t,e){for(var n=-1,r=e.length,o=t.length;++n<r;)t[o+n]=e[n];return t}},function(t,e,n){var r=n(76);t.exports=function(t){var e=new t.constructor(t.byteLength);return new r(e).set(new r(t)),e}},function(t,e){t.exports=function(t){return function(){return t}}},function(t,e,n){var r=n(55),o=n(10);t.exports=function(t,e){return t&&r(t,e,o)}},function(t,e,n){var r=n(171)();t.exports=r},function(t,e){t.exports=function(t){var e=-1,n=Array(t.size);return t.forEach((function(t){n[++e]=t})),n}},function(t,e,n){var r=n(37),o=n(24);t.exports=function(t,e){for(var n=0,i=(e=r(e,t)).length;null!=t&&n<i;)t=t[o(e[n++])];return n&&n==i?t:void 0}},function(t,e,n){var r=n(1),o=n(19),i=/\\\\.|\\\\[(?:[^[\\\\]]*|([\\\"'])(?:(?!\\\\1)[^\\\\\\\\]|\\\\\\\\.)*?\\\\1)\\\\]/,a=/^\\\\w*$/;t.exports=function(t,e){if(r(t))return!1;var n=typeof t;return!(\\\"number\\\"!=n&&\\\"symbol\\\"!=n&&\\\"boolean\\\"!=n&&null!=t&&!o(t))||(a.test(t)||!i.test(t)||null!=e&&t in Object(e))}},function(t,e,n){var r=n(51),o=n(205);t.exports=function t(e,n,i,a,u){var s=-1,c=e.length;for(i||(i=o),u||(u=[]);++s<c;){var f=e[s];n>0&&i(f)?n>1?t(f,n-1,i,a,u):r(u,f):a||(u[u.length]=f)}return u}},function(t,e,n){var r=n(19);t.exports=function(t,e,n){for(var o=-1,i=t.length;++o<i;){var a=t[o],u=e(a);if(null!=u&&(void 0===s?u===u&&!r(u):n(u,s)))var s=u,c=a}return c}},function(t,e,n){t.exports={graphlib:n(5),layout:n(229),debug:n(288),util:{time:n(2).time,notime:n(2).notime},version:n(289)}},function(t,e,n){var r=n(25),o=n(45),i=n(30),a=n(147),u=n(153),s=n(68),c=n(69),f=n(156),d=n(157),h=n(73),p=n(158),l=n(18),v=n(162),y=n(163),g=n(78),b=n(1),m=n(16),x=n(167),_=n(4),w=n(169),E=n(10),j={};j[\\\"[object Arguments]\\\"]=j[\\\"[object Array]\\\"]=j[\\\"[object ArrayBuffer]\\\"]=j[\\\"[object DataView]\\\"]=j[\\\"[object Boolean]\\\"]=j[\\\"[object Date]\\\"]=j[\\\"[object Float32Array]\\\"]=j[\\\"[object Float64Array]\\\"]=j[\\\"[object Int8Array]\\\"]=j[\\\"[object Int16Array]\\\"]=j[\\\"[object Int32Array]\\\"]=j[\\\"[object Map]\\\"]=j[\\\"[object Number]\\\"]=j[\\\"[object Object]\\\"]=j[\\\"[object RegExp]\\\"]=j[\\\"[object Set]\\\"]=j[\\\"[object String]\\\"]=j[\\\"[object Symbol]\\\"]=j[\\\"[object Uint8Array]\\\"]=j[\\\"[object Uint8ClampedArray]\\\"]=j[\\\"[object Uint16Array]\\\"]=j[\\\"[object Uint32Array]\\\"]=!0,j[\\\"[object Error]\\\"]=j[\\\"[object Function]\\\"]=j[\\\"[object WeakMap]\\\"]=!1,t.exports=function t(e,n,k,N,M,S){var O,A=1&n,I=2&n,C=4&n;if(k&&(O=M?k(e,N,M,S):k(e)),void 0!==O)return O;if(!_(e))return e;var P=b(e);if(P){if(O=v(e),!A)return c(e,O)}else{var z=l(e),L=\\\"[object Function]\\\"==z||\\\"[object GeneratorFunction]\\\"==z;if(m(e))return s(e,A);if(\\\"[object Object]\\\"==z||\\\"[object Arguments]\\\"==z||L&&!M){if(O=I||L?{}:g(e),!A)return I?d(e,u(O,e)):f(e,a(O,e))}else{if(!j[z])return M?e:{};O=y(e,z,A)}}S||(S=new r);var F=S.get(e);if(F)return F;S.set(e,O),w(e)?e.forEach((function(r){O.add(t(r,n,k,r,e,S))})):x(e)&&e.forEach((function(r,o){O.set(o,t(r,n,k,o,e,S))}));var R=C?I?p:h:I?keysIn:E,D=P?void 0:R(e);return o(D||e,(function(r,o){D&&(r=e[o=r]),i(O,o,t(r,n,k,o,e,S))})),O}},function(t,e,n){(function(e){var n=\\\"object\\\"==typeof e&&e&&e.Object===Object&&e;t.exports=n}).call(this,n(129))},function(t,e){var n=Function.prototype.toString;t.exports=function(t){if(null!=t){try{return n.call(t)}catch(e){}try{return t+\\\"\\\"}catch(e){}}return\\\"\\\"}},function(t,e,n){var r=n(11),o=function(){try{var t=r(Object,\\\"defineProperty\\\");return t({},\\\"\\\",{}),t}catch(e){}}();t.exports=o},function(t,e,n){var r=n(148),o=n(22),i=n(1),a=n(16),u=n(32),s=n(23),c=Object.prototype.hasOwnProperty;t.exports=function(t,e){var n=i(t),f=!n&&o(t),d=!n&&!f&&a(t),h=!n&&!f&&!d&&s(t),p=n||f||d||h,l=p?r(t.length,String):[],v=l.length;for(var y in t)!e&&!c.call(t,y)||p&&(\\\"length\\\"==y||d&&(\\\"offset\\\"==y||\\\"parent\\\"==y)||h&&(\\\"buffer\\\"==y||\\\"byteLength\\\"==y||\\\"byteOffset\\\"==y)||u(y,v))||l.push(y);return l}},function(t,e){t.exports=function(t,e){return function(n){return t(e(n))}}},function(t,e,n){(function(t){var r=n(6),o=e&&!e.nodeType&&e,i=o&&\\\"object\\\"==typeof t&&t&&!t.nodeType&&t,a=i&&i.exports===o?r.Buffer:void 0,u=a?a.allocUnsafe:void 0;t.exports=function(t,e){if(e)return t.slice();var n=t.length,r=u?u(n):new t.constructor(n);return t.copy(r),r}}).call(this,n(46)(t))},function(t,e){t.exports=function(t,e){var n=-1,r=t.length;for(e||(e=Array(r));++n<r;)e[n]=t[n];return e}},function(t,e){t.exports=function(t,e){for(var n=-1,r=null==t?0:t.length,o=0,i=[];++n<r;){var a=t[n];e(a,n,t)&&(i[o++]=a)}return i}},function(t,e){t.exports=function(){return[]}},function(t,e,n){var r=n(51),o=n(35),i=n(50),a=n(71),u=Object.getOwnPropertySymbols?function(t){for(var e=[];t;)r(e,i(t)),t=o(t);return e}:a;t.exports=u},function(t,e,n){var r=n(74),o=n(50),i=n(10);t.exports=function(t){return r(t,i,o)}},function(t,e,n){var r=n(51),o=n(1);t.exports=function(t,e,n){var i=e(t);return o(t)?i:r(i,n(t))}},function(t,e,n){var r=n(11)(n(6),\\\"Set\\\");t.exports=r},function(t,e,n){var r=n(6).Uint8Array;t.exports=r},function(t,e,n){var r=n(52);t.exports=function(t,e){var n=e?r(t.buffer):t.buffer;return new t.constructor(n,t.byteOffset,t.length)}},function(t,e,n){var r=n(79),o=n(35),i=n(34);t.exports=function(t){return\\\"function\\\"!=typeof t.constructor||i(t)?{}:r(o(t))}},function(t,e,n){var r=n(4),o=Object.create,i=function(){function t(){}return function(e){if(!r(e))return{};if(o)return o(e);t.prototype=e;var n=new t;return t.prototype=void 0,n}}();t.exports=i},function(t,e,n){t.exports=n(81)},function(t,e,n){var r=n(45),o=n(36),i=n(82),a=n(1);t.exports=function(t,e){return(a(t)?r:o)(t,i(e))}},function(t,e,n){var r=n(13);t.exports=function(t){return\\\"function\\\"==typeof t?t:r}},function(t,e,n){var r=n(70),o=n(173),i=n(9),a=n(1);t.exports=function(t,e){return(a(t)?r:o)(t,i(e,3))}},function(t,e,n){var r=n(176),o=n(7);t.exports=function t(e,n,i,a,u){return e===n||(null==e||null==n||!o(e)&&!o(n)?e!==e&&n!==n:r(e,n,i,a,t,u))}},function(t,e,n){var r=n(86),o=n(179),i=n(87);t.exports=function(t,e,n,a,u,s){var c=1&n,f=t.length,d=e.length;if(f!=d&&!(c&&d>f))return!1;var h=s.get(t);if(h&&s.get(e))return h==e;var p=-1,l=!0,v=2&n?new r:void 0;for(s.set(t,e),s.set(e,t);++p<f;){var y=t[p],g=e[p];if(a)var b=c?a(g,y,p,e,t,s):a(y,g,p,t,e,s);if(void 0!==b){if(b)continue;l=!1;break}if(v){if(!o(e,(function(t,e){if(!i(v,e)&&(y===t||u(y,t,n,a,s)))return v.push(e)}))){l=!1;break}}else if(y!==g&&!u(y,g,n,a,s)){l=!1;break}}return s.delete(t),s.delete(e),l}},function(t,e,n){var r=n(44),o=n(177),i=n(178);function a(t){var e=-1,n=null==t?0:t.length;for(this.__data__=new r;++e<n;)this.add(t[e])}a.prototype.add=a.prototype.push=o,a.prototype.has=i,t.exports=a},function(t,e){t.exports=function(t,e){return t.has(e)}},function(t,e,n){var r=n(4);t.exports=function(t){return t===t&&!r(t)}},function(t,e){t.exports=function(t,e){return function(n){return null!=n&&(n[t]===e&&(void 0!==e||t in Object(n)))}}},function(t,e,n){var r=n(189);t.exports=function(t){return null==t?\\\"\\\":r(t)}},function(t,e,n){var r=n(190),o=n(92);t.exports=function(t,e){return null!=t&&o(t,e,r)}},function(t,e,n){var r=n(37),o=n(22),i=n(1),a=n(32),u=n(47),s=n(24);t.exports=function(t,e,n){for(var c=-1,f=(e=r(e,t)).length,d=!1;++c<f;){var h=s(e[c]);if(!(d=null!=t&&n(t,h)))break;t=t[h]}return d||++c!=f?d:!!(f=null==t?0:t.length)&&u(f)&&a(h,f)&&(i(t)||o(t))}},function(t,e){t.exports=function(t){return function(e){return null==e?void 0:e[t]}}},function(t,e,n){var r=n(193),o=n(92);t.exports=function(t,e){return null!=t&&o(t,e,r)}},function(t,e){t.exports=function(t){return void 0===t}},function(t,e,n){var r=n(38),o=n(9),i=n(97),a=n(1);t.exports=function(t,e){return(a(t)?r:i)(t,o(e,3))}},function(t,e,n){var r=n(36),o=n(8);t.exports=function(t,e){var n=-1,i=o(t)?Array(t.length):[];return r(t,(function(t,r,o){i[++n]=e(t,r,o)})),i}},function(t,e,n){var r=n(195),o=n(36),i=n(9),a=n(196),u=n(1);t.exports=function(t,e,n){var s=u(t)?r:a,c=arguments.length<3;return s(t,i(e,4),n,c,o)}},function(t,e,n){var r=n(206),o=Math.max;t.exports=function(t,e,n){return e=o(void 0===e?t.length-1:e,0),function(){for(var i=arguments,a=-1,u=o(i.length-e,0),s=Array(u);++a<u;)s[a]=i[e+a];a=-1;for(var c=Array(e+1);++a<e;)c[a]=i[a];return c[e]=n(s),r(t,this,c)}}},function(t,e,n){var r=n(207),o=n(208)(r);t.exports=o},function(t,e){t.exports=function(t,e,n,r){for(var o=t.length,i=n+(r?1:-1);r?i--:++i<o;)if(e(t[i],i,t))return i;return-1}},function(t,e,n){var r=n(8),o=n(7);t.exports=function(t){return o(t)&&r(t)}},function(t,e,n){var r=n(217),o=n(10);t.exports=function(t){return null==t?[]:r(t,o(t))}},function(t,e,n){var r=n(3),o=n(105);t.exports=function(t,e,n,r){return function(t,e,n,r){var i,a,u={},s=new o,c=function(t){var e=t.v!==i?t.v:t.w,r=u[e],o=n(t),c=a.distance+o;if(o<0)throw new Error(\\\"dijkstra does not allow negative edge weights. Bad edge: \\\"+t+\\\" Weight: \\\"+o);c<r.distance&&(r.distance=c,r.predecessor=i,s.decrease(e,c))};t.nodes().forEach((function(t){var n=t===e?0:Number.POSITIVE_INFINITY;u[t]={distance:n},s.add(t,n)}));for(;s.size()>0&&(i=s.removeMin(),(a=u[i]).distance!==Number.POSITIVE_INFINITY);)r(i).forEach(c);return u}(t,String(e),n||i,r||function(e){return t.outEdges(e)})};var i=r.constant(1)},function(t,e,n){var r=n(3);function o(){this._arr=[],this._keyIndices={}}t.exports=o,o.prototype.size=function(){return this._arr.length},o.prototype.keys=function(){return this._arr.map((function(t){return t.key}))},o.prototype.has=function(t){return r.has(this._keyIndices,t)},o.prototype.priority=function(t){var e=this._keyIndices[t];if(void 0!==e)return this._arr[e].priority},o.prototype.min=function(){if(0===this.size())throw new Error(\\\"Queue underflow\\\");return this._arr[0].key},o.prototype.add=function(t,e){var n=this._keyIndices;if(t=String(t),!r.has(n,t)){var o=this._arr,i=o.length;return n[t]=i,o.push({key:t,priority:e}),this._decrease(i),!0}return!1},o.prototype.removeMin=function(){this._swap(0,this._arr.length-1);var t=this._arr.pop();return delete this._keyIndices[t.key],this._heapify(0),t.key},o.prototype.decrease=function(t,e){var n=this._keyIndices[t];if(e>this._arr[n].priority)throw new Error(\\\"New priority is greater than current priority. Key: \\\"+t+\\\" Old: \\\"+this._arr[n].priority+\\\" New: \\\"+e);this._arr[n].priority=e,this._decrease(n)},o.prototype._heapify=function(t){var e=this._arr,n=2*t,r=n+1,o=t;n<e.length&&(o=e[n].priority<e[o].priority?n:o,r<e.length&&(o=e[r].priority<e[o].priority?r:o),o!==t&&(this._swap(t,o),this._heapify(o)))},o.prototype._decrease=function(t){for(var e,n=this._arr,r=n[t].priority;0!==t&&!(n[e=t>>1].priority<r);)this._swap(t,e),t=e},o.prototype._swap=function(t,e){var n=this._arr,r=this._keyIndices,o=n[t],i=n[e];n[t]=i,n[e]=o,r[i.key]=t,r[o.key]=e}},function(t,e,n){var r=n(3);t.exports=function(t){var e=0,n=[],o={},i=[];return t.nodes().forEach((function(a){r.has(o,a)||function a(u){var s=o[u]={onStack:!0,lowlink:e,index:e++};if(n.push(u),t.successors(u).forEach((function(t){r.has(o,t)?o[t].onStack&&(s.lowlink=Math.min(s.lowlink,o[t].index)):(a(t),s.lowlink=Math.min(s.lowlink,o[t].lowlink))})),s.lowlink===s.index){var c,f=[];do{c=n.pop(),o[c].onStack=!1,f.push(c)}while(u!==c);i.push(f)}}(a)})),i}},function(t,e,n){var r=n(3);function o(t){var e={},n={},o=[];if(r.each(t.sinks(),(function a(u){if(r.has(n,u))throw new i;r.has(e,u)||(n[u]=!0,e[u]=!0,r.each(t.predecessors(u),a),delete n[u],o.push(u))})),r.size(e)!==t.nodeCount())throw new i;return o}function i(){}t.exports=o,o.CycleException=i,i.prototype=new Error},function(t,e,n){var r=n(3);t.exports=function(t,e,n){r.isArray(e)||(e=[e]);var o=(t.isDirected()?t.successors:t.neighbors).bind(t),i=[],a={};return r.each(e,(function(e){if(!t.hasNode(e))throw new Error(\\\"Graph does not have node: \\\"+e);!function t(e,n,o,i,a,u){r.has(i,n)||(i[n]=!0,o||u.push(n),r.each(a(n),(function(n){t(e,n,o,i,a,u)})),o&&u.push(n))}(t,e,\\\"post\\\"===n,a,o,i)})),i}},function(t,e,n){var r=n(236);t.exports=function(t){return t?(t=r(t))===1/0||t===-1/0?17976931348623157e292*(t<0?-1:1):t===t?t:0:0===t?t:0}},function(t,e,n){var r=n(59);t.exports=function(t){return(null==t?0:t.length)?r(t,1):[]}},function(t,e,n){var r=n(31),o=n(14);t.exports=function(t,e,n){(void 0!==n&&!o(t[e],n)||void 0===n&&!(e in t))&&r(t,e,n)}},function(t,e){t.exports=function(t,e){if((\\\"constructor\\\"!==e||\\\"function\\\"!==typeof t[e])&&\\\"__proto__\\\"!=e)return t[e]}},function(t,e){t.exports=function(t,e){return t<e}},function(t,e,n){\\\"use strict\\\";var r=n(0),o=n(5).Graph,i=n(41).slack;function a(t,e){return r.forEach(t.nodes(),(function n(o){r.forEach(e.nodeEdges(o),(function(r){var a=r.v,u=o===a?r.w:a;t.hasNode(u)||i(e,r)||(t.setNode(u,{}),t.setEdge(o,u,{}),n(u))}))})),t.nodeCount()}function u(t,e){return r.minBy(e.edges(),(function(n){if(t.hasNode(n.v)!==t.hasNode(n.w))return i(e,n)}))}function s(t,e,n){r.forEach(t.nodes(),(function(t){e.node(t).rank+=n}))}t.exports=function(t){var e,n,r=new o({directed:!1}),c=t.nodes()[0],f=t.nodeCount();r.setNode(c,{});for(;a(r,t)<f;)e=u(r,t),n=r.hasNode(e.v)?i(t,e):-i(t,e),s(r,t,n);return r}},function(t,e,n){var r=n(116);t.exports={Graph:r.Graph,json:n(219),alg:n(220),version:r.version}},function(t,e,n){t.exports={Graph:n(42),version:n(218)}},function(t,e,n){var r=n(62);t.exports=function(t){return r(t,4)}},function(t,e){t.exports=function(){this.__data__=[],this.size=0}},function(t,e,n){var r=n(27),o=Array.prototype.splice;t.exports=function(t){var e=this.__data__,n=r(e,t);return!(n<0)&&(n==e.length-1?e.pop():o.call(e,n,1),--this.size,!0)}},function(t,e,n){var r=n(27);t.exports=function(t){var e=this.__data__,n=r(e,t);return n<0?void 0:e[n][1]}},function(t,e,n){var r=n(27);t.exports=function(t){return r(this.__data__,t)>-1}},function(t,e,n){var r=n(27);t.exports=function(t,e){var n=this.__data__,o=r(n,t);return o<0?(++this.size,n.push([t,e])):n[o][1]=e,this}},function(t,e,n){var r=n(26);t.exports=function(){this.__data__=new r,this.size=0}},function(t,e){t.exports=function(t){var e=this.__data__,n=e.delete(t);return this.size=e.size,n}},function(t,e){t.exports=function(t){return this.__data__.get(t)}},function(t,e){t.exports=function(t){return this.__data__.has(t)}},function(t,e,n){var r=n(26),o=n(43),i=n(44);t.exports=function(t,e){var n=this.__data__;if(n instanceof r){var a=n.__data__;if(!o||a.length<199)return a.push([t,e]),this.size=++n.size,this;n=this.__data__=new i(a)}return n.set(t,e),this.size=n.size,this}},function(t,e,n){var r=n(20),o=n(132),i=n(4),a=n(64),u=/^\\\\[object .+?Constructor\\\\]$/,s=Function.prototype,c=Object.prototype,f=s.toString,d=c.hasOwnProperty,h=RegExp(\\\"^\\\"+f.call(d).replace(/[\\\\\\\\^$.*+?()[\\\\]{}|]/g,\\\"\\\\\\\\$&\\\").replace(/hasOwnProperty|(function).*?(?=\\\\\\\\\\\\()| for .+?(?=\\\\\\\\\\\\])/g,\\\"$1.*?\\\")+\\\"$\\\");t.exports=function(t){return!(!i(t)||o(t))&&(r(t)?h:u).test(a(t))}},function(t,e){var n;n=function(){return this}();try{n=n||new Function(\\\"return this\\\")()}catch(r){\\\"object\\\"===typeof window&&(n=window)}t.exports=n},function(t,e,n){var r=n(15),o=Object.prototype,i=o.hasOwnProperty,a=o.toString,u=r?r.toStringTag:void 0;t.exports=function(t){var e=i.call(t,u),n=t[u];try{t[u]=void 0;var r=!0}catch(s){}var o=a.call(t);return r&&(e?t[u]=n:delete t[u]),o}},function(t,e){var n=Object.prototype.toString;t.exports=function(t){return n.call(t)}},function(t,e,n){var r=n(133),o=function(){var t=/[^.]+$/.exec(r&&r.keys&&r.keys.IE_PROTO||\\\"\\\");return t?\\\"Symbol(src)_1.\\\"+t:\\\"\\\"}();t.exports=function(t){return!!o&&o in t}},function(t,e,n){var r=n(6)[\\\"__core-js_shared__\\\"];t.exports=r},function(t,e){t.exports=function(t,e){return null==t?void 0:t[e]}},function(t,e,n){var r=n(136),o=n(26),i=n(43);t.exports=function(){this.size=0,this.__data__={hash:new r,map:new(i||o),string:new r}}},function(t,e,n){var r=n(137),o=n(138),i=n(139),a=n(140),u=n(141);function s(t){var e=-1,n=null==t?0:t.length;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}s.prototype.clear=r,s.prototype.delete=o,s.prototype.get=i,s.prototype.has=a,s.prototype.set=u,t.exports=s},function(t,e,n){var r=n(28);t.exports=function(){this.__data__=r?r(null):{},this.size=0}},function(t,e){t.exports=function(t){var e=this.has(t)&&delete this.__data__[t];return this.size-=e?1:0,e}},function(t,e,n){var r=n(28),o=Object.prototype.hasOwnProperty;t.exports=function(t){var e=this.__data__;if(r){var n=e[t];return\\\"__lodash_hash_undefined__\\\"===n?void 0:n}return o.call(e,t)?e[t]:void 0}},function(t,e,n){var r=n(28),o=Object.prototype.hasOwnProperty;t.exports=function(t){var e=this.__data__;return r?void 0!==e[t]:o.call(e,t)}},function(t,e,n){var r=n(28);t.exports=function(t,e){var n=this.__data__;return this.size+=this.has(t)?0:1,n[t]=r&&void 0===e?\\\"__lodash_hash_undefined__\\\":e,this}},function(t,e,n){var r=n(29);t.exports=function(t){var e=r(this,t).delete(t);return this.size-=e?1:0,e}},function(t,e){t.exports=function(t){var e=typeof t;return\\\"string\\\"==e||\\\"number\\\"==e||\\\"symbol\\\"==e||\\\"boolean\\\"==e?\\\"__proto__\\\"!==t:null===t}},function(t,e,n){var r=n(29);t.exports=function(t){return r(this,t).get(t)}},function(t,e,n){var r=n(29);t.exports=function(t){return r(this,t).has(t)}},function(t,e,n){var r=n(29);t.exports=function(t,e){var n=r(this,t),o=n.size;return n.set(t,e),this.size+=n.size==o?0:1,this}},function(t,e,n){var r=n(21),o=n(10);t.exports=function(t,e){return t&&r(e,o(e),t)}},function(t,e){t.exports=function(t,e){for(var n=-1,r=Array(t);++n<t;)r[n]=e(n);return r}},function(t,e,n){var r=n(12),o=n(7);t.exports=function(t){return o(t)&&\\\"[object Arguments]\\\"==r(t)}},function(t,e){t.exports=function(){return!1}},function(t,e,n){var r=n(12),o=n(47),i=n(7),a={};a[\\\"[object Float32Array]\\\"]=a[\\\"[object Float64Array]\\\"]=a[\\\"[object Int8Array]\\\"]=a[\\\"[object Int16Array]\\\"]=a[\\\"[object Int32Array]\\\"]=a[\\\"[object Uint8Array]\\\"]=a[\\\"[object Uint8ClampedArray]\\\"]=a[\\\"[object Uint16Array]\\\"]=a[\\\"[object Uint32Array]\\\"]=!0,a[\\\"[object Arguments]\\\"]=a[\\\"[object Array]\\\"]=a[\\\"[object ArrayBuffer]\\\"]=a[\\\"[object Boolean]\\\"]=a[\\\"[object DataView]\\\"]=a[\\\"[object Date]\\\"]=a[\\\"[object Error]\\\"]=a[\\\"[object Function]\\\"]=a[\\\"[object Map]\\\"]=a[\\\"[object Number]\\\"]=a[\\\"[object Object]\\\"]=a[\\\"[object RegExp]\\\"]=a[\\\"[object Set]\\\"]=a[\\\"[object String]\\\"]=a[\\\"[object WeakMap]\\\"]=!1,t.exports=function(t){return i(t)&&o(t.length)&&!!a[r(t)]}},function(t,e,n){var r=n(67)(Object.keys,Object);t.exports=r},function(t,e,n){var r=n(21),o=n(17);t.exports=function(t,e){return t&&r(e,o(e),t)}},function(t,e,n){var r=n(4),o=n(34),i=n(155),a=Object.prototype.hasOwnProperty;t.exports=function(t){if(!r(t))return i(t);var e=o(t),n=[];for(var u in t)(\\\"constructor\\\"!=u||!e&&a.call(t,u))&&n.push(u);return n}},function(t,e){t.exports=function(t){var e=[];if(null!=t)for(var n in Object(t))e.push(n);return e}},function(t,e,n){var r=n(21),o=n(50);t.exports=function(t,e){return r(t,o(t),e)}},function(t,e,n){var r=n(21),o=n(72);t.exports=function(t,e){return r(t,o(t),e)}},function(t,e,n){var r=n(74),o=n(72),i=n(17);t.exports=function(t){return r(t,i,o)}},function(t,e,n){var r=n(11)(n(6),\\\"DataView\\\");t.exports=r},function(t,e,n){var r=n(11)(n(6),\\\"Promise\\\");t.exports=r},function(t,e,n){var r=n(11)(n(6),\\\"WeakMap\\\");t.exports=r},function(t,e){var n=Object.prototype.hasOwnProperty;t.exports=function(t){var e=t.length,r=new t.constructor(e);return e&&\\\"string\\\"==typeof t[0]&&n.call(t,\\\"index\\\")&&(r.index=t.index,r.input=t.input),r}},function(t,e,n){var r=n(52),o=n(164),i=n(165),a=n(166),u=n(77);t.exports=function(t,e,n){var s=t.constructor;switch(e){case\\\"[object ArrayBuffer]\\\":return r(t);case\\\"[object Boolean]\\\":case\\\"[object Date]\\\":return new s(+t);case\\\"[object DataView]\\\":return o(t,n);case\\\"[object Float32Array]\\\":case\\\"[object Float64Array]\\\":case\\\"[object Int8Array]\\\":case\\\"[object Int16Array]\\\":case\\\"[object Int32Array]\\\":case\\\"[object Uint8Array]\\\":case\\\"[object Uint8ClampedArray]\\\":case\\\"[object Uint16Array]\\\":case\\\"[object Uint32Array]\\\":return u(t,n);case\\\"[object Map]\\\":return new s;case\\\"[object Number]\\\":case\\\"[object String]\\\":return new s(t);case\\\"[object RegExp]\\\":return i(t);case\\\"[object Set]\\\":return new s;case\\\"[object Symbol]\\\":return a(t)}}},function(t,e,n){var r=n(52);t.exports=function(t,e){var n=e?r(t.buffer):t.buffer;return new t.constructor(n,t.byteOffset,t.byteLength)}},function(t,e){var n=/\\\\w*$/;t.exports=function(t){var e=new t.constructor(t.source,n.exec(t));return e.lastIndex=t.lastIndex,e}},function(t,e,n){var r=n(15),o=r?r.prototype:void 0,i=o?o.valueOf:void 0;t.exports=function(t){return i?Object(i.call(t)):{}}},function(t,e,n){var r=n(168),o=n(33),i=n(48),a=i&&i.isMap,u=a?o(a):r;t.exports=u},function(t,e,n){var r=n(18),o=n(7);t.exports=function(t){return o(t)&&\\\"[object Map]\\\"==r(t)}},function(t,e,n){var r=n(170),o=n(33),i=n(48),a=i&&i.isSet,u=a?o(a):r;t.exports=u},function(t,e,n){var r=n(18),o=n(7);t.exports=function(t){return o(t)&&\\\"[object Set]\\\"==r(t)}},function(t,e){t.exports=function(t){return function(e,n,r){for(var o=-1,i=Object(e),a=r(e),u=a.length;u--;){var s=a[t?u:++o];if(!1===n(i[s],s,i))break}return e}}},function(t,e,n){var r=n(8);t.exports=function(t,e){return function(n,o){if(null==n)return n;if(!r(n))return t(n,o);for(var i=n.length,a=e?i:-1,u=Object(n);(e?a--:++a<i)&&!1!==o(u[a],a,u););return n}}},function(t,e,n){var r=n(36);t.exports=function(t,e){var n=[];return r(t,(function(t,r,o){e(t,r,o)&&n.push(t)})),n}},function(t,e,n){var r=n(175),o=n(183),i=n(89);t.exports=function(t){var e=o(t);return 1==e.length&&e[0][2]?i(e[0][0],e[0][1]):function(n){return n===t||r(n,t,e)}}},function(t,e,n){var r=n(25),o=n(84);t.exports=function(t,e,n,i){var a=n.length,u=a,s=!i;if(null==t)return!u;for(t=Object(t);a--;){var c=n[a];if(s&&c[2]?c[1]!==t[c[0]]:!(c[0]in t))return!1}for(;++a<u;){var f=(c=n[a])[0],d=t[f],h=c[1];if(s&&c[2]){if(void 0===d&&!(f in t))return!1}else{var p=new r;if(i)var l=i(d,h,f,t,e,p);if(!(void 0===l?o(h,d,3,i,p):l))return!1}}return!0}},function(t,e,n){var r=n(25),o=n(85),i=n(180),a=n(182),u=n(18),s=n(1),c=n(16),f=n(23),d=\\\"[object Object]\\\",h=Object.prototype.hasOwnProperty;t.exports=function(t,e,n,p,l,v){var y=s(t),g=s(e),b=y?\\\"[object Array]\\\":u(t),m=g?\\\"[object Array]\\\":u(e),x=(b=\\\"[object Arguments]\\\"==b?d:b)==d,_=(m=\\\"[object Arguments]\\\"==m?d:m)==d,w=b==m;if(w&&c(t)){if(!c(e))return!1;y=!0,x=!1}if(w&&!x)return v||(v=new r),y||f(t)?o(t,e,n,p,l,v):i(t,e,b,n,p,l,v);if(!(1&n)){var E=x&&h.call(t,\\\"__wrapped__\\\"),j=_&&h.call(e,\\\"__wrapped__\\\");if(E||j){var k=E?t.value():t,N=j?e.value():e;return v||(v=new r),l(k,N,n,p,v)}}return!!w&&(v||(v=new r),a(t,e,n,p,l,v))}},function(t,e){t.exports=function(t){return this.__data__.set(t,\\\"__lodash_hash_undefined__\\\"),this}},function(t,e){t.exports=function(t){return this.__data__.has(t)}},function(t,e){t.exports=function(t,e){for(var n=-1,r=null==t?0:t.length;++n<r;)if(e(t[n],n,t))return!0;return!1}},function(t,e,n){var r=n(15),o=n(76),i=n(14),a=n(85),u=n(181),s=n(56),c=r?r.prototype:void 0,f=c?c.valueOf:void 0;t.exports=function(t,e,n,r,c,d,h){switch(n){case\\\"[object DataView]\\\":if(t.byteLength!=e.byteLength||t.byteOffset!=e.byteOffset)return!1;t=t.buffer,e=e.buffer;case\\\"[object ArrayBuffer]\\\":return!(t.byteLength!=e.byteLength||!d(new o(t),new o(e)));case\\\"[object Boolean]\\\":case\\\"[object Date]\\\":case\\\"[object Number]\\\":return i(+t,+e);case\\\"[object Error]\\\":return t.name==e.name&&t.message==e.message;case\\\"[object RegExp]\\\":case\\\"[object String]\\\":return t==e+\\\"\\\";case\\\"[object Map]\\\":var p=u;case\\\"[object Set]\\\":var l=1&r;if(p||(p=s),t.size!=e.size&&!l)return!1;var v=h.get(t);if(v)return v==e;r|=2,h.set(t,e);var y=a(p(t),p(e),r,c,d,h);return h.delete(t),y;case\\\"[object Symbol]\\\":if(f)return f.call(t)==f.call(e)}return!1}},function(t,e){t.exports=function(t){var e=-1,n=Array(t.size);return t.forEach((function(t,r){n[++e]=[r,t]})),n}},function(t,e,n){var r=n(73),o=Object.prototype.hasOwnProperty;t.exports=function(t,e,n,i,a,u){var s=1&n,c=r(t),f=c.length;if(f!=r(e).length&&!s)return!1;for(var d=f;d--;){var h=c[d];if(!(s?h in e:o.call(e,h)))return!1}var p=u.get(t);if(p&&u.get(e))return p==e;var l=!0;u.set(t,e),u.set(e,t);for(var v=s;++d<f;){var y=t[h=c[d]],g=e[h];if(i)var b=s?i(g,y,h,e,t,u):i(y,g,h,t,e,u);if(!(void 0===b?y===g||a(y,g,n,i,u):b)){l=!1;break}v||(v=\\\"constructor\\\"==h)}if(l&&!v){var m=t.constructor,x=e.constructor;m==x||!(\\\"constructor\\\"in t)||!(\\\"constructor\\\"in e)||\\\"function\\\"==typeof m&&m instanceof m&&\\\"function\\\"==typeof x&&x instanceof x||(l=!1)}return u.delete(t),u.delete(e),l}},function(t,e,n){var r=n(88),o=n(10);t.exports=function(t){for(var e=o(t),n=e.length;n--;){var i=e[n],a=t[i];e[n]=[i,a,r(a)]}return e}},function(t,e,n){var r=n(84),o=n(185),i=n(91),a=n(58),u=n(88),s=n(89),c=n(24);t.exports=function(t,e){return a(t)&&u(e)?s(c(t),e):function(n){var a=o(n,t);return void 0===a&&a===e?i(n,t):r(e,a,3)}}},function(t,e,n){var r=n(57);t.exports=function(t,e,n){var o=null==t?void 0:r(t,e);return void 0===o?n:o}},function(t,e,n){var r=n(187),o=/[^.[\\\\]]+|\\\\[(?:(-?\\\\d+(?:\\\\.\\\\d+)?)|([\\\"'])((?:(?!\\\\2)[^\\\\\\\\]|\\\\\\\\.)*?)\\\\2)\\\\]|(?=(?:\\\\.|\\\\[\\\\])(?:\\\\.|\\\\[\\\\]|$))/g,i=/\\\\\\\\(\\\\\\\\)?/g,a=r((function(t){var e=[];return 46===t.charCodeAt(0)&&e.push(\\\"\\\"),t.replace(o,(function(t,n,r,o){e.push(r?o.replace(i,\\\"$1\\\"):n||t)})),e}));t.exports=a},function(t,e,n){var r=n(188);t.exports=function(t){var e=r(t,(function(t){return 500===n.size&&n.clear(),t})),n=e.cache;return e}},function(t,e,n){var r=n(44);function o(t,e){if(\\\"function\\\"!=typeof t||null!=e&&\\\"function\\\"!=typeof e)throw new TypeError(\\\"Expected a function\\\");var n=function n(){var r=arguments,o=e?e.apply(this,r):r[0],i=n.cache;if(i.has(o))return i.get(o);var a=t.apply(this,r);return n.cache=i.set(o,a)||i,a};return n.cache=new(o.Cache||r),n}o.Cache=r,t.exports=o},function(t,e,n){var r=n(15),o=n(38),i=n(1),a=n(19),u=r?r.prototype:void 0,s=u?u.toString:void 0;t.exports=function t(e){if(\\\"string\\\"==typeof e)return e;if(i(e))return o(e,t)+\\\"\\\";if(a(e))return s?s.call(e):\\\"\\\";var n=e+\\\"\\\";return\\\"0\\\"==n&&1/e==-1/0?\\\"-0\\\":n}},function(t,e){t.exports=function(t,e){return null!=t&&e in Object(t)}},function(t,e,n){var r=n(93),o=n(192),i=n(58),a=n(24);t.exports=function(t){return i(t)?r(a(t)):o(t)}},function(t,e,n){var r=n(57);t.exports=function(t){return function(e){return r(e,t)}}},function(t,e){var n=Object.prototype.hasOwnProperty;t.exports=function(t,e){return null!=t&&n.call(t,e)}},function(t,e,n){var r=n(49),o=n(18),i=n(22),a=n(1),u=n(8),s=n(16),c=n(34),f=n(23),d=Object.prototype.hasOwnProperty;t.exports=function(t){if(null==t)return!0;if(u(t)&&(a(t)||\\\"string\\\"==typeof t||\\\"function\\\"==typeof t.splice||s(t)||f(t)||i(t)))return!t.length;var e=o(t);if(\\\"[object Map]\\\"==e||\\\"[object Set]\\\"==e)return!t.size;if(c(t))return!r(t).length;for(var n in t)if(d.call(t,n))return!1;return!0}},function(t,e){t.exports=function(t,e,n,r){var o=-1,i=null==t?0:t.length;for(r&&i&&(n=t[++o]);++o<i;)n=e(n,t[o],o,t);return n}},function(t,e){t.exports=function(t,e,n,r,o){return o(t,(function(t,o,i){n=r?(r=!1,t):e(n,t,o,i)})),n}},function(t,e,n){var r=n(49),o=n(18),i=n(8),a=n(198),u=n(199);t.exports=function(t){if(null==t)return 0;if(i(t))return a(t)?u(t):t.length;var e=o(t);return\\\"[object Map]\\\"==e||\\\"[object Set]\\\"==e?t.size:r(t).length}},function(t,e,n){var r=n(12),o=n(1),i=n(7);t.exports=function(t){return\\\"string\\\"==typeof t||!o(t)&&i(t)&&\\\"[object String]\\\"==r(t)}},function(t,e,n){var r=n(200),o=n(201),i=n(202);t.exports=function(t){return o(t)?i(t):r(t)}},function(t,e,n){var r=n(93)(\\\"length\\\");t.exports=r},function(t,e){var n=RegExp(\\\"[\\\\\\\\u200d\\\\\\\\ud800-\\\\\\\\udfff\\\\\\\\u0300-\\\\\\\\u036f\\\\\\\\ufe20-\\\\\\\\ufe2f\\\\\\\\u20d0-\\\\\\\\u20ff\\\\\\\\ufe0e\\\\\\\\ufe0f]\\\");t.exports=function(t){return n.test(t)}},function(t,e){var n=\\\"[\\\\\\\\ud800-\\\\\\\\udfff]\\\",r=\\\"[\\\\\\\\u0300-\\\\\\\\u036f\\\\\\\\ufe20-\\\\\\\\ufe2f\\\\\\\\u20d0-\\\\\\\\u20ff]\\\",o=\\\"\\\\\\\\ud83c[\\\\\\\\udffb-\\\\\\\\udfff]\\\",i=\\\"[^\\\\\\\\ud800-\\\\\\\\udfff]\\\",a=\\\"(?:\\\\\\\\ud83c[\\\\\\\\udde6-\\\\\\\\uddff]){2}\\\",u=\\\"[\\\\\\\\ud800-\\\\\\\\udbff][\\\\\\\\udc00-\\\\\\\\udfff]\\\",s=\\\"(?:\\\"+r+\\\"|\\\"+o+\\\")\\\"+\\\"?\\\",c=\\\"[\\\\\\\\ufe0e\\\\\\\\ufe0f]?\\\"+s+(\\\"(?:\\\\\\\\u200d(?:\\\"+[i,a,u].join(\\\"|\\\")+\\\")[\\\\\\\\ufe0e\\\\\\\\ufe0f]?\\\"+s+\\\")*\\\"),f=\\\"(?:\\\"+[i+r+\\\"?\\\",r,a,u,n].join(\\\"|\\\")+\\\")\\\",d=RegExp(o+\\\"(?=\\\"+o+\\\")|\\\"+f+c,\\\"g\\\");t.exports=function(t){for(var e=d.lastIndex=0;d.test(t);)++e;return e}},function(t,e,n){var r=n(45),o=n(79),i=n(54),a=n(9),u=n(35),s=n(1),c=n(16),f=n(20),d=n(4),h=n(23);t.exports=function(t,e,n){var p=s(t),l=p||c(t)||h(t);if(e=a(e,4),null==n){var v=t&&t.constructor;n=l?p?new v:[]:d(t)&&f(v)?o(u(t)):{}}return(l?r:i)(t,(function(t,r,o){return e(n,t,r,o)})),n}},function(t,e,n){var r=n(59),o=n(39),i=n(209),a=n(102),u=o((function(t){return i(r(t,1,a,!0))}));t.exports=u},function(t,e,n){var r=n(15),o=n(22),i=n(1),a=r?r.isConcatSpreadable:void 0;t.exports=function(t){return i(t)||o(t)||!!(a&&t&&t[a])}},function(t,e){t.exports=function(t,e,n){switch(n.length){case 0:return t.call(e);case 1:return t.call(e,n[0]);case 2:return t.call(e,n[0],n[1]);case 3:return t.call(e,n[0],n[1],n[2])}return t.apply(e,n)}},function(t,e,n){var r=n(53),o=n(65),i=n(13),a=o?function(t,e){return o(t,\\\"toString\\\",{configurable:!0,enumerable:!1,value:r(e),writable:!0})}:i;t.exports=a},function(t,e){var n=Date.now;t.exports=function(t){var e=0,r=0;return function(){var o=n(),i=16-(o-r);if(r=o,i>0){if(++e>=800)return arguments[0]}else e=0;return t.apply(void 0,arguments)}}},function(t,e,n){var r=n(86),o=n(210),i=n(214),a=n(87),u=n(215),s=n(56);t.exports=function(t,e,n){var c=-1,f=o,d=t.length,h=!0,p=[],l=p;if(n)h=!1,f=i;else if(d>=200){var v=e?null:u(t);if(v)return s(v);h=!1,f=a,l=new r}else l=e?[]:p;t:for(;++c<d;){var y=t[c],g=e?e(y):y;if(y=n||0!==y?y:0,h&&g===g){for(var b=l.length;b--;)if(l[b]===g)continue t;e&&l.push(g),p.push(y)}else f(l,g,n)||(l!==p&&l.push(g),p.push(y))}return p}},function(t,e,n){var r=n(211);t.exports=function(t,e){return!!(null==t?0:t.length)&&r(t,e,0)>-1}},function(t,e,n){var r=n(101),o=n(212),i=n(213);t.exports=function(t,e,n){return e===e?i(t,e,n):r(t,o,n)}},function(t,e){t.exports=function(t){return t!==t}},function(t,e){t.exports=function(t,e,n){for(var r=n-1,o=t.length;++r<o;)if(t[r]===e)return r;return-1}},function(t,e){t.exports=function(t,e,n){for(var r=-1,o=null==t?0:t.length;++r<o;)if(n(e,t[r]))return!0;return!1}},function(t,e,n){var r=n(75),o=n(216),i=n(56),a=r&&1/i(new r([,-0]))[1]==1/0?function(t){return new r(t)}:o;t.exports=a},function(t,e){t.exports=function(){}},function(t,e,n){var r=n(38);t.exports=function(t,e){return r(e,(function(e){return t[e]}))}},function(t,e){t.exports=\\\"2.1.8\\\"},function(t,e,n){var r=n(3),o=n(42);function i(t){return r.map(t.nodes(),(function(e){var n=t.node(e),o=t.parent(e),i={v:e};return r.isUndefined(n)||(i.value=n),r.isUndefined(o)||(i.parent=o),i}))}function a(t){return r.map(t.edges(),(function(e){var n=t.edge(e),o={v:e.v,w:e.w};return r.isUndefined(e.name)||(o.name=e.name),r.isUndefined(n)||(o.value=n),o}))}t.exports={write:function(t){var e={options:{directed:t.isDirected(),multigraph:t.isMultigraph(),compound:t.isCompound()},nodes:i(t),edges:a(t)};r.isUndefined(t.graph())||(e.value=r.clone(t.graph()));return e},read:function(t){var e=new o(t.options).setGraph(t.value);return r.each(t.nodes,(function(t){e.setNode(t.v,t.value),t.parent&&e.setParent(t.v,t.parent)})),r.each(t.edges,(function(t){e.setEdge({v:t.v,w:t.w,name:t.name},t.value)})),e}}},function(t,e,n){t.exports={components:n(221),dijkstra:n(104),dijkstraAll:n(222),findCycles:n(223),floydWarshall:n(224),isAcyclic:n(225),postorder:n(226),preorder:n(227),prim:n(228),tarjan:n(106),topsort:n(107)}},function(t,e,n){var r=n(3);t.exports=function(t){var e,n={},o=[];function i(o){r.has(n,o)||(n[o]=!0,e.push(o),r.each(t.successors(o),i),r.each(t.predecessors(o),i))}return r.each(t.nodes(),(function(t){e=[],i(t),e.length&&o.push(e)})),o}},function(t,e,n){var r=n(104),o=n(3);t.exports=function(t,e,n){return o.transform(t.nodes(),(function(o,i){o[i]=r(t,i,e,n)}),{})}},function(t,e,n){var r=n(3),o=n(106);t.exports=function(t){return r.filter(o(t),(function(e){return e.length>1||1===e.length&&t.hasEdge(e[0],e[0])}))}},function(t,e,n){var r=n(3);t.exports=function(t,e,n){return function(t,e,n){var r={},o=t.nodes();return o.forEach((function(t){r[t]={},r[t][t]={distance:0},o.forEach((function(e){t!==e&&(r[t][e]={distance:Number.POSITIVE_INFINITY})})),n(t).forEach((function(n){var o=n.v===t?n.w:n.v,i=e(n);r[t][o]={distance:i,predecessor:t}}))})),o.forEach((function(t){var e=r[t];o.forEach((function(n){var i=r[n];o.forEach((function(n){var r=i[t],o=e[n],a=i[n],u=r.distance+o.distance;u<a.distance&&(a.distance=u,a.predecessor=o.predecessor)}))}))})),r}(t,e||o,n||function(e){return t.outEdges(e)})};var o=r.constant(1)},function(t,e,n){var r=n(107);t.exports=function(t){try{r(t)}catch(e){if(e instanceof r.CycleException)return!1;throw e}return!0}},function(t,e,n){var r=n(108);t.exports=function(t,e){return r(t,e,\\\"post\\\")}},function(t,e,n){var r=n(108);t.exports=function(t,e){return r(t,e,\\\"pre\\\")}},function(t,e,n){var r=n(3),o=n(42),i=n(105);t.exports=function(t,e){var n,a=new o,u={},s=new i;function c(t){var r=t.v===n?t.w:t.v,o=s.priority(r);if(void 0!==o){var i=e(t);i<o&&(u[r]=n,s.decrease(r,i))}}if(0===t.nodeCount())return a;r.each(t.nodes(),(function(t){s.add(t,Number.POSITIVE_INFINITY),a.setNode(t)})),s.decrease(t.nodes()[0],0);var f=!1;for(;s.size()>0;){if(n=s.removeMin(),r.has(u,n))a.setEdge(n,u[n]);else{if(f)throw new Error(\\\"Input graph is not connected: \\\"+t);f=!0}t.nodeEdges(n).forEach(c)}return a}},function(t,e,n){\\\"use strict\\\";var r=n(0),o=n(267),i=n(270),a=n(271),u=n(2).normalizeRanks,s=n(273),c=n(2).removeEmptyRanks,f=n(274),d=n(275),h=n(276),p=n(277),l=n(286),v=n(2),y=n(5).Graph;t.exports=function(t,e){var n=e&&e.debugTiming?v.time:v.notime;n(\\\"layout\\\",(function(){var e=n(\\\"  buildLayoutGraph\\\",(function(){return function(t){var e=new y({multigraph:!0,compound:!0}),n=N(t.graph());return e.setGraph(r.merge({},b,k(n,g),r.pick(n,m))),r.forEach(t.nodes(),(function(n){var o=N(t.node(n));e.setNode(n,r.defaults(k(o,x),_)),e.setParent(n,t.parent(n))})),r.forEach(t.edges(),(function(n){var o=N(t.edge(n));e.setEdge(n,r.merge({},E,k(o,w),r.pick(o,j)))})),e}(t)}));n(\\\"  runLayout\\\",(function(){!function(t,e){e(\\\"    makeSpaceForEdgeLabels\\\",(function(){!function(t){var e=t.graph();e.ranksep/=2,r.forEach(t.edges(),(function(n){var r=t.edge(n);r.minlen*=2,\\\"c\\\"!==r.labelpos.toLowerCase()&&(\\\"TB\\\"===e.rankdir||\\\"BT\\\"===e.rankdir?r.width+=r.labeloffset:r.height+=r.labeloffset)}))}(t)})),e(\\\"    removeSelfEdges\\\",(function(){!function(t){r.forEach(t.edges(),(function(e){if(e.v===e.w){var n=t.node(e.v);n.selfEdges||(n.selfEdges=[]),n.selfEdges.push({e:e,label:t.edge(e)}),t.removeEdge(e)}}))}(t)})),e(\\\"    acyclic\\\",(function(){o.run(t)})),e(\\\"    nestingGraph.run\\\",(function(){f.run(t)})),e(\\\"    rank\\\",(function(){a(v.asNonCompoundGraph(t))})),e(\\\"    injectEdgeLabelProxies\\\",(function(){!function(t){r.forEach(t.edges(),(function(e){var n=t.edge(e);if(n.width&&n.height){var r=t.node(e.v),o={rank:(t.node(e.w).rank-r.rank)/2+r.rank,e:e};v.addDummyNode(t,\\\"edge-proxy\\\",o,\\\"_ep\\\")}}))}(t)})),e(\\\"    removeEmptyRanks\\\",(function(){c(t)})),e(\\\"    nestingGraph.cleanup\\\",(function(){f.cleanup(t)})),e(\\\"    normalizeRanks\\\",(function(){u(t)})),e(\\\"    assignRankMinMax\\\",(function(){!function(t){var e=0;r.forEach(t.nodes(),(function(n){var o=t.node(n);o.borderTop&&(o.minRank=t.node(o.borderTop).rank,o.maxRank=t.node(o.borderBottom).rank,e=r.max(e,o.maxRank))})),t.graph().maxRank=e}(t)})),e(\\\"    removeEdgeLabelProxies\\\",(function(){!function(t){r.forEach(t.nodes(),(function(e){var n=t.node(e);\\\"edge-proxy\\\"===n.dummy&&(t.edge(n.e).labelRank=n.rank,t.removeNode(e))}))}(t)})),e(\\\"    normalize.run\\\",(function(){i.run(t)})),e(\\\"    parentDummyChains\\\",(function(){s(t)})),e(\\\"    addBorderSegments\\\",(function(){d(t)})),e(\\\"    order\\\",(function(){p(t)})),e(\\\"    insertSelfEdges\\\",(function(){!function(t){var e=v.buildLayerMatrix(t);r.forEach(e,(function(e){var n=0;r.forEach(e,(function(e,o){var i=t.node(e);i.order=o+n,r.forEach(i.selfEdges,(function(e){v.addDummyNode(t,\\\"selfedge\\\",{width:e.label.width,height:e.label.height,rank:i.rank,order:o+ ++n,e:e.e,label:e.label},\\\"_se\\\")})),delete i.selfEdges}))}))}(t)})),e(\\\"    adjustCoordinateSystem\\\",(function(){h.adjust(t)})),e(\\\"    position\\\",(function(){l(t)})),e(\\\"    positionSelfEdges\\\",(function(){!function(t){r.forEach(t.nodes(),(function(e){var n=t.node(e);if(\\\"selfedge\\\"===n.dummy){var r=t.node(n.e.v),o=r.x+r.width/2,i=r.y,a=n.x-o,u=r.height/2;t.setEdge(n.e,n.label),t.removeNode(e),n.label.points=[{x:o+2*a/3,y:i-u},{x:o+5*a/6,y:i-u},{x:o+a,y:i},{x:o+5*a/6,y:i+u},{x:o+2*a/3,y:i+u}],n.label.x=n.x,n.label.y=n.y}}))}(t)})),e(\\\"    removeBorderNodes\\\",(function(){!function(t){r.forEach(t.nodes(),(function(e){if(t.children(e).length){var n=t.node(e),o=t.node(n.borderTop),i=t.node(n.borderBottom),a=t.node(r.last(n.borderLeft)),u=t.node(r.last(n.borderRight));n.width=Math.abs(u.x-a.x),n.height=Math.abs(i.y-o.y),n.x=a.x+n.width/2,n.y=o.y+n.height/2}})),r.forEach(t.nodes(),(function(e){\\\"border\\\"===t.node(e).dummy&&t.removeNode(e)}))}(t)})),e(\\\"    normalize.undo\\\",(function(){i.undo(t)})),e(\\\"    fixupEdgeLabelCoords\\\",(function(){!function(t){r.forEach(t.edges(),(function(e){var n=t.edge(e);if(r.has(n,\\\"x\\\"))switch(\\\"l\\\"!==n.labelpos&&\\\"r\\\"!==n.labelpos||(n.width-=n.labeloffset),n.labelpos){case\\\"l\\\":n.x-=n.width/2+n.labeloffset;break;case\\\"r\\\":n.x+=n.width/2+n.labeloffset}}))}(t)})),e(\\\"    undoCoordinateSystem\\\",(function(){h.undo(t)})),e(\\\"    translateGraph\\\",(function(){!function(t){var e=Number.POSITIVE_INFINITY,n=0,o=Number.POSITIVE_INFINITY,i=0,a=t.graph(),u=a.marginx||0,s=a.marginy||0;function c(t){var r=t.x,a=t.y,u=t.width,s=t.height;e=Math.min(e,r-u/2),n=Math.max(n,r+u/2),o=Math.min(o,a-s/2),i=Math.max(i,a+s/2)}r.forEach(t.nodes(),(function(e){c(t.node(e))})),r.forEach(t.edges(),(function(e){var n=t.edge(e);r.has(n,\\\"x\\\")&&c(n)})),e-=u,o-=s,r.forEach(t.nodes(),(function(n){var r=t.node(n);r.x-=e,r.y-=o})),r.forEach(t.edges(),(function(n){var i=t.edge(n);r.forEach(i.points,(function(t){t.x-=e,t.y-=o})),r.has(i,\\\"x\\\")&&(i.x-=e),r.has(i,\\\"y\\\")&&(i.y-=o)})),a.width=n-e+u,a.height=i-o+s}(t)})),e(\\\"    assignNodeIntersects\\\",(function(){!function(t){r.forEach(t.edges(),(function(e){var n,r,o=t.edge(e),i=t.node(e.v),a=t.node(e.w);o.points?(n=o.points[0],r=o.points[o.points.length-1]):(o.points=[],n=a,r=i),o.points.unshift(v.intersectRect(i,n)),o.points.push(v.intersectRect(a,r))}))}(t)})),e(\\\"    reversePoints\\\",(function(){!function(t){r.forEach(t.edges(),(function(e){var n=t.edge(e);n.reversed&&n.points.reverse()}))}(t)})),e(\\\"    acyclic.undo\\\",(function(){o.undo(t)}))}(e,n)})),n(\\\"  updateInputGraph\\\",(function(){!function(t,e){r.forEach(t.nodes(),(function(n){var r=t.node(n),o=e.node(n);r&&(r.x=o.x,r.y=o.y,e.children(n).length&&(r.width=o.width,r.height=o.height))})),r.forEach(t.edges(),(function(n){var o=t.edge(n),i=e.edge(n);o.points=i.points,r.has(i,\\\"x\\\")&&(o.x=i.x,o.y=i.y)})),t.graph().width=e.graph().width,t.graph().height=e.graph().height}(t,e)}))}))};var g=[\\\"nodesep\\\",\\\"edgesep\\\",\\\"ranksep\\\",\\\"marginx\\\",\\\"marginy\\\"],b={ranksep:50,edgesep:20,nodesep:50,rankdir:\\\"tb\\\"},m=[\\\"acyclicer\\\",\\\"ranker\\\",\\\"rankdir\\\",\\\"align\\\"],x=[\\\"width\\\",\\\"height\\\",\\\"rank\\\"],_={width:0,height:0},w=[\\\"minlen\\\",\\\"weight\\\",\\\"width\\\",\\\"height\\\",\\\"labeloffset\\\"],E={minlen:1,weight:1,width:0,height:0,labeloffset:10,labelpos:\\\"r\\\"},j=[\\\"labelpos\\\"];function k(t,e){return r.mapValues(r.pick(t,e),Number)}function N(t){var e={};return r.forEach(t,(function(t,n){e[n.toLowerCase()]=t})),e}},function(t,e,n){var r=n(62);t.exports=function(t){return r(t,5)}},function(t,e,n){var r=n(39),o=n(14),i=n(40),a=n(17),u=Object.prototype,s=u.hasOwnProperty,c=r((function(t,e){t=Object(t);var n=-1,r=e.length,c=r>2?e[2]:void 0;for(c&&i(e[0],e[1],c)&&(r=1);++n<r;)for(var f=e[n],d=a(f),h=-1,p=d.length;++h<p;){var l=d[h],v=t[l];(void 0===v||o(v,u[l])&&!s.call(t,l))&&(t[l]=f[l])}return t}));t.exports=c},function(t,e,n){var r=n(233)(n(234));t.exports=r},function(t,e,n){var r=n(9),o=n(8),i=n(10);t.exports=function(t){return function(e,n,a){var u=Object(e);if(!o(e)){var s=r(n,3);e=i(e),n=function(t){return s(u[t],t,u)}}var c=t(e,n,a);return c>-1?u[s?e[c]:c]:void 0}}},function(t,e,n){var r=n(101),o=n(9),i=n(235),a=Math.max;t.exports=function(t,e,n){var u=null==t?0:t.length;if(!u)return-1;var s=null==n?0:i(n);return s<0&&(s=a(u+s,0)),r(t,o(e,3),s)}},function(t,e,n){var r=n(109);t.exports=function(t){var e=r(t),n=e%1;return e===e?n?e-n:e:0}},function(t,e,n){var r=n(4),o=n(19),i=/^\\\\s+|\\\\s+$/g,a=/^[-+]0x[0-9a-f]+$/i,u=/^0b[01]+$/i,s=/^0o[0-7]+$/i,c=parseInt;t.exports=function(t){if(\\\"number\\\"==typeof t)return t;if(o(t))return NaN;if(r(t)){var e=\\\"function\\\"==typeof t.valueOf?t.valueOf():t;t=r(e)?e+\\\"\\\":e}if(\\\"string\\\"!=typeof t)return 0===t?t:+t;t=t.replace(i,\\\"\\\");var n=u.test(t);return n||s.test(t)?c(t.slice(2),n?2:8):a.test(t)?NaN:+t}},function(t,e,n){var r=n(55),o=n(82),i=n(17);t.exports=function(t,e){return null==t?t:r(t,o(e),i)}},function(t,e){t.exports=function(t){var e=null==t?0:t.length;return e?t[e-1]:void 0}},function(t,e,n){var r=n(31),o=n(54),i=n(9);t.exports=function(t,e){var n={};return e=i(e,3),o(t,(function(t,o,i){r(n,o,e(t,o,i))})),n}},function(t,e,n){var r=n(60),o=n(241),i=n(13);t.exports=function(t){return t&&t.length?r(t,i,o):void 0}},function(t,e){t.exports=function(t,e){return t>e}},function(t,e,n){var r=n(243),o=n(247)((function(t,e,n){r(t,e,n)}));t.exports=o},function(t,e,n){var r=n(25),o=n(111),i=n(55),a=n(244),u=n(4),s=n(17),c=n(112);t.exports=function t(e,n,f,d,h){e!==n&&i(n,(function(i,s){if(h||(h=new r),u(i))a(e,n,s,f,t,d,h);else{var p=d?d(c(e,s),i,s+\\\"\\\",e,n,h):void 0;void 0===p&&(p=i),o(e,s,p)}}),s)}},function(t,e,n){var r=n(111),o=n(68),i=n(77),a=n(69),u=n(78),s=n(22),c=n(1),f=n(102),d=n(16),h=n(20),p=n(4),l=n(245),v=n(23),y=n(112),g=n(246);t.exports=function(t,e,n,b,m,x,_){var w=y(t,n),E=y(e,n),j=_.get(E);if(j)r(t,n,j);else{var k=x?x(w,E,n+\\\"\\\",t,e,_):void 0,N=void 0===k;if(N){var M=c(E),S=!M&&d(E),O=!M&&!S&&v(E);k=E,M||S||O?c(w)?k=w:f(w)?k=a(w):S?(N=!1,k=o(E,!0)):O?(N=!1,k=i(E,!0)):k=[]:l(E)||s(E)?(k=w,s(w)?k=g(w):p(w)&&!h(w)||(k=u(E))):N=!1}N&&(_.set(E,k),m(k,E,b,x,_),_.delete(E)),r(t,n,k)}}},function(t,e,n){var r=n(12),o=n(35),i=n(7),a=Function.prototype,u=Object.prototype,s=a.toString,c=u.hasOwnProperty,f=s.call(Object);t.exports=function(t){if(!i(t)||\\\"[object Object]\\\"!=r(t))return!1;var e=o(t);if(null===e)return!0;var n=c.call(e,\\\"constructor\\\")&&e.constructor;return\\\"function\\\"==typeof n&&n instanceof n&&s.call(n)==f}},function(t,e,n){var r=n(21),o=n(17);t.exports=function(t){return r(t,o(t))}},function(t,e,n){var r=n(39),o=n(40);t.exports=function(t){return r((function(e,n){var r=-1,i=n.length,a=i>1?n[i-1]:void 0,u=i>2?n[2]:void 0;for(a=t.length>3&&\\\"function\\\"==typeof a?(i--,a):void 0,u&&o(n[0],n[1],u)&&(a=i<3?void 0:a,i=1),e=Object(e);++r<i;){var s=n[r];s&&t(e,s,r,a)}return e}))}},function(t,e,n){var r=n(60),o=n(113),i=n(13);t.exports=function(t){return t&&t.length?r(t,i,o):void 0}},function(t,e,n){var r=n(60),o=n(9),i=n(113);t.exports=function(t,e){return t&&t.length?r(t,o(e,2),i):void 0}},function(t,e,n){var r=n(6);t.exports=function(){return r.Date.now()}},function(t,e,n){var r=n(252),o=n(255)((function(t,e){return null==t?{}:r(t,e)}));t.exports=o},function(t,e,n){var r=n(253),o=n(91);t.exports=function(t,e){return r(t,e,(function(e,n){return o(t,n)}))}},function(t,e,n){var r=n(57),o=n(254),i=n(37);t.exports=function(t,e,n){for(var a=-1,u=e.length,s={};++a<u;){var c=e[a],f=r(t,c);n(f,c)&&o(s,i(c,t),f)}return s}},function(t,e,n){var r=n(30),o=n(37),i=n(32),a=n(4),u=n(24);t.exports=function(t,e,n,s){if(!a(t))return t;for(var c=-1,f=(e=o(e,t)).length,d=f-1,h=t;null!=h&&++c<f;){var p=u(e[c]),l=n;if(c!=d){var v=h[p];void 0===(l=s?s(v,p,h):void 0)&&(l=a(v)?v:i(e[c+1])?[]:{})}r(h,p,l),h=h[p]}return t}},function(t,e,n){var r=n(110),o=n(99),i=n(100);t.exports=function(t){return i(o(t,void 0,r),t+\\\"\\\")}},function(t,e,n){var r=n(257)();t.exports=r},function(t,e,n){var r=n(258),o=n(40),i=n(109);t.exports=function(t){return function(e,n,a){return a&&\\\"number\\\"!=typeof a&&o(e,n,a)&&(n=a=void 0),e=i(e),void 0===n?(n=e,e=0):n=i(n),a=void 0===a?e<n?1:-1:i(a),r(e,n,a,t)}}},function(t,e){var n=Math.ceil,r=Math.max;t.exports=function(t,e,o,i){for(var a=-1,u=r(n((e-t)/(o||1)),0),s=Array(u);u--;)s[i?u:++a]=t,t+=o;return s}},function(t,e,n){var r=n(59),o=n(260),i=n(39),a=n(40),u=i((function(t,e){if(null==t)return[];var n=e.length;return n>1&&a(t,e[0],e[1])?e=[]:n>2&&a(e[0],e[1],e[2])&&(e=[e[0]]),o(t,r(e,1),[])}));t.exports=u},function(t,e,n){var r=n(38),o=n(9),i=n(97),a=n(261),u=n(33),s=n(262),c=n(13);t.exports=function(t,e,n){var f=-1;e=r(e.length?e:[c],u(o));var d=i(t,(function(t,n,o){return{criteria:r(e,(function(e){return e(t)})),index:++f,value:t}}));return a(d,(function(t,e){return s(t,e,n)}))}},function(t,e){t.exports=function(t,e){var n=t.length;for(t.sort(e);n--;)t[n]=t[n].value;return t}},function(t,e,n){var r=n(263);t.exports=function(t,e,n){for(var o=-1,i=t.criteria,a=e.criteria,u=i.length,s=n.length;++o<u;){var c=r(i[o],a[o]);if(c)return o>=s?c:c*(\\\"desc\\\"==n[o]?-1:1)}return t.index-e.index}},function(t,e,n){var r=n(19);t.exports=function(t,e){if(t!==e){var n=void 0!==t,o=null===t,i=t===t,a=r(t),u=void 0!==e,s=null===e,c=e===e,f=r(e);if(!s&&!f&&!a&&t>e||a&&u&&c&&!s&&!f||o&&u&&c||!n&&c||!i)return 1;if(!o&&!a&&!f&&t<e||f&&n&&i&&!o&&!a||s&&n&&i||!u&&i||!c)return-1}return 0}},function(t,e,n){var r=n(90),o=0;t.exports=function(t){var e=++o;return r(t)+e}},function(t,e,n){var r=n(30),o=n(266);t.exports=function(t,e){return o(t||[],e||[],r)}},function(t,e){t.exports=function(t,e,n){for(var r=-1,o=t.length,i=e.length,a={};++r<o;){var u=r<i?e[r]:void 0;n(a,t[r],u)}return a}},function(t,e,n){\\\"use strict\\\";var r=n(0),o=n(268);t.exports={run:function(t){var e=\\\"greedy\\\"===t.graph().acyclicer?o(t,function(t){return function(e){return t.edge(e).weight}}(t)):function(t){var e=[],n={},o={};function i(a){r.has(o,a)||(o[a]=!0,n[a]=!0,r.forEach(t.outEdges(a),(function(t){r.has(n,t.w)?e.push(t):i(t.w)})),delete n[a])}return r.forEach(t.nodes(),i),e}(t);r.forEach(e,(function(e){var n=t.edge(e);t.removeEdge(e),n.forwardName=e.name,n.reversed=!0,t.setEdge(e.w,e.v,n,r.uniqueId(\\\"rev\\\"))}))},undo:function(t){r.forEach(t.edges(),(function(e){var n=t.edge(e);if(n.reversed){t.removeEdge(e);var r=n.forwardName;delete n.reversed,delete n.forwardName,t.setEdge(e.w,e.v,n,r)}}))}}},function(t,e,n){var r=n(0),o=n(5).Graph,i=n(269);t.exports=function(t,e){if(t.nodeCount()<=1)return[];var n=function(t,e){var n=new o,a=0,u=0;r.forEach(t.nodes(),(function(t){n.setNode(t,{v:t,in:0,out:0})})),r.forEach(t.edges(),(function(t){var r=n.edge(t.v,t.w)||0,o=e(t),i=r+o;n.setEdge(t.v,t.w,i),u=Math.max(u,n.node(t.v).out+=o),a=Math.max(a,n.node(t.w).in+=o)}));var c=r.range(u+a+3).map((function(){return new i})),f=a+1;return r.forEach(n.nodes(),(function(t){s(c,f,n.node(t))})),{graph:n,buckets:c,zeroIdx:f}}(t,e||a),c=function(t,e,n){var r,o=[],i=e[e.length-1],a=e[0];for(;t.nodeCount();){for(;r=a.dequeue();)u(t,e,n,r);for(;r=i.dequeue();)u(t,e,n,r);if(t.nodeCount())for(var s=e.length-2;s>0;--s)if(r=e[s].dequeue()){o=o.concat(u(t,e,n,r,!0));break}}return o}(n.graph,n.buckets,n.zeroIdx);return r.flatten(r.map(c,(function(e){return t.outEdges(e.v,e.w)})),!0)};var a=r.constant(1);function u(t,e,n,o,i){var a=i?[]:void 0;return r.forEach(t.inEdges(o.v),(function(r){var o=t.edge(r),u=t.node(r.v);i&&a.push({v:r.v,w:r.w}),u.out-=o,s(e,n,u)})),r.forEach(t.outEdges(o.v),(function(r){var o=t.edge(r),i=r.w,a=t.node(i);a.in-=o,s(e,n,a)})),t.removeNode(o.v),a}function s(t,e,n){n.out?n.in?t[n.out-n.in+e].enqueue(n):t[t.length-1].enqueue(n):t[0].enqueue(n)}},function(t,e){function n(){var t={};t._next=t._prev=t,this._sentinel=t}function r(t){t._prev._next=t._next,t._next._prev=t._prev,delete t._next,delete t._prev}function o(t,e){if(\\\"_next\\\"!==t&&\\\"_prev\\\"!==t)return e}t.exports=n,n.prototype.dequeue=function(){var t=this._sentinel,e=t._prev;if(e!==t)return r(e),e},n.prototype.enqueue=function(t){var e=this._sentinel;t._prev&&t._next&&r(t),t._next=e._next,e._next._prev=t,e._next=t,t._prev=e},n.prototype.toString=function(){for(var t=[],e=this._sentinel,n=e._prev;n!==e;)t.push(JSON.stringify(n,o)),n=n._prev;return\\\"[\\\"+t.join(\\\", \\\")+\\\"]\\\"}},function(t,e,n){\\\"use strict\\\";var r=n(0),o=n(2);t.exports={run:function(t){t.graph().dummyChains=[],r.forEach(t.edges(),(function(e){!function(t,e){var n,r,i,a=e.v,u=t.node(a).rank,s=e.w,c=t.node(s).rank,f=e.name,d=t.edge(e),h=d.labelRank;if(c===u+1)return;for(t.removeEdge(e),i=0,++u;u<c;++i,++u)d.points=[],r={width:0,height:0,edgeLabel:d,edgeObj:e,rank:u},n=o.addDummyNode(t,\\\"edge\\\",r,\\\"_d\\\"),u===h&&(r.width=d.width,r.height=d.height,r.dummy=\\\"edge-label\\\",r.labelpos=d.labelpos),t.setEdge(a,n,{weight:d.weight},f),0===i&&t.graph().dummyChains.push(n),a=n;t.setEdge(a,s,{weight:d.weight},f)}(t,e)}))},undo:function(t){r.forEach(t.graph().dummyChains,(function(e){var n,r=t.node(e),o=r.edgeLabel;for(t.setEdge(r.edgeObj,o);r.dummy;)n=t.successors(e)[0],t.removeNode(e),o.points.push({x:r.x,y:r.y}),\\\"edge-label\\\"===r.dummy&&(o.x=r.x,o.y=r.y,o.width=r.width,o.height=r.height),e=n,r=t.node(e)}))}}},function(t,e,n){\\\"use strict\\\";var r=n(41).longestPath,o=n(114),i=n(272);t.exports=function(t){var e=t.graph().ranker;if(e instanceof Function)return e(t);switch(t.graph().ranker){case\\\"network-simplex\\\":u(t);break;case\\\"tight-tree\\\":!function(t){r(t),o(t)}(t);break;case\\\"longest-path\\\":a(t);break;case\\\"none\\\":break;default:u(t)}};var a=r;function u(t){i(t)}},function(t,e,n){\\\"use strict\\\";var r=n(0),o=n(114),i=n(41).slack,a=n(41).longestPath,u=n(5).alg.preorder,s=n(5).alg.postorder,c=n(2).simplify;function f(t){t=c(t),a(t);var e,n=o(t);for(p(n),d(n,t);e=v(n);)g(n,t,e,y(n,t,e))}function d(t,e){var n=s(t,t.nodes());n=n.slice(0,n.length-1),r.forEach(n,(function(n){!function(t,e,n){var r=t.node(n).parent;t.edge(n,r).cutvalue=h(t,e,n)}(t,e,n)}))}function h(t,e,n){var o=t.node(n).parent,i=!0,a=e.edge(n,o),u=0;return a||(i=!1,a=e.edge(o,n)),u=a.weight,r.forEach(e.nodeEdges(n),(function(r){var a,s,c=r.v===n,f=c?r.w:r.v;if(f!==o){var d=c===i,h=e.edge(r).weight;if(u+=d?h:-h,a=n,s=f,t.hasEdge(a,s)){var p=t.edge(n,f).cutvalue;u+=d?-p:p}}})),u}function p(t,e){arguments.length<2&&(e=t.nodes()[0]),l(t,{},1,e)}function l(t,e,n,o,i){var a=n,u=t.node(o);return e[o]=!0,r.forEach(t.neighbors(o),(function(i){r.has(e,i)||(n=l(t,e,n,i,o))})),u.low=a,u.lim=n++,i?u.parent=i:delete u.parent,n}function v(t){return r.find(t.edges(),(function(e){return t.edge(e).cutvalue<0}))}function y(t,e,n){var o=n.v,a=n.w;e.hasEdge(o,a)||(o=n.w,a=n.v);var u=t.node(o),s=t.node(a),c=u,f=!1;u.lim>s.lim&&(c=s,f=!0);var d=r.filter(e.edges(),(function(e){return f===b(t,t.node(e.v),c)&&f!==b(t,t.node(e.w),c)}));return r.minBy(d,(function(t){return i(e,t)}))}function g(t,e,n,o){var i=n.v,a=n.w;t.removeEdge(i,a),t.setEdge(o.v,o.w,{}),p(t),d(t,e),function(t,e){var n=r.find(t.nodes(),(function(t){return!e.node(t).parent})),o=u(t,n);o=o.slice(1),r.forEach(o,(function(n){var r=t.node(n).parent,o=e.edge(n,r),i=!1;o||(o=e.edge(r,n),i=!0),e.node(n).rank=e.node(r).rank+(i?o.minlen:-o.minlen)}))}(t,e)}function b(t,e,n){return n.low<=e.lim&&e.lim<=n.lim}t.exports=f,f.initLowLimValues=p,f.initCutValues=d,f.calcCutValue=h,f.leaveEdge=v,f.enterEdge=y,f.exchangeEdges=g},function(t,e,n){var r=n(0);t.exports=function(t){var e=function(t){var e={},n=0;function o(i){var a=n;r.forEach(t.children(i),o),e[i]={low:a,lim:n++}}return r.forEach(t.children(),o),e}(t);r.forEach(t.graph().dummyChains,(function(n){for(var r=t.node(n),o=r.edgeObj,i=function(t,e,n,r){var o,i,a=[],u=[],s=Math.min(e[n].low,e[r].low),c=Math.max(e[n].lim,e[r].lim);o=n;do{o=t.parent(o),a.push(o)}while(o&&(e[o].low>s||c>e[o].lim));i=o,o=r;for(;(o=t.parent(o))!==i;)u.push(o);return{path:a.concat(u.reverse()),lca:i}}(t,e,o.v,o.w),a=i.path,u=i.lca,s=0,c=a[s],f=!0;n!==o.w;){if(r=t.node(n),f){for(;(c=a[s])!==u&&t.node(c).maxRank<r.rank;)s++;c===u&&(f=!1)}if(!f){for(;s<a.length-1&&t.node(c=a[s+1]).minRank<=r.rank;)s++;c=a[s]}t.setParent(n,c),n=t.successors(n)[0]}}))}},function(t,e,n){var r=n(0),o=n(2);t.exports={run:function(t){var e=o.addDummyNode(t,\\\"root\\\",{},\\\"_root\\\"),n=function(t){var e={};return r.forEach(t.children(),(function(n){!function n(o,i){var a=t.children(o);a&&a.length&&r.forEach(a,(function(t){n(t,i+1)}));e[o]=i}(n,1)})),e}(t),i=r.max(r.values(n))-1,a=2*i+1;t.graph().nestingRoot=e,r.forEach(t.edges(),(function(e){t.edge(e).minlen*=a}));var u=function(t){return r.reduce(t.edges(),(function(e,n){return e+t.edge(n).weight}),0)}(t)+1;r.forEach(t.children(),(function(s){!function t(e,n,i,a,u,s,c){var f=e.children(c);if(!f.length)return void(c!==n&&e.setEdge(n,c,{weight:0,minlen:i}));var d=o.addBorderNode(e,\\\"_bt\\\"),h=o.addBorderNode(e,\\\"_bb\\\"),p=e.node(c);e.setParent(d,c),p.borderTop=d,e.setParent(h,c),p.borderBottom=h,r.forEach(f,(function(r){t(e,n,i,a,u,s,r);var o=e.node(r),f=o.borderTop?o.borderTop:r,p=o.borderBottom?o.borderBottom:r,l=o.borderTop?a:2*a,v=f!==p?1:u-s[c]+1;e.setEdge(d,f,{weight:l,minlen:v,nestingEdge:!0}),e.setEdge(p,h,{weight:l,minlen:v,nestingEdge:!0})})),e.parent(c)||e.setEdge(n,d,{weight:0,minlen:u+s[c]})}(t,e,a,u,i,n,s)})),t.graph().nodeRankFactor=a},cleanup:function(t){var e=t.graph();t.removeNode(e.nestingRoot),delete e.nestingRoot,r.forEach(t.edges(),(function(e){t.edge(e).nestingEdge&&t.removeEdge(e)}))}}},function(t,e,n){var r=n(0),o=n(2);function i(t,e,n,r,i,a){var u={width:0,height:0,rank:a,borderType:e},s=i[e][a-1],c=o.addDummyNode(t,\\\"border\\\",u,n);i[e][a]=c,t.setParent(c,r),s&&t.setEdge(s,c,{weight:1})}t.exports=function(t){r.forEach(t.children(),(function e(n){var o=t.children(n),a=t.node(n);if(o.length&&r.forEach(o,e),r.has(a,\\\"minRank\\\")){a.borderLeft=[],a.borderRight=[];for(var u=a.minRank,s=a.maxRank+1;u<s;++u)i(t,\\\"borderLeft\\\",\\\"_bl\\\",n,a,u),i(t,\\\"borderRight\\\",\\\"_br\\\",n,a,u)}}))}},function(t,e,n){\\\"use strict\\\";var r=n(0);function o(t){r.forEach(t.nodes(),(function(e){i(t.node(e))})),r.forEach(t.edges(),(function(e){i(t.edge(e))}))}function i(t){var e=t.width;t.width=t.height,t.height=e}function a(t){t.y=-t.y}function u(t){var e=t.x;t.x=t.y,t.y=e}t.exports={adjust:function(t){var e=t.graph().rankdir.toLowerCase();\\\"lr\\\"!==e&&\\\"rl\\\"!==e||o(t)},undo:function(t){var e=t.graph().rankdir.toLowerCase();\\\"bt\\\"!==e&&\\\"rl\\\"!==e||function(t){r.forEach(t.nodes(),(function(e){a(t.node(e))})),r.forEach(t.edges(),(function(e){var n=t.edge(e);r.forEach(n.points,a),r.has(n,\\\"y\\\")&&a(n)}))}(t);\\\"lr\\\"!==e&&\\\"rl\\\"!==e||(!function(t){r.forEach(t.nodes(),(function(e){u(t.node(e))})),r.forEach(t.edges(),(function(e){var n=t.edge(e);r.forEach(n.points,u),r.has(n,\\\"x\\\")&&u(n)}))}(t),o(t))}}},function(t,e,n){\\\"use strict\\\";var r=n(0),o=n(278),i=n(279),a=n(280),u=n(284),s=n(285),c=n(5).Graph,f=n(2);function d(t,e,n){return r.map(e,(function(e){return u(t,e,n)}))}function h(t,e){var n=new c;r.forEach(t,(function(t){var o=t.graph().root,i=a(t,o,n,e);r.forEach(i.vs,(function(e,n){t.node(e).order=n})),s(t,n,i.vs)}))}function p(t,e){r.forEach(e,(function(e){r.forEach(e,(function(e,n){t.node(e).order=n}))}))}t.exports=function(t){var e=f.maxRank(t),n=d(t,r.range(1,e+1),\\\"inEdges\\\"),a=d(t,r.range(e-1,-1,-1),\\\"outEdges\\\"),u=o(t);p(t,u);for(var s,c=Number.POSITIVE_INFINITY,l=0,v=0;v<4;++l,++v){h(l%2?n:a,l%4>=2),u=f.buildLayerMatrix(t);var y=i(t,u);y<c&&(v=0,s=r.cloneDeep(u),c=y)}p(t,s)}},function(t,e,n){\\\"use strict\\\";var r=n(0);t.exports=function(t){var e={},n=r.filter(t.nodes(),(function(e){return!t.children(e).length})),o=r.max(r.map(n,(function(e){return t.node(e).rank}))),i=r.map(r.range(o+1),(function(){return[]}));var a=r.sortBy(n,(function(e){return t.node(e).rank}));return r.forEach(a,(function n(o){if(r.has(e,o))return;e[o]=!0;var a=t.node(o);i[a.rank].push(o),r.forEach(t.successors(o),n)})),i}},function(t,e,n){\\\"use strict\\\";var r=n(0);function o(t,e,n){for(var o=r.zipObject(n,r.map(n,(function(t,e){return e}))),i=r.flatten(r.map(e,(function(e){return r.sortBy(r.map(t.outEdges(e),(function(e){return{pos:o[e.w],weight:t.edge(e).weight}})),\\\"pos\\\")})),!0),a=1;a<n.length;)a<<=1;var u=2*a-1;a-=1;var s=r.map(new Array(u),(function(){return 0})),c=0;return r.forEach(i.forEach((function(t){var e=t.pos+a;s[e]+=t.weight;for(var n=0;e>0;)e%2&&(n+=s[e+1]),s[e=e-1>>1]+=t.weight;c+=t.weight*n}))),c}t.exports=function(t,e){for(var n=0,r=1;r<e.length;++r)n+=o(t,e[r-1],e[r]);return n}},function(t,e,n){var r=n(0),o=n(281),i=n(282),a=n(283);t.exports=function t(e,n,u,s){var c=e.children(n),f=e.node(n),d=f?f.borderLeft:void 0,h=f?f.borderRight:void 0,p={};d&&(c=r.filter(c,(function(t){return t!==d&&t!==h})));var l=o(e,c);r.forEach(l,(function(n){if(e.children(n.v).length){var o=t(e,n.v,u,s);p[n.v]=o,r.has(o,\\\"barycenter\\\")&&(i=n,a=o,r.isUndefined(i.barycenter)?(i.barycenter=a.barycenter,i.weight=a.weight):(i.barycenter=(i.barycenter*i.weight+a.barycenter*a.weight)/(i.weight+a.weight),i.weight+=a.weight))}var i,a}));var v=i(l,u);!function(t,e){r.forEach(t,(function(t){t.vs=r.flatten(t.vs.map((function(t){return e[t]?e[t].vs:t})),!0)}))}(v,p);var y=a(v,s);if(d&&(y.vs=r.flatten([d,y.vs,h],!0),e.predecessors(d).length)){var g=e.node(e.predecessors(d)[0]),b=e.node(e.predecessors(h)[0]);r.has(y,\\\"barycenter\\\")||(y.barycenter=0,y.weight=0),y.barycenter=(y.barycenter*y.weight+g.order+b.order)/(y.weight+2),y.weight+=2}return y}},function(t,e,n){var r=n(0);t.exports=function(t,e){return r.map(e,(function(e){var n=t.inEdges(e);if(n.length){var o=r.reduce(n,(function(e,n){var r=t.edge(n),o=t.node(n.v);return{sum:e.sum+r.weight*o.order,weight:e.weight+r.weight}}),{sum:0,weight:0});return{v:e,barycenter:o.sum/o.weight,weight:o.weight}}return{v:e}}))}},function(t,e,n){\\\"use strict\\\";var r=n(0);t.exports=function(t,e){var n={};return r.forEach(t,(function(t,e){var o=n[t.v]={indegree:0,in:[],out:[],vs:[t.v],i:e};r.isUndefined(t.barycenter)||(o.barycenter=t.barycenter,o.weight=t.weight)})),r.forEach(e.edges(),(function(t){var e=n[t.v],o=n[t.w];r.isUndefined(e)||r.isUndefined(o)||(o.indegree++,e.out.push(n[t.w]))})),function(t){var e=[];function n(t){return function(e){e.merged||(r.isUndefined(e.barycenter)||r.isUndefined(t.barycenter)||e.barycenter>=t.barycenter)&&function(t,e){var n=0,r=0;t.weight&&(n+=t.barycenter*t.weight,r+=t.weight);e.weight&&(n+=e.barycenter*e.weight,r+=e.weight);t.vs=e.vs.concat(t.vs),t.barycenter=n/r,t.weight=r,t.i=Math.min(e.i,t.i),e.merged=!0}(t,e)}}function o(e){return function(n){n.in.push(e),0===--n.indegree&&t.push(n)}}for(;t.length;){var i=t.pop();e.push(i),r.forEach(i.in.reverse(),n(i)),r.forEach(i.out,o(i))}return r.map(r.filter(e,(function(t){return!t.merged})),(function(t){return r.pick(t,[\\\"vs\\\",\\\"i\\\",\\\"barycenter\\\",\\\"weight\\\"])}))}(r.filter(n,(function(t){return!t.indegree})))}},function(t,e,n){var r=n(0),o=n(2);function i(t,e,n){for(var o;e.length&&(o=r.last(e)).i<=n;)e.pop(),t.push(o.vs),n++;return n}t.exports=function(t,e){var n=o.partition(t,(function(t){return r.has(t,\\\"barycenter\\\")})),a=n.lhs,u=r.sortBy(n.rhs,(function(t){return-t.i})),s=[],c=0,f=0,d=0;a.sort((h=!!e,function(t,e){return t.barycenter<e.barycenter?-1:t.barycenter>e.barycenter?1:h?e.i-t.i:t.i-e.i})),d=i(s,u,d),r.forEach(a,(function(t){d+=t.vs.length,s.push(t.vs),c+=t.barycenter*t.weight,f+=t.weight,d=i(s,u,d)}));var h;var p={vs:r.flatten(s,!0)};f&&(p.barycenter=c/f,p.weight=f);return p}},function(t,e,n){var r=n(0),o=n(5).Graph;t.exports=function(t,e,n){var i=function(t){var e;for(;t.hasNode(e=r.uniqueId(\\\"_root\\\")););return e}(t),a=new o({compound:!0}).setGraph({root:i}).setDefaultNodeLabel((function(e){return t.node(e)}));return r.forEach(t.nodes(),(function(o){var u=t.node(o),s=t.parent(o);(u.rank===e||u.minRank<=e&&e<=u.maxRank)&&(a.setNode(o),a.setParent(o,s||i),r.forEach(t[n](o),(function(e){var n=e.v===o?e.w:e.v,i=a.edge(n,o),u=r.isUndefined(i)?0:i.weight;a.setEdge(n,o,{weight:t.edge(e).weight+u})})),r.has(u,\\\"minRank\\\")&&a.setNode(o,{borderLeft:u.borderLeft[e],borderRight:u.borderRight[e]}))})),a}},function(t,e,n){var r=n(0);t.exports=function(t,e,n){var o,i={};r.forEach(n,(function(n){for(var r,a,u=t.parent(n);u;){if((r=t.parent(u))?(a=i[r],i[r]=u):(a=o,o=u),a&&a!==u)return void e.setEdge(a,u);u=r}}))}},function(t,e,n){\\\"use strict\\\";var r=n(0),o=n(2),i=n(287).positionX;t.exports=function(t){(function(t){var e=o.buildLayerMatrix(t),n=t.graph().ranksep,i=0;r.forEach(e,(function(e){var o=r.max(r.map(e,(function(e){return t.node(e).height})));r.forEach(e,(function(e){t.node(e).y=i+o/2})),i+=o+n}))})(t=o.asNonCompoundGraph(t)),r.forEach(i(t),(function(e,n){t.node(n).x=e}))}},function(t,e,n){\\\"use strict\\\";var r=n(0),o=n(5).Graph,i=n(2);function a(t,e){var n={};return r.reduce(e,(function(e,o){var i=0,a=0,u=e.length,c=r.last(o);return r.forEach(o,(function(e,f){var d=function(t,e){if(t.node(e).dummy)return r.find(t.predecessors(e),(function(e){return t.node(e).dummy}))}(t,e),h=d?t.node(d).order:u;(d||e===c)&&(r.forEach(o.slice(a,f+1),(function(e){r.forEach(t.predecessors(e),(function(r){var o=t.node(r),a=o.order;!(a<i||h<a)||o.dummy&&t.node(e).dummy||s(n,r,e)}))})),a=f+1,i=h)})),o})),n}function u(t,e){var n={};function o(e,o,i,a,u){var c;r.forEach(r.range(o,i),(function(o){c=e[o],t.node(c).dummy&&r.forEach(t.predecessors(c),(function(e){var r=t.node(e);r.dummy&&(r.order<a||r.order>u)&&s(n,e,c)}))}))}return r.reduce(e,(function(e,n){var i,a=-1,u=0;return r.forEach(n,(function(r,s){if(\\\"border\\\"===t.node(r).dummy){var c=t.predecessors(r);c.length&&(i=t.node(c[0]).order,o(n,u,s,a,i),u=s,a=i)}o(n,u,n.length,i,e.length)})),n})),n}function s(t,e,n){if(e>n){var r=e;e=n,n=r}var o=t[e];o||(t[e]=o={}),o[n]=!0}function c(t,e,n){if(e>n){var o=e;e=n,n=o}return r.has(t[e],n)}function f(t,e,n,o){var i={},a={},u={};return r.forEach(e,(function(t){r.forEach(t,(function(t,e){i[t]=t,a[t]=t,u[t]=e}))})),r.forEach(e,(function(t){var e=-1;r.forEach(t,(function(t){var s=o(t);if(s.length)for(var f=((s=r.sortBy(s,(function(t){return u[t]}))).length-1)/2,d=Math.floor(f),h=Math.ceil(f);d<=h;++d){var p=s[d];a[t]===t&&e<u[p]&&!c(n,t,p)&&(a[p]=t,a[t]=i[t]=i[p],e=u[p])}}))})),{root:i,align:a}}function d(t,e,n,i,a){var u={},s=function(t,e,n,i){var a=new o,u=t.graph(),s=function(t,e,n){return function(o,i,a){var u,s=o.node(i),c=o.node(a),f=0;if(f+=s.width/2,r.has(s,\\\"labelpos\\\"))switch(s.labelpos.toLowerCase()){case\\\"l\\\":u=-s.width/2;break;case\\\"r\\\":u=s.width/2}if(u&&(f+=n?u:-u),u=0,f+=(s.dummy?e:t)/2,f+=(c.dummy?e:t)/2,f+=c.width/2,r.has(c,\\\"labelpos\\\"))switch(c.labelpos.toLowerCase()){case\\\"l\\\":u=c.width/2;break;case\\\"r\\\":u=-c.width/2}return u&&(f+=n?u:-u),u=0,f}}(u.nodesep,u.edgesep,i);return r.forEach(e,(function(e){var o;r.forEach(e,(function(e){var r=n[e];if(a.setNode(r),o){var i=n[o],u=a.edge(i,r);a.setEdge(i,r,Math.max(s(t,e,o),u||0))}o=e}))})),a}(t,e,n,a),c=a?\\\"borderLeft\\\":\\\"borderRight\\\";function f(t,e){for(var n=s.nodes(),r=n.pop(),o={};r;)o[r]?t(r):(o[r]=!0,n.push(r),n=n.concat(e(r))),r=n.pop()}return f((function(t){u[t]=s.inEdges(t).reduce((function(t,e){return Math.max(t,u[e.v]+s.edge(e))}),0)}),s.predecessors.bind(s)),f((function(e){var n=s.outEdges(e).reduce((function(t,e){return Math.min(t,u[e.w]-s.edge(e))}),Number.POSITIVE_INFINITY),r=t.node(e);n!==Number.POSITIVE_INFINITY&&r.borderType!==c&&(u[e]=Math.max(u[e],n))}),s.successors.bind(s)),r.forEach(i,(function(t){u[t]=u[n[t]]})),u}function h(t,e){return r.minBy(r.values(e),(function(e){var n=Number.NEGATIVE_INFINITY,o=Number.POSITIVE_INFINITY;return r.forIn(e,(function(e,r){var i=function(t,e){return t.node(e).width}(t,r)/2;n=Math.max(e+i,n),o=Math.min(e-i,o)})),n-o}))}function p(t,e){var n=r.values(e),o=r.min(n),i=r.max(n);r.forEach([\\\"u\\\",\\\"d\\\"],(function(n){r.forEach([\\\"l\\\",\\\"r\\\"],(function(a){var u,s=n+a,c=t[s];if(c!==e){var f=r.values(c);(u=\\\"l\\\"===a?o-r.min(f):i-r.max(f))&&(t[s]=r.mapValues(c,(function(t){return t+u})))}}))}))}function l(t,e){return r.mapValues(t.ul,(function(n,o){if(e)return t[e.toLowerCase()][o];var i=r.sortBy(r.map(t,o));return(i[1]+i[2])/2}))}t.exports={positionX:function(t){var e,n=i.buildLayerMatrix(t),o=r.merge(a(t,n),u(t,n)),s={};r.forEach([\\\"u\\\",\\\"d\\\"],(function(i){e=\\\"u\\\"===i?n:r.values(n).reverse(),r.forEach([\\\"l\\\",\\\"r\\\"],(function(n){\\\"r\\\"===n&&(e=r.map(e,(function(t){return r.values(t).reverse()})));var a=(\\\"u\\\"===i?t.predecessors:t.successors).bind(t),u=f(t,e,o,a),c=d(t,e,u.root,u.align,\\\"r\\\"===n);\\\"r\\\"===n&&(c=r.mapValues(c,(function(t){return-t}))),s[i+n]=c}))}));var c=h(t,s);return p(s,c),l(s,t.graph().align)},findType1Conflicts:a,findType2Conflicts:u,addConflict:s,hasConflict:c,verticalAlignment:f,horizontalCompaction:d,alignCoordinates:p,findSmallestWidthAlignment:h,balance:l}},function(t,e,n){var r=n(0),o=n(2),i=n(5).Graph;t.exports={debugOrdering:function(t){var e=o.buildLayerMatrix(t),n=new i({compound:!0,multigraph:!0}).setGraph({});return r.forEach(t.nodes(),(function(e){n.setNode(e,{label:e}),n.setParent(e,\\\"layer\\\"+t.node(e).rank)})),r.forEach(t.edges(),(function(t){n.setEdge(t.v,t.w,{},t.name)})),r.forEach(e,(function(t,e){var o=\\\"layer\\\"+e;n.setNode(o,{rank:\\\"same\\\"}),r.reduce(t,(function(t,e){return n.setEdge(t,e,{style:\\\"invis\\\"}),e}))})),n}}},function(t,e){t.exports=\\\"0.8.5-pre\\\"},function(t,e,n){\\\"use strict\\\";function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}n.r(e),n.d(e,\\\"graphNew\\\",(function(){return et})),n.d(e,\\\"graphDagre\\\",(function(){return nt}));var a=n(61),u=n.n(a);const s=.5*Math.PI,c=(t,e)=>Math.round(t/e)*e,f=(t,e)=>Math.abs(t-e),d=(t,e)=>Math.atan2(t.y-e.y,t.x-e.x),h=t=>t.x-.5*t.width,p=t=>t.x+.5*t.width,l=t=>t.y-.5*t.height,v=t=>t.y+.5*t.height,y=t=>{const e={};var n=!0,r=!1,o=void 0;try{for(var i,a=t[Symbol.iterator]();!(n=(i=a.next()).done);n=!0){const t=i.value;e[t.y]=e[t.y]||[],e[t.y].push(t)}}catch(l){r=!0,o=l}finally{try{n||null==a.return||a.return()}finally{if(r)throw o}}const u=Object.keys(e).map(t=>parseFloat(t));u.sort((t,e)=>t-e);const s=u.map(t=>e[t]);for(let v=0;v<s.length;v+=1){s[v].sort((t,e)=>g(t.x,e.x,t.id,e.id));var c=!0,f=!1,d=void 0;try{for(var h,p=s[v][Symbol.iterator]();!(c=(h=p.next()).done);c=!0){h.value.row=v}}catch(l){f=!0,d=l}finally{try{c||null==p.return||p.return()}finally{if(f)throw d}}}return s},g=(t,e,...n)=>{const r=\\\"string\\\"===typeof t?t.localeCompare(e):t-e;return 0!==r||0===n.length?r:g(...n)},b=(t,e,n,r,o,i)=>{const a=o-n,u=i-r,s=(d=1,(c=((t-n)*a+(e-r)*u)/(a*a+u*u||1))<(f=0)?f:c>d?d:c);var c,f,d;return{x:n+a*s,y:r+u*s,ax:n,ay:r,bx:o,by:i}};function m(){return new x}var x=function(){function t(){this.index={},this.array=[]}return t.prototype.size=function(){return this.array.length},t.prototype.empty=function(){return 0===this.array.length},t.prototype.itemAt=function(t){return this.array[t]},t.prototype.contains=function(t){return void 0!==this.index[t.id()]},t.prototype.find=function(t){var e=this.index[t.id()];return void 0===e?void 0:this.array[e]},t.prototype.setDefault=function(t,e){var n=this.index[t.id()];if(void 0===n){var r=new _(t,e());return this.index[t.id()]=this.array.length,this.array.push(r),r}return this.array[n]},t.prototype.insert=function(t,e){var n=new _(t,e),r=this.index[t.id()];return void 0===r?(this.index[t.id()]=this.array.length,this.array.push(n)):this.array[r]=n,n},t.prototype.erase=function(t){var e=this.index[t.id()];if(void 0!==e){this.index[t.id()]=void 0;var n=this.array[e],r=this.array.pop();return n!==r&&(this.array[e]=r,this.index[r.first.id()]=e),n}},t.prototype.copy=function(){for(var e=new t,n=0;n<this.array.length;n++){var r=this.array[n].copy();e.array[n]=r,e.index[r.first.id()]=n}return e},t}(),_=function(){function t(t,e){this.first=t,this.second=e}return t.prototype.copy=function(){return new t(this.first,this.second)},t}(),w=function(){function t(t){void 0===t&&(t=\\\"\\\"),this._value=0,this._context=null,this._id=E++,this._name=t}return t.prototype.id=function(){return this._id},t.prototype.name=function(){return this._name},t.prototype.setName=function(t){this._name=t},t.prototype.context=function(){return this._context},t.prototype.setContext=function(t){this._context=t},t.prototype.value=function(){return this._value},t.prototype.setValue=function(t){this._value=t},t.prototype.plus=function(t){return new j(this,t)},t.prototype.minus=function(t){return new j(this,\\\"number\\\"===typeof t?-t:[-1,t])},t.prototype.multiply=function(t){return new j([t,this])},t.prototype.divide=function(t){return new j([1/t,this])},t.prototype.toJSON=function(){return{name:this._name,value:this._value}},t.prototype.toString=function(){return this._context+\\\"[\\\"+this._name+\\\":\\\"+this._value+\\\"]\\\"},t}(),E=0,j=function(){function t(){var t=k(arguments);this._terms=t.terms,this._constant=t.constant}return t.prototype.terms=function(){return this._terms},t.prototype.constant=function(){return this._constant},t.prototype.value=function(){for(var t=this._constant,e=0,n=this._terms.size();e<n;e++){var r=this._terms.itemAt(e);t+=r.first.value()*r.second}return t},t.prototype.plus=function(e){return new t(this,e)},t.prototype.minus=function(e){return new t(this,\\\"number\\\"===typeof e?-e:[-1,e])},t.prototype.multiply=function(e){return new t([e,this])},t.prototype.divide=function(e){return new t([1/e,this])},t.prototype.isConstant=function(){return 0==this._terms.size()},t.prototype.toString=function(){var t=this._terms.array.map((function(t){return t.second+\\\"*\\\"+t.first.toString()})).join(\\\" + \\\");return this.isConstant()||0===this._constant||(t+=\\\" + \\\"),t+=this._constant},t}();function k(t){for(var e=0,n=function(){return 0},r=m(),o=0,i=t.length;o<i;++o){var a=t[o];if(\\\"number\\\"===typeof a)e+=a;else if(a instanceof w)r.setDefault(a,n).second+=1;else if(a instanceof j){e+=a.constant();for(var u=0,s=(h=a.terms()).size();u<s;u++){var c=h.itemAt(u);r.setDefault(c.first,n).second+=c.second}}else{if(!(a instanceof Array))throw new Error(\\\"invalid Expression argument: \\\"+a);if(2!==a.length)throw new Error(\\\"array must have length 2\\\");var f=a[0],d=a[1];if(\\\"number\\\"!==typeof f)throw new Error(\\\"array item 0 must be a number\\\");if(d instanceof w)r.setDefault(d,n).second+=f;else{if(!(d instanceof j))throw new Error(\\\"array item 1 must be a variable or expression\\\");e+=d.constant()*f;var h;for(u=0,s=(h=d.terms()).size();u<s;u++){c=h.itemAt(u);r.setDefault(c.first,n).second+=c.second*f}}}}return{terms:r,constant:e}}var N,M=function(){function t(){}return t.create=function(t,e,n,r){void 0===r&&(r=1);var o=0;return o+=1e6*Math.max(0,Math.min(1e3,t*r)),o+=1e3*Math.max(0,Math.min(1e3,e*r)),o+=Math.max(0,Math.min(1e3,n*r))},t.clip=function(e){return Math.max(0,Math.min(t.required,e))},t.required=t.create(1e3,1e3,1e3),t.strong=t.create(1,0,0),t.medium=t.create(0,1,0),t.weak=t.create(0,0,1),t}();!function(t){t[t.Le=0]=\\\"Le\\\",t[t.Ge=1]=\\\"Ge\\\",t[t.Eq=2]=\\\"Eq\\\"}(N||(N={}));var S,O=function(){function t(t,e,n,r){void 0===r&&(r=M.required),this._id=A++,this._operator=e,this._strength=M.clip(r),this._expression=void 0===n&&t instanceof j?t:t.minus(n)}return t.prototype.id=function(){return this._id},t.prototype.expression=function(){return this._expression},t.prototype.op=function(){return this._operator},t.prototype.strength=function(){return this._strength},t.prototype.toString=function(){return this._expression.toString()+\\\" \\\"+[\\\"<=\\\",\\\">=\\\",\\\"=\\\"][this._operator]+\\\" 0 (\\\"+this._strength.toString()+\\\")\\\"},t}(),A=0,I=function(){function t(){this._cnMap=m(),this._rowMap=m(),this._varMap=m(),this._editMap=m(),this._infeasibleRows=[],this._objective=new L,this._artificial=null,this._idTick=0}return t.prototype.createConstraint=function(t,e,n,r){void 0===r&&(r=M.required);var o=new O(t,e,n,r);return this.addConstraint(o),o},t.prototype.addConstraint=function(t){if(void 0!==this._cnMap.find(t))throw new Error(\\\"duplicate constraint\\\");var e=this._createRow(t),n=e.row,r=e.tag,o=this._chooseSubject(n,r);if(o.type()===S.Invalid&&n.allDummies()){if(!C(n.constant()))throw new Error(\\\"unsatisfiable constraint\\\");o=r.marker}if(o.type()===S.Invalid){if(!this._addWithArtificialVariable(n))throw new Error(\\\"unsatisfiable constraint\\\")}else n.solveFor(o),this._substitute(o,n),this._rowMap.insert(o,n);this._cnMap.insert(t,r),this._optimize(this._objective)},t.prototype.removeConstraint=function(t){var e=this._cnMap.erase(t);if(void 0===e)throw new Error(\\\"unknown constraint\\\");this._removeConstraintEffects(t,e.second);var n=e.second.marker,r=this._rowMap.erase(n);if(void 0===r){var o=this._getMarkerLeavingSymbol(n);if(o.type()===S.Invalid)throw new Error(\\\"failed to find leaving row\\\");(r=this._rowMap.erase(o)).second.solveForEx(o,n),this._substitute(n,r.second)}this._optimize(this._objective)},t.prototype.hasConstraint=function(t){return this._cnMap.contains(t)},t.prototype.addEditVariable=function(t,e){if(void 0!==this._editMap.find(t))throw new Error(\\\"duplicate edit variable\\\");if((e=M.clip(e))===M.required)throw new Error(\\\"bad required strength\\\");var n=new j(t),r=new O(n,N.Eq,void 0,e);this.addConstraint(r);var o={tag:this._cnMap.find(r).second,constraint:r,constant:0};this._editMap.insert(t,o)},t.prototype.removeEditVariable=function(t){var e=this._editMap.erase(t);if(void 0===e)throw new Error(\\\"unknown edit variable\\\");this.removeConstraint(e.second.constraint)},t.prototype.hasEditVariable=function(t){return this._editMap.contains(t)},t.prototype.suggestValue=function(t,e){var n=this._editMap.find(t);if(void 0===n)throw new Error(\\\"unknown edit variable\\\");var r=this._rowMap,o=n.second,i=e-o.constant;o.constant=e;var a=o.tag.marker,u=r.find(a);if(void 0!==u)return u.second.add(-i)<0&&this._infeasibleRows.push(a),void this._dualOptimize();var s=o.tag.other;if(void 0!==(u=r.find(s)))return u.second.add(i)<0&&this._infeasibleRows.push(s),void this._dualOptimize();for(var c=0,f=r.size();c<f;++c){var d=r.itemAt(c),h=d.second,p=h.coefficientFor(a);0!==p&&h.add(i*p)<0&&d.first.type()!==S.External&&this._infeasibleRows.push(d.first)}this._dualOptimize()},t.prototype.updateVariables=function(){for(var t=this._varMap,e=this._rowMap,n=0,r=t.size();n<r;++n){var o=t.itemAt(n),i=e.find(o.second);void 0!==i?o.first.setValue(i.second.constant()):o.first.setValue(0)}},t.prototype._getVarSymbol=function(t){var e=this;return this._varMap.setDefault(t,(function(){return e._makeSymbol(S.External)})).second},t.prototype._createRow=function(t){for(var e=t.expression(),n=new L(e.constant()),r=e.terms(),o=0,i=r.size();o<i;++o){var a=r.itemAt(o);if(!C(a.second)){var u=this._getVarSymbol(a.first),s=this._rowMap.find(u);void 0!==s?n.insertRow(s.second,a.second):n.insertSymbol(u,a.second)}}var c=this._objective,f=t.strength(),d={marker:z,other:z};switch(t.op()){case N.Le:case N.Ge:var h=t.op()===N.Le?1:-1,p=this._makeSymbol(S.Slack);if(d.marker=p,n.insertSymbol(p,h),f<M.required){var l=this._makeSymbol(S.Error);d.other=l,n.insertSymbol(l,-h),c.insertSymbol(l,f)}break;case N.Eq:if(f<M.required){var v=this._makeSymbol(S.Error),y=this._makeSymbol(S.Error);d.marker=v,d.other=y,n.insertSymbol(v,-1),n.insertSymbol(y,1),c.insertSymbol(v,f),c.insertSymbol(y,f)}else{var g=this._makeSymbol(S.Dummy);d.marker=g,n.insertSymbol(g)}}return n.constant()<0&&n.reverseSign(),{row:n,tag:d}},t.prototype._chooseSubject=function(t,e){for(var n=t.cells(),r=0,o=n.size();r<o;++r){var i=n.itemAt(r);if(i.first.type()===S.External)return i.first}var a=e.marker.type();return(a===S.Slack||a===S.Error)&&t.coefficientFor(e.marker)<0?e.marker:((a=e.other.type())===S.Slack||a===S.Error)&&t.coefficientFor(e.other)<0?e.other:z},t.prototype._addWithArtificialVariable=function(t){var e=this._makeSymbol(S.Slack);this._rowMap.insert(e,t.copy()),this._artificial=t.copy(),this._optimize(this._artificial);var n=C(this._artificial.constant());this._artificial=null;var r=this._rowMap.erase(e);if(void 0!==r){var o=r.second;if(o.isConstant())return n;var i=this._anyPivotableSymbol(o);if(i.type()===S.Invalid)return!1;o.solveForEx(e,i),this._substitute(i,o),this._rowMap.insert(i,o)}for(var a=this._rowMap,u=0,s=a.size();u<s;++u)a.itemAt(u).second.removeSymbol(e);return this._objective.removeSymbol(e),n},t.prototype._substitute=function(t,e){for(var n=this._rowMap,r=0,o=n.size();r<o;++r){var i=n.itemAt(r);i.second.substitute(t,e),i.second.constant()<0&&i.first.type()!==S.External&&this._infeasibleRows.push(i.first)}this._objective.substitute(t,e),this._artificial&&this._artificial.substitute(t,e)},t.prototype._optimize=function(t){for(;;){var e=this._getEnteringSymbol(t);if(e.type()===S.Invalid)return;var n=this._getLeavingSymbol(e);if(n.type()===S.Invalid)throw new Error(\\\"the objective is unbounded\\\");var r=this._rowMap.erase(n).second;r.solveForEx(n,e),this._substitute(e,r),this._rowMap.insert(e,r)}},t.prototype._dualOptimize=function(){for(var t=this._rowMap,e=this._infeasibleRows;0!==e.length;){var n=e.pop(),r=t.find(n);if(void 0!==r&&r.second.constant()<0){var o=this._getDualEnteringSymbol(r.second);if(o.type()===S.Invalid)throw new Error(\\\"dual optimize failed\\\");var i=r.second;t.erase(n),i.solveForEx(n,o),this._substitute(o,i),t.insert(o,i)}}},t.prototype._getEnteringSymbol=function(t){for(var e=t.cells(),n=0,r=e.size();n<r;++n){var o=e.itemAt(n),i=o.first;if(o.second<0&&i.type()!==S.Dummy)return i}return z},t.prototype._getDualEnteringSymbol=function(t){for(var e=Number.MAX_VALUE,n=z,r=t.cells(),o=0,i=r.size();o<i;++o){var a=r.itemAt(o),u=a.first,s=a.second;if(s>0&&u.type()!==S.Dummy){var c=this._objective.coefficientFor(u)/s;c<e&&(e=c,n=u)}}return n},t.prototype._getLeavingSymbol=function(t){for(var e=Number.MAX_VALUE,n=z,r=this._rowMap,o=0,i=r.size();o<i;++o){var a=r.itemAt(o),u=a.first;if(u.type()!==S.External){var s=a.second,c=s.coefficientFor(t);if(c<0){var f=-s.constant()/c;f<e&&(e=f,n=u)}}}return n},t.prototype._getMarkerLeavingSymbol=function(t){for(var e=Number.MAX_VALUE,n=e,r=e,o=z,i=o,a=o,u=o,s=this._rowMap,c=0,f=s.size();c<f;++c){var d=s.itemAt(c),h=d.second,p=h.coefficientFor(t);if(0!==p){var l=d.first;if(l.type()===S.External)u=l;else if(p<0){(v=-h.constant()/p)<n&&(n=v,i=l)}else{var v;(v=h.constant()/p)<r&&(r=v,a=l)}}}return i!==o?i:a!==o?a:u},t.prototype._removeConstraintEffects=function(t,e){e.marker.type()===S.Error&&this._removeMarkerEffects(e.marker,t.strength()),e.other.type()===S.Error&&this._removeMarkerEffects(e.other,t.strength())},t.prototype._removeMarkerEffects=function(t,e){var n=this._rowMap.find(t);void 0!==n?this._objective.insertRow(n.second,-e):this._objective.insertSymbol(t,-e)},t.prototype._anyPivotableSymbol=function(t){for(var e=t.cells(),n=0,r=e.size();n<r;++n){var o=e.itemAt(n),i=o.first.type();if(i===S.Slack||i===S.Error)return o.first}return z},t.prototype._makeSymbol=function(t){return new P(t,this._idTick++)},t}();function C(t){return t<0?-t<1e-8:t<1e-8}!function(t){t[t.Invalid=0]=\\\"Invalid\\\",t[t.External=1]=\\\"External\\\",t[t.Slack=2]=\\\"Slack\\\",t[t.Error=3]=\\\"Error\\\",t[t.Dummy=4]=\\\"Dummy\\\"}(S||(S={}));var P=function(){function t(t,e){this._id=e,this._type=t}return t.prototype.id=function(){return this._id},t.prototype.type=function(){return this._type},t}(),z=new P(S.Invalid,-1),L=function(){function t(t){void 0===t&&(t=0),this._cellMap=m(),this._constant=t}return t.prototype.cells=function(){return this._cellMap},t.prototype.constant=function(){return this._constant},t.prototype.isConstant=function(){return this._cellMap.empty()},t.prototype.allDummies=function(){for(var t=this._cellMap,e=0,n=t.size();e<n;++e){if(t.itemAt(e).first.type()!==S.Dummy)return!1}return!0},t.prototype.copy=function(){var e=new t(this._constant);return e._cellMap=this._cellMap.copy(),e},t.prototype.add=function(t){return this._constant+=t},t.prototype.insertSymbol=function(t,e){void 0===e&&(e=1),C(this._cellMap.setDefault(t,(function(){return 0})).second+=e)&&this._cellMap.erase(t)},t.prototype.insertRow=function(t,e){void 0===e&&(e=1),this._constant+=t._constant*e;for(var n=t._cellMap,r=0,o=n.size();r<o;++r){var i=n.itemAt(r);this.insertSymbol(i.first,i.second*e)}},t.prototype.removeSymbol=function(t){this._cellMap.erase(t)},t.prototype.reverseSign=function(){this._constant=-this._constant;for(var t=this._cellMap,e=0,n=t.size();e<n;++e){var r=t.itemAt(e);r.second=-r.second}},t.prototype.solveFor=function(t){var e=this._cellMap,n=-1/e.erase(t).second;this._constant*=n;for(var r=0,o=e.size();r<o;++r)e.itemAt(r).second*=n},t.prototype.solveForEx=function(t,e){this.insertSymbol(t,-1),this.solveFor(e)},t.prototype.coefficientFor=function(t){var e=this._cellMap.find(t);return void 0!==e?e.second:0},t.prototype.substitute=function(t,e){var n=this._cellMap.erase(t);void 0!==n&&this.insertRow(e,n.second)},t}();const F=(t,e)=>{if(\\\"undefined\\\"===typeof t.id)throw new Error(\\\"Object is missing property 'id' required for key.\\\");return t.id+\\\"_\\\"+e},R=(t,e)=>t-e,D=(t,e)=>t===e,T=(t,e)=>t>=e,B=(t,e=1,n=!1)=>n?V(t):U(t,e),U=(t,e)=>{for(let s=0;s<e;s+=1){var n=!0,r=!1,o=void 0;try{for(var i,a=t[Symbol.iterator]();!(n=(i=a.next()).done);n=!0){const t=i.value,e=(t.delta||R)(t.a[t.key],t.b[t.key],t),n=(t.distance||f)(t.a[t.key],t.b[t.key],t),r=t.target(t.a[t.key],t.b[t.key],t,e,n);if(!(t.operator||D)(n,r,e)){const n=(t.strength?t.strength(t):1)*(e-r);let o=t.weightA?t.weightA(t):1,i=t.weightB?t.weightB(t):1;o/=o+i,i=1-o,t.a[t.key]-=o*n,t.b[t.key]+=i*n}}}catch(u){r=!0,o=u}finally{try{n||null==a.return||a.return()}finally{if(r)throw o}}}},V=t=>{const e=new I,n={};var r=!0,o=!1,i=void 0;try{for(var a,u=t[Symbol.iterator]();!(r=(a=u.next()).done);r=!0){const t=a.value;n[F(t.a,t.key)]=new w,n[F(t.b,t.key)]=new w}}catch(m){o=!0,i=m}finally{try{r||null==u.return||u.return()}finally{if(o)throw i}}var s,c=!0,f=!1,d=void 0;try{for(var h,p=t[Symbol.iterator]();!(c=(h=p.next()).done);c=!0){const t=h.value,r=n[F(t.a,t.key)].minus(n[F(t.b,t.key)]);t.constraint=new O(r,(s=t.operator||D)===D?N.Eq:s===T?N.Ge:void 0,t.target(),!0===t.required?M.required:M.strong),e.addConstraint(t.constraint)}}catch(m){f=!0,d=m}finally{try{c||null==p.return||p.return()}finally{if(f)throw d}}e.updateVariables();var l=!0,v=!1,y=void 0;try{for(var g,b=t[Symbol.iterator]();!(l=(g=b.next()).done);l=!0){const t=g.value;t.a[t.key]=n[F(t.a,t.key)].value(),t.b[t.key]=n[F(t.b,t.key)].value()}}catch(m){v=!0,y=m}finally{try{l||null==b.return||b.return()}finally{if(v)throw y}}},G=(t,e,n)=>{const r=q(t);let o=0;for(let h=0;h<r.length;h+=1){const t=r[h];o+=c(t*n,Math.round(.25*n));var i=!0,a=!1,u=void 0;try{for(var s,f=e[h+1][Symbol.iterator]();!(i=(s=f.next()).done);i=!0){s.value.y+=o}}catch(d){a=!0,u=d}finally{try{i||null==f.return||f.return()}finally{if(a)throw u}}}},q=t=>{const e={};var n=!0,r=!1,o=void 0;try{for(var i,a=t[Symbol.iterator]();!(n=(i=a.next()).done);n=!0){const t=i.value,n=Math.abs(d(t.targetNode,t.sourceNode)-s)/s,r=t.sourceNode.row,o=t.targetNode.row-1;e[r]=e[r]||[0,0],e[r][0]+=n,e[r][1]+=1,o!==r&&(e[o]=e[o]||[0,0],e[o][0]+=n,e[o][1]+=1)}}catch(u){r=!0,o=u}finally{try{n||null==a.return||a.return()}finally{if(r)throw o}}for(const s in e)e[s]=e[s][0]/(e[s][1]||1);return Object.values(e)},Y={layout:{spaceX:16,spaceY:110,layerSpaceY:55,basisX:1500,padding:100,iterations:20},routing:{spaceX:26,spaceY:28,minPassageGap:40,stemUnit:8,stemMinSource:5,stemMinTarget:5,stemMax:20,stemSpaceSource:6,stemSpaceTarget:10}},X=(t,e,n,r=Y)=>{$(t,e),W(t,n),(({nodes:t,edges:e,layers:n,basisX:r,spaceX:o,spaceY:a,layerSpaceY:u,iterations:s})=>{const f=[],d=[],h=[],p=[],l=[],v=[],b=[];var m=!0,x=!1,_=void 0;try{for(var w,E=t[Symbol.iterator]();!(m=(w=E.next()).done);m=!0){const t=w.value;t.x=0,t.y=0}}catch($){x=!0,_=$}finally{try{m||null==E.return||E.return()}finally{if(x)throw _}}const j=e.map(t=>({a:t.targetNode,b:t.sourceNode,key:\\\"y\\\",operator:T,target:()=>a,weightA:()=>0,weightB:()=>1,required:!0}));if(n){const e=Object.values(n),r=.5*(a+u);let o=t.filter(t=>t.nearestLayer===e[0]);for(let n=0;n<e.length-1;n+=1){const i=e[n],a=e[n+1],u=t.filter(t=>t.nearestLayer===a),s={id:i,x:0,y:0};var k=!0,N=!1,M=void 0;try{for(var S,O=o[Symbol.iterator]();!(k=(S=O.next()).done);k=!0){const t=S.value;f.push({a:s,b:t,key:\\\"y\\\",operator:T,target:()=>r,weightA:()=>0,weightB:()=>1})}}catch($){N=!0,M=$}finally{try{k||null==O.return||O.return()}finally{if(N)throw M}}var A=!0,I=!1,C=void 0;try{for(var P,z=u[Symbol.iterator]();!(A=(P=z.next()).done);A=!0){const t=P.value;f.push({a:t,b:s,key:\\\"y\\\",operator:T,target:()=>r,weightA:()=>0,weightB:()=>1})}}catch($){I=!0,C=$}finally{try{A||null==z.return||z.return()}finally{if(I)throw C}}o=u}}B([...j,...f],1,!0);const L=y(t),F={basisX:r,key:\\\"x\\\",operator:(t,e,n)=>e>=0?n>=e:n<=e,target:(t,e,n)=>n.edgeA.sourceNode.x-n.edgeB.sourceNode.x+(n.edgeA.targetNode.x-n.edgeB.targetNode.x)<0?-n.basisX:n.basisX,strength:t=>1/t.basisX,weightA:()=>.5,weightB:()=>.5};for(let c=0;c<e.length;c+=1){const t=e[c];for(let n=c+1;n<e.length;n+=1){const r=e[n];t.source!==r.source&&d.push(i(i({},F),{},{a:t.sourceNode,b:r.sourceNode,edgeA:t,edgeB:r})),t.target!==r.target&&d.push(i(i({},F),{},{a:t.targetNode,b:r.targetNode,edgeA:t,edgeB:r}))}}var R=!0,U=!1,V=void 0;try{for(var q,Y=e[Symbol.iterator]();!(R=(q=Y.next()).done);R=!0){const t=q.value,e={a:t.sourceNode,b:t.targetNode,key:\\\"x\\\",operator:D,target:()=>0,strength:t=>1/Math.max(1,.5*(t.a.targets.length+t.b.sources.length)),weightA:()=>.5,weightB:()=>.5};h.push(e);const n=1===t.sourceNode.targets.length,r=1===t.targetNode.sources.length;(n||r)&&p.push(e),n&&r&&l.push(e)}}catch($){U=!0,V=$}finally{try{R||null==Y.return||Y.return()}finally{if(U)throw V}}const X=Math.ceil(.5*s);for(let i=0;i<s;i+=1){B(d,1),B(h,1),B(p,X),B(l,X),v.length=0;for(let t=0;t<L.length;t+=1){const e=L[t];e.sort((t,e)=>g(t.x,e.x,t.id,e.id));for(let t=0;t<e.length-1;t+=1)v.push({a:e[t],b:e[t+1],key:\\\"x\\\",operator:(t,e,n)=>n<=e,target:(t,e,n)=>-o-.5*n.a.width-.5*n.b.width,strength:()=>1,weightA:()=>.5,weightB:()=>.5})}B(v,X)}for(let i=0;i<L.length;i+=1){const t=L[i];for(let e=0;e<t.length-1;e+=1){const n=.8*(t[e+1].x-t[e].x),r=.5*t[e].width+o+.5*t[e+1].width,i=Math.max(c(n,o),r);b.push({a:t[e+1],b:t[e],key:\\\"x\\\",operator:T,target:()=>i,weightA:()=>0,weightB:()=>1,required:!0})}}B([...b,...h],1,!0),G(e,L,a)})(i({nodes:t,edges:e,layers:n},r.layout)),(({nodes:t,edges:e,spaceX:n,spaceY:r,minPassageGap:o,stemUnit:a,stemMinSource:u,stemMinTarget:s,stemMax:c,stemSpaceSource:m,stemSpaceTarget:x})=>{const _=y(t);var w=!0,E=!1,j=void 0;try{for(var k,N=t[Symbol.iterator]();!(w=(k=N.next()).done);w=!0){k.value.targets.sort((t,e)=>g(d(e.sourceNode,e.targetNode),d(t.sourceNode,t.targetNode)))}}catch(q){E=!0,j=q}finally{try{w||null==N.return||N.return()}finally{if(E)throw j}}var M=!0,S=!1,O=void 0;try{for(var A,I=e[Symbol.iterator]();!(M=(A=I.next()).done);M=!0){const t=A.value,e=t.sourceNode,a=t.targetNode;t.points=[];const u=Math.min((e.width-m)/e.targets.length,m),s=u*(e.targets.indexOf(t)-.5*(e.targets.length-1));let c={x:e.x+s,y:e.y};for(let d=e.row+1;d<a.row;d+=1){const e=_[d][0];let a={x:h(e)-n,y:e.y},u=1/0;const v=[i(i({},e),{},{x:Number.MIN_SAFE_INTEGER}),..._[d],i(i({},e),{},{x:Number.MAX_SAFE_INTEGER})];for(let t=0;t<v.length-1;t+=1){const e=v[t],i=v[t+1],s=h(i)-p(e);if(s<o)continue;const d=Math.min(n,.5*s),y=b(c.x,c.y,p(e)+d,l(e)-r,h(i)-d,l(i)-r),g=f(c.x,y.x);if(g>u)break;g<u&&(u=g,a=y)}const y=e.height+r;t.points.push({x:a.x+s,y:a.y}),t.points.push({x:a.x+s,y:a.y+y}),c={x:a.x,y:a.y+y}}}}catch(q){S=!0,O=q}finally{try{M||null==I.return||I.return()}finally{if(S)throw O}}var C=!0,P=!1,z=void 0;try{for(var L,F=t[Symbol.iterator]();!(C=(L=F.next()).done);C=!0){const t=L.value;t.targets.sort((t,e)=>g(d(e.sourceNode,e.points[0]||e.targetNode),d(t.sourceNode,t.points[0]||t.targetNode))),t.sources.sort((t,e)=>g(d(t.points[t.points.length-1]||t.sourceNode,t.targetNode),d(e.points[e.points.length-1]||e.sourceNode,e.targetNode)))}}catch(q){P=!0,z=q}finally{try{C||null==F.return||F.return()}finally{if(P)throw z}}var R=!0,D=!1,T=void 0;try{for(var B,U=e[Symbol.iterator]();!(R=(B=U.next()).done);R=!0){const t=B.value,e=t.sourceNode,n=t.targetNode,r=Math.min((e.width-m)/e.targets.length,m),o=Math.min((n.width-x)/n.sources.length,x),i=e.targets.indexOf(t)-.5*(e.targets.length-1),f=n.sources.indexOf(t)-.5*(n.sources.length-1),d=r*i,h=o*f,p=a*e.targets.length*(1-Math.abs(i)/e.targets.length),y=a*n.sources.length*(1-Math.abs(f)/n.sources.length),g=[{x:e.x+d,y:v(e)},{x:e.x+d,y:v(e)+u},{x:e.x+d,y:v(e)+u+Math.min(p,c)}],b=[{x:n.x+h,y:l(n)-s-Math.min(y,c)},{x:n.x+h,y:l(n)-s},{x:n.x+h,y:l(n)}],_=[...g,...t.points,...b];let w=_[0].y;for(var V=0,G=_;V<G.length;V++){const t=G[V];t.y<w?t.y=w:w=t.y}t.points=_}}catch(q){D=!0,T=q}finally{try{R||null==U.return||U.return()}finally{if(D)throw T}}})(i({nodes:t,edges:e,layers:n},r.routing));const o=tt(t,r.layout.padding);return t.forEach(t=>((t,e)=>(t.x=t.x-e.x,t.y=t.y-e.y,t.order=t.x+9999*t.y,t))(t,o.min)),e.forEach(t=>((t,e)=>(t.points.forEach(t=>{t.x=t.x-e.x,t.y=t.y-e.y}),t))(t,o.min)),{nodes:t,edges:e,layers:n,size:o}},$=(t,e)=>{const n={};var r=!0,o=!1,i=void 0;try{for(var a,u=t[Symbol.iterator]();!(r=(a=u.next()).done);r=!0){const t=a.value;n[t.id]=t,t.targets=[],t.sources=[]}}catch(p){o=!0,i=p}finally{try{r||null==u.return||u.return()}finally{if(o)throw i}}var s=!0,c=!1,f=void 0;try{for(var d,h=e[Symbol.iterator]();!(s=(d=h.next()).done);s=!0){const t=d.value;t.sourceNode=n[t.source],t.targetNode=n[t.target],t.sourceNode.targets.push(t),t.targetNode.sources.push(t)}}catch(p){c=!0,f=p}finally{try{s||null==h.return||h.return()}finally{if(c)throw f}}},W=(t,e)=>{if(e&&e.length>0){const c=e.reduce((t,e)=>i(i({},t),{},{[e]:!0}),{}),f=t=>Boolean(c[t.layer]);var n=!0,r=!1,o=void 0;try{for(var a,u=t[Symbol.iterator]();!(n=(a=u.next()).done);n=!0){const t=a.value,e=Z(t,J,H,f);t.nearestLayer=e&&e.layer}}catch(s){r=!0,o=s}finally{try{n||null==u.return||u.return()}finally{if(r)throw o}}}},J=t=>K(t).concat(Q(t)),K=t=>t.targets.map(t=>t.targetNode),Q=t=>t.sources.map(t=>t.sourceNode),H=(t,e)=>Math.abs(t.rank-e.rank),Z=(t,e,n,r,o)=>{if(r(t))return t;(o=o||{})[t.id]=!0;const i=e(t).filter(t=>!o[t.id]).sort((e,r)=>n(t,e)-n(t,r));return i.filter(r)[0]||i.map(t=>Z(t,e,n,r,o))[0]},tt=(t,e)=>{const n={min:{x:1/0,y:1/0},max:{x:-1/0,y:-1/0}};var r=!0,o=!1,i=void 0;try{for(var a,u=t[Symbol.iterator]();!(r=(a=u.next()).done);r=!0){const t=a.value,e=t.x,r=t.y;e<n.min.x&&(n.min.x=e),e>n.max.x&&(n.max.x=e),r<n.min.y&&(n.min.y=r),r>n.max.y&&(n.max.y=r)}}catch(s){o=!0,i=s}finally{try{r||null==u.return||u.return()}finally{if(o)throw i}}return n.width=n.max.x-n.min.x+2*e,n.height=n.max.y-n.min.y+2*e,n.min.x-=e,n.min.y-=e,n},et=({nodes:t,edges:e,layers:n})=>{const r=X(t,e,n);return i(i({},r),{},{size:i(i({},r.size),{},{marginx:100,marginy:100}),newgraph:!0})},nt=({nodes:t,edges:e,layers:n})=>{const r=Boolean(n.length),o=(new u.a.graphlib.Graph).setGraph({ranker:r?\\\"none\\\":null,ranksep:r?200:70,marginx:40,marginy:40});return t.forEach(t=>{o.setNode(t.id,t)}),e.forEach(t=>{o.setEdge(t.source,t.target,t)}),u.a.layout(o),{nodes:o.nodes().map(t=>{const e=o.node(t);return i(i({},e),{},{order:e.x+9999*e.y})}),edges:o.edges().map(t=>o.edge(t)),size:o.graph(),newgraph:!1}};addEventListener(\\\"message\\\",(function(t){var n,r=t.data,o=r.type,i=r.method,a=r.id,u=r.params;\\\"RPC\\\"===o&&i&&((n=e[i])?Promise.resolve().then((function(){return n.apply(e,u)})):Promise.reject(\\\"No such method\\\")).then((function(t){postMessage({type:\\\"RPC\\\",id:a,result:t})})).catch((function(t){var e={message:t};t.stack&&(e.message=t.message,e.stack=t.stack,e.name=t.name),postMessage({type:\\\"RPC\\\",id:a,error:e})}))})),postMessage({type:\\\"RPC\\\",method:\\\"ready\\\"})}]);\\n//# sourceMappingURL=a48df5ce533b9ddf6f78.worker.js.map\"])), { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","export const RESET_DATA = 'RESET_DATA';\n\n/**\n * Overwrite the existing data store when receiving new data from upstream\n * @param {Object} data New pipeline state data\n */\nexport function resetData(data) {\n  return {\n    type: RESET_DATA,\n    data\n  };\n}\n\nexport const TOGGLE_LAYERS = 'TOGGLE_LAYERS';\n\n/**\n * Toggle whether to show layers on/off\n * @param {Boolean} visible True if layers are to be shown\n */\nexport function toggleLayers(visible) {\n  return {\n    type: TOGGLE_LAYERS,\n    visible\n  };\n}\n\nexport const TOGGLE_EXPORT_MODAL = 'TOGGLE_EXPORT_MODAL';\n\n/**\n * Toggle whether to show the export modal\n * @param {Boolean} visible True if the modal is to be shown\n */\nexport function toggleExportModal(visible) {\n  return {\n    type: TOGGLE_EXPORT_MODAL,\n    visible\n  };\n}\n\nexport const TOGGLE_TEXT_LABELS = 'TOGGLE_TEXT_LABELS';\n\n/**\n * Toggle whether to show text labels on/off\n * @param {Boolean} textLabels True if text labels are to be shown\n */\nexport function toggleTextLabels(textLabels) {\n  return {\n    type: TOGGLE_TEXT_LABELS,\n    textLabels\n  };\n}\n\nexport const TOGGLE_TAG_FILTER = 'TOGGLE_TAG_FILTER';\n\n/**\n * Toggle a tag on/off\n * @param {string} tagID Tag id\n * @param {Boolean} enabled True if tag is enabled\n */\nexport function toggleTagFilter(tagID, enabled) {\n  return {\n    type: TOGGLE_TAG_FILTER,\n    tagID,\n    enabled\n  };\n}\n\nexport const TOGGLE_SIDEBAR = 'TOGGLE_SIDEBAR';\n\n/**\n * Toggle sidebar visible/hidden\n * @param {boolean} visible Whether sidebar nav is shown\n */\nexport function toggleSidebar(visible) {\n  return {\n    type: TOGGLE_SIDEBAR,\n    visible\n  };\n}\n\nexport const TOGGLE_THEME = 'TOGGLE_THEME';\n\n/**\n * Switch between light/dark theme\n * @param {string} theme Theme name\n */\nexport function toggleTheme(theme) {\n  return {\n    type: TOGGLE_THEME,\n    theme\n  };\n}\n\nexport const UPDATE_ACTIVE_PIPELINE = 'UPDATE_ACTIVE_PIPELINE';\n\n/**\n * Update the actively-selected pipeline\n * @param {string} pipeline Pipeline ID\n */\nexport function updateActivePipeline(pipeline) {\n  return {\n    type: UPDATE_ACTIVE_PIPELINE,\n    pipeline\n  };\n}\n\nexport const UPDATE_CHART_SIZE = 'UPDATE_CHART_SIZE';\n\n/**\n * Store the chart size, based on the window\n * @param {Object} chartSize getBoundingClientRect value\n */\nexport function updateChartSize(chartSize) {\n  return {\n    type: UPDATE_CHART_SIZE,\n    chartSize\n  };\n}\n\nexport const UPDATE_ZOOM = 'UPDATE_ZOOM';\n\n/**\n * Store the zoom\n * @param {Object} zoom The zoom transform\n */\nexport function updateZoom(zoom) {\n  return {\n    type: UPDATE_ZOOM,\n    zoom\n  };\n}\n\nexport const UPDATE_FONT_LOADED = 'UPDATE_FONT_LOADED';\n\n/**\n * Update whether the webfont has loaded, which should block the chart render\n * @param {Boolean} fontLoaded Whether the font has loaded\n */\nexport function updateFontLoaded(fontLoaded) {\n  return {\n    type: UPDATE_FONT_LOADED,\n    fontLoaded\n  };\n}\n\nexport const TOGGLE_MINIMAP = 'TOGGLE_MINIMAP';\n\n/**\n * Toggle mini map\n * @param {string} visible Visibility status\n */\nexport function toggleMiniMap(visible) {\n  return {\n    type: TOGGLE_MINIMAP,\n    visible\n  };\n}\n\nexport const CHANGE_FLAG = 'CHANGE_FLAG';\n\n/**\n * Change the given feature flag\n * @param {string} name The flag name\n * @param {value} value The value to set\n */\nexport function changeFlag(name, value) {\n  return {\n    type: CHANGE_FLAG,\n    name,\n    value\n  };\n}\n","import { TOGGLE_LAYERS } from '../actions';\n\nfunction layerReducer(layerState = {}, action) {\n  switch (action.type) {\n    case TOGGLE_LAYERS: {\n      return Object.assign({}, layerState, {\n        visible: action.visible\n      });\n    }\n\n    default:\n      return layerState;\n  }\n}\n\nexport default layerReducer;\n","export const TOGGLE_NODE_CLICKED = 'TOGGLE_NODE_CLICKED';\n\n/**\n * Update the value of the currently-active clicked node\n * @param {string|null} nodeClicked The node's unique identifier\n */\nexport function toggleNodeClicked(nodeClicked) {\n  return {\n    type: TOGGLE_NODE_CLICKED,\n    nodeClicked\n  };\n}\n\nexport const TOGGLE_NODES_DISABLED = 'TOGGLE_NODES_DISABLED';\n\n/**\n * Toggle a selected group of nodes' visibility on/off\n * @param {Array} nodeIDs The nodes' unique identifiers\n * @param {Boolean} isDisabled Whether the node should be visible\n */\nexport function toggleNodesDisabled(nodeIDs, isDisabled) {\n  return {\n    type: TOGGLE_NODES_DISABLED,\n    nodeIDs,\n    isDisabled\n  };\n}\n\nexport const TOGGLE_NODE_HOVERED = 'TOGGLE_NODE_HOVERED';\n\n/**\n * Update the value of the currently-active hovered node\n * @param {string|null} nodeHovered The node's unique identifier\n */\nexport function toggleNodeHovered(nodeHovered) {\n  return {\n    type: TOGGLE_NODE_HOVERED,\n    nodeHovered\n  };\n}\n","import {\n  TOGGLE_NODE_CLICKED,\n  TOGGLE_NODES_DISABLED,\n  TOGGLE_NODE_HOVERED\n} from '../actions/nodes';\nimport { UPDATE_ACTIVE_PIPELINE } from '../actions';\n\nfunction nodeReducer(nodeState = {}, action) {\n  const updateState = newState => Object.assign({}, nodeState, newState);\n\n  switch (action.type) {\n    case TOGGLE_NODE_CLICKED: {\n      return updateState({\n        clicked: action.nodeClicked\n      });\n    }\n\n    case TOGGLE_NODES_DISABLED: {\n      return updateState({\n        clicked: action.nodeIDs.includes(nodeState.clicked)\n          ? null\n          : nodeState.clicked,\n        disabled: action.nodeIDs.reduce(\n          (disabled, id) =>\n            Object.assign({}, disabled, {\n              [id]: action.isDisabled\n            }),\n          nodeState.disabled\n        )\n      });\n    }\n\n    case TOGGLE_NODE_HOVERED: {\n      return updateState({\n        hovered: action.nodeHovered\n      });\n    }\n\n    case UPDATE_ACTIVE_PIPELINE: {\n      return updateState({\n        clicked: null,\n        hovered: null\n      });\n    }\n\n    default:\n      return nodeState;\n  }\n}\n\nexport default nodeReducer;\n","import { TOGGLE_TAG_ACTIVE, TOGGLE_TAG_FILTER } from '../actions/tags';\n\nfunction tagReducer(tagState = {}, action) {\n  const updateState = newState => Object.assign({}, tagState, newState);\n\n  switch (action.type) {\n    case TOGGLE_TAG_ACTIVE: {\n      return updateState({\n        active: Object.assign({}, tagState.active, {\n          [action.tagID]: action.active\n        })\n      });\n    }\n\n    case TOGGLE_TAG_FILTER: {\n      return updateState({\n        enabled: Object.assign({}, tagState.enabled, {\n          [action.tagID]: action.enabled\n        })\n      });\n    }\n\n    default:\n      return tagState;\n  }\n}\n\nexport default tagReducer;\n","export const TOGGLE_TAG_ACTIVE = 'TOGGLE_TAG_ACTIVE';\n\n/**\n * Toggle a tag's highlighting on/off\n * @param {string} tagID Tag id\n * @param {Boolean} active True if tag is active\n */\nexport function toggleTagActive(tagID, active) {\n  return {\n    type: TOGGLE_TAG_ACTIVE,\n    tagID,\n    active\n  };\n}\n\nexport const TOGGLE_TAG_FILTER = 'TOGGLE_TAG_FILTER';\n\n/**\n * Toggle a tag on/off\n * @param {string} tagID Tag id\n * @param {Boolean} enabled True if tag is enabled\n */\nexport function toggleTagFilter(tagID, enabled) {\n  return {\n    type: TOGGLE_TAG_FILTER,\n    tagID,\n    enabled\n  };\n}\n","import { TOGGLE_TYPE_DISABLED } from '../actions/node-type';\n\nfunction nodeTypeReducer(nodeTypeState = {}, action) {\n  switch (action.type) {\n    case TOGGLE_TYPE_DISABLED: {\n      return Object.assign({}, nodeTypeState, {\n        disabled: Object.assign({}, nodeTypeState.disabled, {\n          [action.typeID]: action.disabled\n        })\n      });\n    }\n    default:\n      return nodeTypeState;\n  }\n}\n\nexport default nodeTypeReducer;\n","export const TOGGLE_TYPE_DISABLED = 'TOGGLE_TYPE_DISABLED';\n\n/**\n * Toggle a node-type's visibility on/off\n * @param {string} typeID Type id\n * @param {Boolean} disabled True if type is disabled\n */\nexport function toggleTypeDisabled(typeID, disabled) {\n  return {\n    type: TOGGLE_TYPE_DISABLED,\n    typeID,\n    disabled\n  };\n}\n","import {\n  TOGGLE_EXPORT_MODAL,\n  TOGGLE_LAYERS,\n  TOGGLE_SIDEBAR,\n  TOGGLE_MINIMAP\n} from '../actions';\n\nfunction visibleReducer(visibleState = {}, action) {\n  switch (action.type) {\n    case TOGGLE_EXPORT_MODAL: {\n      return Object.assign({}, visibleState, {\n        exportModal: action.visible\n      });\n    }\n\n    case TOGGLE_LAYERS: {\n      return Object.assign({}, visibleState, {\n        layers: action.visible\n      });\n    }\n\n    case TOGGLE_SIDEBAR: {\n      return Object.assign({}, visibleState, {\n        sidebar: action.visible\n      });\n    }\n\n    case TOGGLE_MINIMAP: {\n      return Object.assign({}, visibleState, {\n        miniMap: action.visible\n      });\n    }\n\n    default:\n      return visibleState;\n  }\n}\n\nexport default visibleReducer;\n","import { UPDATE_ACTIVE_PIPELINE } from '../actions';\n\nfunction pipelineReducer(pipelineState = {}, action) {\n  switch (action.type) {\n    case UPDATE_ACTIVE_PIPELINE: {\n      return Object.assign({}, pipelineState, {\n        active: action.pipeline\n      });\n    }\n\n    default:\n      return pipelineState;\n  }\n}\n\nexport default pipelineReducer;\n","import { CHANGE_FLAG } from '../actions';\n\nfunction flagsReducer(flagsState = {}, action) {\n  switch (action.type) {\n    case CHANGE_FLAG: {\n      return Object.assign({}, flagsState, {\n        [action.name]: action.value\n      });\n    }\n\n    default:\n      return flagsState;\n  }\n}\n\nexport default flagsReducer;\n","// This file contains any web-workers used in the app, which are inlined by\n// webpack + workerize-loader, so that they can be used in the exported library\n// without needing any special configuration on the part of the consumer.\n// Web workers don't work in Jest, so in a test environment we directly import\n// them instead, and then mock up a faux-worker function\n\n/* eslint-disable import/no-webpack-loader-syntax */\n\n// Check for test environment\nconst isTest = typeof jest !== 'undefined';\n\n// Conditionally load task via web worker only in non-test env\nconst graphWorker = isTest\n  ? require('./graph')\n  : require('workerize-loader?inline!./graph');\n\n/**\n * Emulate a web worker for testing purposes\n */\nconst createMockWorker = worker => {\n  if (!isTest) {\n    return worker;\n  }\n  return () => {\n    const mockWorker = {\n      terminate: () => {}\n    };\n    Object.keys(worker).forEach(name => {\n      mockWorker[name] = payload =>\n        new Promise(resolve => resolve(worker[name](payload)));\n    });\n    return mockWorker;\n  };\n};\n\nexport const graph = createMockWorker(graphWorker);\n\n/**\n * Manage the worker, avoiding race conditions by terminating running\n * processes when a new request is made, and reinitialising the instance.\n * Example getJob: (instance, payload) => instance.job(payload)\n * @param {function} worker Init worker and return job functions\n * @param {function} getJob Callback to select correct job function\n * @return {function} Function which returns a promise\n */\nexport function preventWorkerQueues(worker, getJob) {\n  let instance = worker();\n  let running = false;\n\n  return payload => {\n    if (running) {\n      // If worker is already processing a job, cancel it and restart\n      instance.terminate();\n      instance = worker();\n    }\n    running = true;\n\n    return getJob(instance, payload).then(response => {\n      running = false;\n      return response;\n    });\n  };\n}\n","import { graph as worker, preventWorkerQueues } from '../utils/worker';\n\nexport const TOGGLE_GRAPH_LOADING = 'TOGGLE_GRAPH_LOADING';\n\n/**\n * Toggle whether to display the loading spinner\n * @param {boolean} loading\n */\nexport function toggleLoading(loading) {\n  return {\n    type: TOGGLE_GRAPH_LOADING,\n    loading\n  };\n}\n\nexport const UPDATE_GRAPH_LAYOUT = 'UPDATE_GRAPH_LAYOUT';\n\n/**\n * Update the graph layout object\n * @param {Object} graph\n */\nexport function updateGraph(graph) {\n  return {\n    type: UPDATE_GRAPH_LAYOUT,\n    graph\n  };\n}\n\n/**\n * Choose which layout engine to use based on the newgraph flag\n * @param {Object} instance Worker parent instance\n * @param {Object} state A subset of main state\n * @return {function} Promise function\n */\nconst chooseLayout = (instance, state) =>\n  state.newgraph ? instance.graphNew(state) : instance.graphDagre(state);\n\n// Prepare new layout worker\nconst layoutWorker = preventWorkerQueues(worker, chooseLayout);\n\n/**\n * Async action to calculate graph layout in a web worker\n * whiled displaying a loading spinner\n * @param {Object} graphState A subset of main state\n * @return {function} A promise that resolves when the calcuation is done\n */\nexport function calculateGraph(graphState) {\n  if (!graphState) {\n    return updateGraph(graphState);\n  }\n  return async function(dispatch) {\n    dispatch(toggleLoading(true));\n    const graph = await layoutWorker(graphState);\n    dispatch(toggleLoading(false));\n    return dispatch(updateGraph(graph));\n  };\n}\n","import { TOGGLE_GRAPH_LOADING, UPDATE_GRAPH_LAYOUT } from '../actions/graph';\n\nfunction nodeReducer(graphState = {}, action) {\n  const updateState = newState => Object.assign({}, graphState, newState);\n\n  switch (action.type) {\n    case TOGGLE_GRAPH_LOADING: {\n      return updateState({\n        loading: action.loading\n      });\n    }\n\n    case UPDATE_GRAPH_LAYOUT: {\n      return updateState(action.graph);\n    }\n\n    default:\n      return graphState;\n  }\n}\n\nexport default nodeReducer;\n","import { combineReducers } from 'redux';\nimport layer from './layers';\nimport node from './nodes';\nimport tag from './tags';\nimport nodeType from './node-type';\nimport visible from './visible';\nimport pipeline from './pipeline';\nimport flags from './flags';\nimport graph from './graph';\nimport {\n  RESET_DATA,\n  TOGGLE_TEXT_LABELS,\n  TOGGLE_THEME,\n  UPDATE_CHART_SIZE,\n  UPDATE_ZOOM,\n  UPDATE_FONT_LOADED\n} from '../actions';\n\n/**\n * Create a generic reducer\n * @param {*} initialState Default state\n * @param {string} type Action type\n * @param {string} key Action payload key\n * @return {*} Updated state\n */\nconst createReducer = (initialState, type, key) => (\n  state = initialState,\n  action\n) => {\n  if (typeof key !== 'undefined' && action.type === type) {\n    return action[key];\n  }\n  return state;\n};\n\n/**\n * Reset/update application-wide data\n * @param {Object} state Complete app state\n * @param {Object} action Redux action\n * @return {Object} Updated(?) state\n */\nfunction resetDataReducer(state = {}, action) {\n  if (action.type === RESET_DATA) {\n    return Object.assign({}, state, action.data);\n  }\n  return state;\n}\n\nconst combinedReducer = combineReducers({\n  // These props have their own reducers in other files\n  flags,\n  graph,\n  layer,\n  node,\n  nodeType,\n  pipeline,\n  tag,\n  visible,\n  // These props don't have any actions associated with them\n  edge: createReducer({}),\n  id: createReducer(null),\n  // These props have very simple non-nested actions\n  chartSize: createReducer({}, UPDATE_CHART_SIZE, 'chartSize'),\n  zoom: createReducer({}, UPDATE_ZOOM, 'zoom'),\n  fontLoaded: createReducer(false, UPDATE_FONT_LOADED, 'fontLoaded'),\n  textLabels: createReducer(true, TOGGLE_TEXT_LABELS, 'textLabels'),\n  theme: createReducer('dark', TOGGLE_THEME, 'theme')\n});\n\nconst rootReducer = (state, action) =>\n  resetDataReducer(combinedReducer(state, action), action);\n\nexport default rootReducer;\n","//--- Useful JS utility functions ---//\n\n/**\n * Loop through an array and output to an object\n * @param {Array} array\n * @param {Function} callback\n */\nexport const arrayToObject = (array, callback) => {\n  const newObject = {};\n  array.forEach(key => {\n    newObject[key] = callback(key);\n  });\n  return newObject;\n};\n\n/**\n * Filter duplicate values from an array\n * @param {any} d Datum\n * @param {number} i Index\n * @param {Array} arr The array to remove duplicate values from\n */\nexport const unique = (d, i, arr) => arr.indexOf(d) === i;\n","import { createSelector } from 'reselect';\nimport { arrayToObject } from '../utils';\n\nconst getNodeIDs = state => state.node.ids;\nconst getNodePipelines = state => state.node.pipelines;\nconst getActivePipeline = state => state.pipeline.active;\nconst getNodeTags = state => state.node.tags;\n\n/**\n * Calculate whether nodes should be disabled based on their tags\n */\nexport const getNodeDisabledPipeline = createSelector(\n  [getNodeIDs, getNodePipelines, getActivePipeline],\n  (nodeIDs, nodePipelines, activePipeline) =>\n    arrayToObject(nodeIDs, nodeID => {\n      if (!activePipeline) {\n        return false;\n      }\n      return !nodePipelines[nodeID][activePipeline];\n    })\n);\n\n/**\n * Get a list of just the IDs for the active pipeline\n */\nexport const getPipelineNodeIDs = createSelector(\n  [getNodeIDs, getNodeDisabledPipeline],\n  (nodeIDs, nodeDisabledPipeline) =>\n    nodeIDs.filter(nodeID => !nodeDisabledPipeline[nodeID])\n);\n\n/**\n * Get IDs of tags used in the current pipeline\n */\nexport const getPipelineTagIDs = createSelector(\n  [getPipelineNodeIDs, getNodeTags],\n  (nodeIDs, nodeTags) => {\n    const visibleTags = {};\n    nodeIDs.forEach(nodeID => {\n      nodeTags[nodeID].forEach(tagID => {\n        if (!visibleTags[tagID]) {\n          visibleTags[tagID] = true;\n        }\n      });\n    });\n    return Object.keys(visibleTags);\n  }\n);\n","import { createSelector } from 'reselect';\nimport { getPipelineTagIDs } from './pipeline';\n\nconst getTagName = state => state.tag.name;\nconst getTagActive = state => state.tag.active;\nconst getTagEnabled = state => state.tag.enabled;\n\n/**\n * Retrieve the formatted list of tag filters\n */\nexport const getTagData = createSelector(\n  [getPipelineTagIDs, getTagName, getTagActive, getTagEnabled],\n  (tagIDs, tagName, tagActive, tagEnabled) =>\n    tagIDs.sort().map(id => ({\n      id,\n      name: tagName[id],\n      active: Boolean(tagActive[id]),\n      enabled: Boolean(tagEnabled[id])\n    }))\n);\n\n/**\n * Get the total and enabled number of tags\n */\nexport const getTagCount = createSelector(\n  [getPipelineTagIDs, getTagEnabled],\n  (tagIDs, tagEnabled) => ({\n    total: tagIDs.length,\n    enabled: tagIDs.filter(id => tagEnabled[id]).length\n  })\n);\n","import { createSelector } from 'reselect';\nimport { arrayToObject } from '../utils';\nimport { getTagCount } from './tags';\nimport { getNodeDisabledPipeline, getPipelineNodeIDs } from './pipeline';\n\nconst getNodeIDs = state => state.node.ids;\nconst getNodeDisabledNode = state => state.node.disabled;\nconst getNodeTags = state => state.node.tags;\nconst getNodeType = state => state.node.type;\nconst getTagEnabled = state => state.tag.enabled;\nconst getNodeTypeDisabled = state => state.nodeType.disabled;\nconst getEdgeIDs = state => state.edge.ids;\nconst getEdgeSources = state => state.edge.sources;\nconst getEdgeTargets = state => state.edge.targets;\nconst getLayerIDs = state => state.layer.ids;\nconst getLayersVisible = state => state.layer.visible;\nconst getNodeLayer = state => state.node.layer;\n\n/**\n * Calculate whether nodes should be disabled based on their tags\n */\nexport const getNodeDisabledTag = createSelector(\n  [getNodeIDs, getTagEnabled, getTagCount, getNodeTags],\n  (nodeIDs, tagEnabled, tagCount, nodeTags) =>\n    arrayToObject(nodeIDs, nodeID => {\n      if (tagCount.enabled === 0) {\n        return false;\n      }\n      if (nodeTags[nodeID].length) {\n        // Hide task nodes that don't have at least one tag filter enabled\n        return !nodeTags[nodeID].some(tag => tagEnabled[tag]);\n      }\n      return true;\n    })\n);\n\n/**\n * Set disabled status if the node is specifically hidden, and/or via a tag/view/type\n */\nexport const getNodeDisabled = createSelector(\n  [\n    getNodeIDs,\n    getNodeDisabledNode,\n    getNodeDisabledTag,\n    getNodeDisabledPipeline,\n    getNodeType,\n    getNodeTypeDisabled\n  ],\n  (\n    nodeIDs,\n    nodeDisabledNode,\n    nodeDisabledTag,\n    nodeDisabledPipeline,\n    nodeType,\n    typeDisabled\n  ) =>\n    arrayToObject(nodeIDs, id =>\n      [\n        nodeDisabledNode[id],\n        nodeDisabledTag[id],\n        nodeDisabledPipeline[id],\n        typeDisabled[nodeType[id]]\n      ].some(Boolean)\n    )\n);\n\n/**\n * Get a list of just the IDs for the remaining visible nodes\n */\nexport const getVisibleNodeIDs = createSelector(\n  [getPipelineNodeIDs, getNodeDisabled],\n  (nodeIDs, nodeDisabled) => nodeIDs.filter(id => !nodeDisabled[id])\n);\n\n/**\n * Get a list of just the IDs for the remaining visible layers\n */\nexport const getVisibleLayerIDs = createSelector(\n  [getVisibleNodeIDs, getNodeLayer, getLayerIDs, getLayersVisible],\n  (nodeIDs, nodeLayer, layerIDs, layersVisible) => {\n    if (!layersVisible) {\n      return [];\n    }\n    const visibleLayerIDs = {};\n    for (const nodeID of nodeIDs) {\n      visibleLayerIDs[nodeLayer[nodeID]] = true;\n    }\n    return layerIDs.filter(layerID => visibleLayerIDs[layerID]);\n  }\n);\n\n/**\n * Determine whether an edge should be disabled based on their source/target nodes\n */\nexport const getEdgeDisabled = createSelector(\n  [getEdgeIDs, getNodeDisabled, getEdgeSources, getEdgeTargets],\n  (edgeIDs, nodeDisabled, edgeSources, edgeTargets) =>\n    arrayToObject(edgeIDs, edgeID => {\n      const source = edgeSources[edgeID];\n      const target = edgeTargets[edgeID];\n      return Boolean(nodeDisabled[source] || nodeDisabled[target]);\n    })\n);\n","import { createSelector } from 'reselect';\nimport { getNodeDisabled, getEdgeDisabled } from './disabled';\n\nconst getNodeIDs = state => state.node.ids;\nconst getEdgeIDs = state => state.edge.ids;\nconst getEdgeSources = state => state.edge.sources;\nconst getEdgeTargets = state => state.edge.targets;\n\n/**\n * Create a new transitive edge from the first and last edge in the path\n * @param {string} target Node ID for the new edge\n * @param {string} source Node ID for the new edge\n * @param {object} transitiveEdges Store of existing edges\n */\nexport const addNewEdge = (source, target, { edgeIDs, sources, targets }) => {\n  const id = [source, target].join('|');\n  if (!edgeIDs.includes(id)) {\n    edgeIDs.push(id);\n    sources[id] = source;\n    targets[id] = target;\n  }\n};\n\n/**\n * Create new edges to connect nodes which have a disabled node (or nodes)\n * in between them\n */\nexport const getTransitiveEdges = createSelector(\n  [getNodeIDs, getEdgeIDs, getNodeDisabled, getEdgeSources, getEdgeTargets],\n  (nodeIDs, edgeIDs, nodeDisabled, edgeSources, edgeTargets) => {\n    const transitiveEdges = {\n      edgeIDs: [],\n      sources: {},\n      targets: {}\n    };\n\n    /**\n     * Recursively walk through the graph, stepping over disabled nodes,\n     * generating a list of nodes visited so far, and create transitive edges\n     * for each path that visits disabled nodes between enabled nodes.\n     * @param {Array} path The route that has been explored so far\n     */\n    const walkGraphEdges = path => {\n      edgeIDs.forEach(edgeID => {\n        const source = path[path.length - 1];\n        // Filter to only edges where the source node is the previous target\n        if (edgeSources[edgeID] !== source) {\n          return;\n        }\n        const target = edgeTargets[edgeID];\n        if (nodeDisabled[target]) {\n          // If target node is disabled then keep walking the graph\n          walkGraphEdges(path.concat(target));\n        } else if (path.length > 1) {\n          // Else only create a new edge if there would be 3 or more nodes in the path\n          addNewEdge(path[0], target, transitiveEdges);\n        }\n      });\n    };\n\n    // Only run walk if some nodes are disabled\n    if (nodeIDs.some(nodeID => nodeDisabled[nodeID])) {\n      // Examine the children of every enabled node. The walk only needs\n      // to be run in a single direction (i.e. top down), because links\n      // that end in a terminus can never be transitive.\n      nodeIDs.forEach(nodeID => {\n        if (!nodeDisabled[nodeID]) {\n          walkGraphEdges([nodeID]);\n        }\n      });\n    }\n\n    return transitiveEdges;\n  }\n);\n\n/**\n * Get only the visible edges (plus transitive edges),\n * and return them formatted as an array of objects\n */\nexport const getVisibleEdges = createSelector(\n  [\n    getEdgeIDs,\n    getEdgeDisabled,\n    getEdgeSources,\n    getEdgeTargets,\n    getTransitiveEdges\n  ],\n  (edgeIDs, edgeDisabled, edgeSources, edgeTargets, transitiveEdges) =>\n    edgeIDs\n      .filter(id => !edgeDisabled[id])\n      .concat(transitiveEdges.edgeIDs)\n      .map(id => ({\n        id,\n        source: edgeSources[id] || transitiveEdges.sources[id],\n        target: edgeTargets[id] || transitiveEdges.targets[id]\n      }))\n);\n","import { createSelector } from 'reselect';\nimport batchingToposort from 'batching-toposort';\nimport { getVisibleNodeIDs, getVisibleLayerIDs } from './disabled';\nimport { getVisibleEdges } from './edges';\n\nconst getNodeLayer = state => state.node.layer;\n\n/**\n * Get list of visible nodes for each visible layer\n */\nexport const getLayerNodes = createSelector(\n  [getVisibleNodeIDs, getVisibleLayerIDs, getNodeLayer],\n  (nodeIDs, layerIDs, nodeLayer) => {\n    if (!layerIDs.length) {\n      return [];\n    }\n    // Create object containing a list of every node for each layer\n    const layerNodes = {};\n    for (const nodeID of nodeIDs) {\n      const layer = nodeLayer[nodeID];\n      if (!layerNodes[layer]) {\n        layerNodes[layer] = [];\n      }\n      layerNodes[layer].push(nodeID);\n    }\n\n    // Convert to a nested array of layers of nodes\n    return layerIDs.map(layerID => layerNodes[layerID]);\n  }\n);\n\n/**\n * Calculate ranks (vertical placement) for each node,\n * by toposorting while taking layers into account\n */\nexport const getNodeRank = createSelector(\n  [getVisibleNodeIDs, getVisibleEdges, getLayerNodes, getVisibleLayerIDs],\n  (nodeIDs, edges, layerNodes, layerIDs) => {\n    if (!layerIDs.length) {\n      return {};\n    }\n\n    // For each node, create a list of nodes that depend on that node\n    const nodeDeps = {};\n\n    // Initialise empty dependency arrays for each node\n    for (const nodeID of nodeIDs) {\n      nodeDeps[nodeID] = [];\n    }\n\n    // Add dependencies for visible edges\n    for (const edge of edges) {\n      nodeDeps[edge.source].push(edge.target);\n    }\n\n    // Add \"false edge\" dependencies for layered nodes to prevent layer overlaps\n    for (let i = 1; i < layerNodes.length; i++) {\n      for (const sourceID of layerNodes[i - 1]) {\n        for (const targetID of layerNodes[i]) {\n          nodeDeps[sourceID].push(targetID);\n        }\n      }\n    }\n\n    // Run toposort algorithm to rank nodes by dependency\n    const toposortedNodes = batchingToposort(nodeDeps);\n\n    // Convert toposort order into rank numbering\n    const nodeRanks = {};\n    for (let rank = 0; rank < toposortedNodes.length; rank++) {\n      for (const nodeID of toposortedNodes[rank]) {\n        nodeRanks[nodeID] = rank;\n      }\n    }\n\n    return nodeRanks;\n  }\n);\n","import { createSelector } from 'reselect';\nimport { select } from 'd3-selection';\nimport { arrayToObject } from '../utils';\nimport { getPipelineNodeIDs } from './pipeline';\nimport {\n  getNodeDisabled,\n  getNodeDisabledTag,\n  getVisibleNodeIDs\n} from './disabled';\nimport { getNodeRank } from './ranks';\n\nconst getNodeName = state => state.node.name;\nconst getNodeFullName = state => state.node.fullName;\nconst getNodeDisabledNode = state => state.node.disabled;\nconst getNodeTags = state => state.node.tags;\nconst getNodeType = state => state.node.type;\nconst getNodeLayer = state => state.node.layer;\nconst getHoveredNode = state => state.node.hovered;\nconst getClickedNode = state => state.node.clicked;\nconst getTagActive = state => state.tag.active;\nconst getTextLabels = state => state.textLabels;\nconst getFontLoaded = state => state.fontLoaded;\nconst getNodeTypeDisabled = state => state.nodeType.disabled;\n\n/**\n * Set active status if the node is specifically highlighted, and/or via an associated tag\n */\nexport const getNodeActive = createSelector(\n  [getPipelineNodeIDs, getHoveredNode, getNodeTags, getTagActive],\n  (nodeIDs, hoveredNode, nodeTags, tagActive) =>\n    arrayToObject(nodeIDs, nodeID => {\n      if (nodeID === hoveredNode) {\n        return true;\n      }\n      const activeViaTag = nodeTags[nodeID].some(tag => tagActive[tag]);\n      return Boolean(activeViaTag);\n    })\n);\n\n/**\n * Set selected status if the node is clicked\n */\nexport const getNodeSelected = createSelector(\n  [getPipelineNodeIDs, getClickedNode, getNodeDisabled],\n  (nodeIDs, clickedNode, nodeDisabled) =>\n    arrayToObject(\n      nodeIDs,\n      nodeID => nodeID === clickedNode && !nodeDisabled[nodeID]\n    )\n);\n\n/**\n * Returns formatted nodes as an array, with all relevant properties\n */\nexport const getNodeData = createSelector(\n  [\n    getPipelineNodeIDs,\n    getNodeName,\n    getNodeType,\n    getNodeDisabled,\n    getNodeDisabledNode,\n    getNodeDisabledTag,\n    getNodeTypeDisabled\n  ],\n  (\n    nodeIDs,\n    nodeName,\n    nodeType,\n    nodeDisabled,\n    nodeDisabledNode,\n    nodeDisabledTag,\n    typeDisabled\n  ) =>\n    nodeIDs\n      .sort((a, b) => {\n        if (nodeName[a] < nodeName[b]) return -1;\n        if (nodeName[a] > nodeName[b]) return 1;\n        return 0;\n      })\n      .map(id => ({\n        id,\n        name: nodeName[id],\n        type: nodeType[id],\n        disabled: nodeDisabled[id],\n        disabled_node: Boolean(nodeDisabledNode[id]),\n        disabled_tag: nodeDisabledTag[id],\n        disabled_type: Boolean(typeDisabled[nodeType[id]])\n      }))\n);\n\n/**\n * Returns formatted nodes grouped by type\n */\nexport const getGroupedNodes = createSelector(\n  [getNodeData],\n  nodes =>\n    nodes.reduce(function(obj, item) {\n      const key = item.type;\n      if (!obj.hasOwnProperty(key)) {\n        obj[key] = [];\n      }\n      obj[key].push(item);\n      return obj;\n    }, {})\n);\n\n/**\n * Temporarily create a new SVG container in the DOM, write a node to it,\n * measure its width with getBBox, then delete the container and store the value\n */\nexport const getNodeTextWidth = createSelector(\n  [getPipelineNodeIDs, getNodeName, getFontLoaded],\n  (nodeIDs, nodeName, fontLoaded) => {\n    if (!fontLoaded) {\n      return {};\n    }\n    const nodeTextWidth = {};\n    const svg = select(document.body)\n      .append('svg')\n      .attr('class', 'kedro pipeline-node');\n    svg\n      .selectAll('text')\n      .data(nodeIDs)\n      .enter()\n      .append('text')\n      .text(nodeID => nodeName[nodeID])\n      .each(function(nodeID) {\n        const width = this.getBBox ? this.getBBox().width : 0;\n        nodeTextWidth[nodeID] = width;\n      });\n    svg.remove();\n    return nodeTextWidth;\n  }\n);\n\n/**\n * Get the top/bottom and left/right padding for a node\n * @param {Boolean} showLabels Whether labels are visible\n * @param {Boolean} isTask Whether the node is a task type (vs data/params)\n */\nexport const getPadding = (showLabels, isTask) => {\n  if (showLabels) {\n    if (isTask) {\n      return { x: 16, y: 10 };\n    }\n    return { x: 20, y: 10 };\n  }\n  if (isTask) {\n    return { x: 14, y: 14 };\n  }\n  return { x: 16, y: 16 };\n};\n\n/**\n * Calculate node width/height and icon/text positioning\n */\nexport const getNodeSize = createSelector(\n  [\n    getPipelineNodeIDs,\n    getNodeTextWidth,\n    getTextLabels,\n    getNodeType,\n    getFontLoaded\n  ],\n  (nodeIDs, nodeTextWidth, textLabels, nodeType, fontLoaded) => {\n    if (!fontLoaded) {\n      return {};\n    }\n    return arrayToObject(nodeIDs, nodeID => {\n      const iconSize = textLabels ? 24 : 28;\n      const padding = getPadding(textLabels, nodeType[nodeID] === 'task');\n      const textWidth = textLabels ? nodeTextWidth[nodeID] : 0;\n      const textGap = textLabels ? 6 : 0;\n      const innerWidth = iconSize + textWidth + textGap;\n      return {\n        width: innerWidth + padding.x * 2,\n        height: iconSize + padding.y * 2,\n        textOffset: (innerWidth - textWidth) / 2,\n        iconOffset: -innerWidth / 2,\n        iconSize\n      };\n    });\n  }\n);\n\n/**\n * Returns only visible nodes as an array, but without any extra properties\n * that are unnecessary for the chart layout calculation\n */\nexport const getVisibleNodes = createSelector(\n  [\n    getVisibleNodeIDs,\n    getNodeName,\n    getNodeType,\n    getNodeFullName,\n    getNodeSize,\n    getNodeLayer,\n    getNodeRank,\n    getFontLoaded\n  ],\n  (\n    nodeIDs,\n    nodeName,\n    nodeType,\n    nodeFullName,\n    nodeSize,\n    nodeLayer,\n    nodeRank,\n    fontLoaded\n  ) =>\n    fontLoaded\n      ? nodeIDs.map(id => ({\n          id,\n          name: nodeName[id],\n          label: nodeName[id],\n          fullName: nodeFullName[id],\n          type: nodeType[id],\n          layer: nodeLayer[id],\n          rank: nodeRank[id],\n          ...nodeSize[id]\n        }))\n      : []\n);\n","export const dataPath = './api/main';\nexport const fullDataPath = `/public${dataPath.substr(1)}`;\n\nexport const localStorageName = 'KedroViz';\n\n// Also set in src/styles/_variables.scss:\nexport const sidebarBreakpoint = 700;\nexport const sidebarWidth = {\n  open: 400,\n  closed: 60\n};\n\nexport const flags = {\n  newgraph: {\n    description: 'Improved graphing algorithm',\n    default: false,\n    icon: '📈'\n  },\n  pipelines: {\n    description: 'Select from multiple pipelines',\n    default: false,\n    icon: '🔀'\n  }\n};\n","import { createSelector } from 'reselect';\nimport { getVisibleNodes } from './nodes';\nimport { getVisibleEdges } from './edges';\nimport { getVisibleLayerIDs } from './disabled';\nimport { sidebarBreakpoint, sidebarWidth } from '../config';\n\nconst getNewgraphFlag = state => state.flags.newgraph;\nconst getVisibleSidebar = state => state.visible.sidebar;\nconst getFontLoaded = state => state.fontLoaded;\n\n/**\n * Select a subset of state that is watched by graph layout calculators\n * and used to prepare state.graph via async web worker actions\n */\nexport const getGraphInput = createSelector(\n  [\n    getVisibleNodes,\n    getVisibleEdges,\n    getVisibleLayerIDs,\n    getNewgraphFlag,\n    getFontLoaded\n  ],\n  (nodes, edges, layers, newgraph, fontLoaded) => {\n    if (!fontLoaded) {\n      return null;\n    }\n    return { nodes, edges, layers, newgraph, fontLoaded };\n  }\n);\n\n/**\n * Return the displayed width of the sidebar\n */\nexport const getSidebarWidth = (visibleSidebar, outerChartWidth) => {\n  if (visibleSidebar && outerChartWidth > sidebarBreakpoint) {\n    return sidebarWidth.open;\n  }\n  return sidebarWidth.closed;\n};\n\n/**\n * Convert the DOMRect into an Object, mutate some of the properties,\n * and add some useful new ones\n */\nexport const getChartSize = createSelector(\n  [getVisibleSidebar, state => state.chartSize],\n  (visibleSidebar, chartSize) => {\n    const { left, top, width, height } = chartSize;\n    if (!width || !height) {\n      return {};\n    }\n    const sidebarWidth = getSidebarWidth(visibleSidebar, width);\n    return {\n      left,\n      top,\n      outerWidth: width,\n      outerHeight: height,\n      width: width - sidebarWidth,\n      height,\n      sidebarWidth\n    };\n  }\n);\n\n/**\n * Gets the current chart zoom\n */\nexport const getChartZoom = createSelector(\n  [state => state.zoom],\n  zoom => ({\n    ...zoom\n  })\n);\n","import { localStorageName } from '../config';\n\nconst noWindow = typeof window === 'undefined';\n\n/**\n * Retrieve state data from localStorage\n * @return {Object} State\n */\nexport const loadState = () => {\n  if (noWindow) {\n    return {};\n  }\n  try {\n    const serializedState = window.localStorage.getItem(localStorageName);\n    if (serializedState === null) {\n      return {};\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    console.error(err);\n    return {};\n  }\n};\n\n/**\n * Save updated state to localStorage\n * @param {Object} state New state object\n */\nexport const saveState = state => {\n  if (noWindow) {\n    return;\n  }\n  try {\n    const newState = Object.assign(loadState(), state);\n    // Remove deprecated key from localStorage to suppress error.\n    // This can be removed in future versions of KedroViz:\n    if (newState.hasOwnProperty('nodeTypeDisabled')) {\n      delete newState.nodeTypeDisabled;\n    }\n    const serializedState = JSON.stringify(newState);\n    window.localStorage.setItem(localStorageName, serializedState);\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n/**\n * Remove unnecessary keys to prevent them being stored in state forever\n * @param {object} obj An object containing keys and booleans\n * @return {object} A new clone object but with the falsey keys removed\n */\nexport const pruneFalseyKeys = obj => {\n  const newObj = {};\n  for (let key in obj) {\n    if (obj.hasOwnProperty(key) && obj[key]) {\n      newObj[key] = obj[key];\n    }\n  }\n  return newObj;\n};\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport watch from 'redux-watch';\nimport reducer from '../reducers';\nimport { getGraphInput } from '../selectors/layout';\nimport { calculateGraph } from '../actions/graph';\nimport { saveState, pruneFalseyKeys } from './helpers';\n\n/**\n * Watch the getGraphInput selector, and dispatch an asynchronous action to\n * update state.graph via a web worker when it changes.\n * @param {object} store Redux store\n */\nconst updateGraphOnChange = store => {\n  const watchGraph = watch(() => getGraphInput(store.getState()));\n  store.subscribe(\n    watchGraph(graphInput => {\n      store.dispatch(calculateGraph(graphInput));\n    })\n  );\n};\n\n/**\n * Save selected state properties to window.localStorage\n * @param {object} state Redux state snapshot\n */\nconst saveStateToLocalStorage = state => {\n  saveState({\n    node: {\n      disabled: pruneFalseyKeys(state.node.disabled)\n    },\n    nodeType: {\n      disabled: state.nodeType.disabled\n    },\n    pipeline: {\n      active: state.pipeline.active\n    },\n    layer: {\n      visible: state.layer.visible\n    },\n    textLabels: state.textLabels,\n    theme: state.theme,\n    visible: state.visible,\n    flag: state.flags\n  });\n};\n\n/**\n * Configure initial state and create the Redux store\n * @param {Object} initialState Initial Redux state (from initial-state.js)\n * @return {Object} Redux store\n */\nexport default function configureStore(initialState) {\n  const store = createStore(reducer, initialState, applyMiddleware(thunk));\n  updateGraphOnChange(store);\n\n  store.subscribe(() => {\n    saveStateToLocalStorage(store.getState());\n  });\n\n  return store;\n}\n","/**\n * Prevent chart from displaying until the webfont has loaded,\n * to ensure that text label SVGRect BBox measurements are accurate\n * @return {Promise} Resolves when font is detected as having loaded, or after 8 seconds\n */\nconst checkFontLoaded = () =>\n  new Promise(resolve => {\n    const { fonts } = document;\n    const fontName = '10px Titillium Web';\n\n    // If FontFaceSet is not supported then default to true immediately\n    if (!Boolean(fonts && fonts.check)) {\n      resolve();\n      return;\n    }\n\n    /**\n     * Check whether the webfont is ready, and show the chart if so\n     */\n    const checkIfLoaded = () => {\n      if (fonts.check(fontName)) {\n        // Add 0.1s delay because fonts.check often returns true too early\n        setTimeout(resolve, 100);\n      }\n    };\n\n    /**\n     * Recursive requestAnimationFrame step function, which acts as a backup\n     * to the native FontFaceSet event handlers.\n     */\n    const step = () => {\n      // If it's been 8 seconds since page load then just set loaded=true\n      if (performance.now() > 8000) {\n        resolve();\n      } else if (fonts.check(fontName)) {\n        // Add 0.1s delay because fonts.check often returns true too early\n        setTimeout(resolve, 100);\n      } else {\n        requestAnimationFrame(step);\n      }\n    };\n\n    if (fonts.check(fontName)) {\n      // If the font is already loaded then dispatch immediately\n      resolve();\n    } else {\n      // Add event listenerss to detect when font has loaded, and display the chart.\n      // This uses both FontFaceSet.ready and FontFaceSet.onloadingdone, as the former\n      // often returns too early, and the latter often doesn't return at all.\n      if (fonts.ready) {\n        fonts.ready.then(checkIfLoaded);\n      }\n      fonts.onloadingdone = checkIfLoaded;\n      // Use requestAnimationFrame as a fallback for older browsers\n      requestAnimationFrame(step);\n    }\n  });\n\nexport default checkFontLoaded;\n","import { createSelector } from 'reselect';\nimport { getVisibleLayerIDs } from './disabled';\n\nconst getGraph = state => state.graph;\nconst getLayerName = state => state.layer.name;\n\n/**\n * Get layer positions\n */\nexport const getLayers = createSelector(\n  [getGraph, getVisibleLayerIDs, getLayerName],\n  ({ nodes, size }, layerIDs, layerName) => {\n    if (!nodes || !size || !nodes.length || !layerIDs.length) {\n      return [];\n    }\n    const { width, height } = size;\n\n    const bounds = {};\n\n    for (const node of nodes) {\n      const layer = node.nearestLayer || node.layer;\n\n      if (layer) {\n        const bound = bounds[layer] || (bounds[layer] = [Infinity, -Infinity]);\n\n        if (node.y - node.height < bound[0]) {\n          bound[0] = node.y - node.height;\n        }\n\n        if (node.y + node.height > bound[1]) {\n          bound[1] = node.y + node.height;\n        }\n      }\n    }\n\n    return layerIDs.map((id, i) => {\n      const currentBound = bounds[id] || [0, 0];\n      const prevBound = bounds[layerIDs[i - 1]] || [\n        currentBound[0],\n        currentBound[0]\n      ];\n      const nextBound = bounds[layerIDs[i + 1]] || [\n        currentBound[1],\n        currentBound[1]\n      ];\n      const start = (prevBound[1] + currentBound[0]) / 2;\n      const end = (currentBound[1] + nextBound[0]) / 2;\n      const rectWidth = Math.max(width, height) * 5;\n\n      return {\n        id,\n        name: layerName[id],\n        x: (rectWidth - width) / -2,\n        y: start,\n        width: rectWidth,\n        height: Math.max(end - start, 0)\n      };\n    });\n  }\n);\n","import { createSelector } from 'reselect';\nimport { getVisibleEdges } from './edges';\n\nconst getClickedNode = state => state.node.clicked;\nconst getHoveredNode = state => state.node.hovered;\n\n/**\n * Get the node that should be used as the center of the set of linked nodes\n * @param {Array} edges\n * @param {string} nodeID\n */\nexport const getCentralNode = createSelector(\n  [getClickedNode, getHoveredNode],\n  (clickedNode, hoveredNode) => clickedNode || hoveredNode\n);\n\n/**\n * Gets a map of visible nodeIDs to successors nodeIDs in both directions\n * @param {Array} edges\n */\nexport const getVisibleEdgesByNode = createSelector(\n  [getVisibleEdges],\n  edges => {\n    const sourceEdges = {};\n    const targetEdges = {};\n\n    for (const edge of edges) {\n      if (!sourceEdges[edge.target]) {\n        sourceEdges[edge.target] = [];\n      }\n\n      sourceEdges[edge.target].push(edge.source);\n\n      if (!targetEdges[edge.source]) {\n        targetEdges[edge.source] = [];\n      }\n\n      targetEdges[edge.source].push(edge.target);\n    }\n\n    return { sourceEdges, targetEdges };\n  }\n);\n\n/**\n * Finds all visible successor nodeIDs for the given nodeID\n * @param {string} nodeID the starting nodeID\n * @param {Object} edgesByNode an object mapping nodeIDs to successor nodeIDs\n * @param {object} visited an object for storing all visited node ids\n * @returns {object} the supplied `visited` object\n */\nconst findLinkedNodes = (nodeID, edgesByNode, visited) => {\n  if (!visited[nodeID]) {\n    visited[nodeID] = true;\n\n    if (edgesByNode[nodeID]) {\n      edgesByNode[nodeID].forEach(nodeID =>\n        findLinkedNodes(nodeID, edgesByNode, visited)\n      );\n    }\n  }\n\n  return visited;\n};\n\n/**\n * Gets all visible ancestors and descendents for the given nodeID\n * @param {Object} visibleEdgeMaps\n * @param {string} nodeID\n */\nexport const getLinkedNodes = createSelector(\n  [getVisibleEdgesByNode, getCentralNode],\n  ({ sourceEdges, targetEdges }, nodeID) => {\n    if (!nodeID) {\n      return {};\n    }\n\n    const linkedNodes = {};\n    findLinkedNodes(nodeID, sourceEdges, linkedNodes);\n\n    linkedNodes[nodeID] = false;\n    findLinkedNodes(nodeID, targetEdges, linkedNodes);\n\n    return linkedNodes;\n  }\n);\n","import React from 'react';\n\nexport const paths = {\n  // database icon\n  data: [\n    'M6 7.5C6 5.5 8.7 4 12 4c3.2 0 5.9 1.5 6 3.3V17c0 .2 0 .4-.2.6-1.1 1.6-3 2.3-5.8 2.3s-4.7-.7-5.8-2.3A1 1 0 016 17V7.5zm6 8c-1.6 0-3-.4-4-1v2.2c.7.8 2 1.2 4 1.2s3.3-.4 4-1.2v-2.2c-1 .6-2.4 1-4 1zm0-4.5c-1.5 0-3-.3-4-.9v1.6c.8 1.2 2 1.7 4 1.7s3.3-.5 4-1.7v-1.6c-1 .6-2.5.9-4 .9zm0-5c-1.3 0-2.4.3-3.2.8-.6.3-.8.6-.8.7s.2.4.8.7c.8.5 2 .8 3.2.8s2.4-.3 3.2-.8c.6-.3.8-.6.8-.7s-.2-.4-.8-.7c-.8-.5-2-.8-3.2-.8z'\n  ],\n  // function icon\n  task: [\n    'M19.46 4.3l.18.14-1.28 1.54c-2.06-1.71-3.52-1.1-4.55 2.52H16v2h-2.66c-.09.43-.17.89-.25 1.37l-.1.68c-1.2 8.23-4.11 11.46-8.41 8.34l-.19-.14 1.22-1.59c2.58 1.97 4.25.32 5.3-6.22l.1-.68.3-1.76H8v-2h3.78c1.48-5.36 4.12-7.04 7.68-4.2z'\n  ],\n  // sliders icon\n  parameters: [\n    'M8 14v1.5h13v2H8V19H6v-1.5H4v-2h2V14z',\n    'M18.5 5v1.5H21v2h-2.5V10h-2V8.5H4v-2h12.5V5z'\n  ]\n};\n\nexport default ({ className, type }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    {paths[type].map(d => (\n      <path key={d} d={d} />\n    ))}\n  </svg>\n);\n","import { select } from 'd3-selection';\nimport { paths } from '../icons/node-icon';\n\n/**\n * Generate cog/database icon.\n * Inline SVG is required to support image exports\n */\nexport default node => {\n  const svgNode = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n\n  const svg = select(svgNode)\n    .attr('class', 'pipeline-node__icon')\n    .attr('viewBox', '0 0 24 24');\n\n  paths[node.type].forEach(path => {\n    svg.append('path').attr('d', path);\n  });\n\n  return svgNode;\n};\n","import 'd3-transition';\nimport { interpolatePath } from 'd3-interpolate-path';\nimport { select } from 'd3-selection';\nimport { curveBasis, line } from 'd3-shape';\nimport icon from './icon';\n\n/**\n * Render layer bands\n */\nexport const drawLayers = function() {\n  const { layers } = this.props;\n\n  this.el.layers = this.el.layerGroup\n    .selectAll('.pipeline-layer')\n    .data(layers, layer => layer.id);\n\n  const enterLayers = this.el.layers\n    .enter()\n    .append('rect')\n    .attr('class', 'pipeline-layer');\n\n  this.el.layers.exit().remove();\n\n  this.el.layers = this.el.layers.merge(enterLayers);\n\n  this.el.layers\n    .attr('x', d => d.x)\n    .attr('y', d => d.y)\n    .attr('height', d => d.height)\n    .attr('width', d => d.width);\n};\n\n/**\n * Render layer name labels\n */\nexport const drawLayerNames = function() {\n  const {\n    chartSize: { sidebarWidth = 0 },\n    layers\n  } = this.props;\n\n  this.el.layerNameGroup\n    .transition('layer-names-sidebar-width')\n    .duration(this.DURATION)\n    .style('transform', `translateX(${sidebarWidth}px)`);\n\n  this.el.layerNames = this.el.layerNameGroup\n    .selectAll('.pipeline-layer-name')\n    .data(layers, layer => layer.id);\n\n  const enterLayerNames = this.el.layerNames\n    .enter()\n    .append('li')\n    .attr('class', 'pipeline-layer-name')\n    .style('opacity', 0)\n    .transition('enter-layer-names')\n    .duration(this.DURATION)\n    .style('opacity', 1);\n\n  this.el.layerNames\n    .exit()\n    .style('opacity', 1)\n    .transition('exit-layer-names')\n    .duration(this.DURATION)\n    .style('opacity', 0)\n    .remove();\n\n  this.el.layerNames = this.el.layerNames.merge(enterLayerNames);\n\n  this.el.layerNames.text(d => d.name).attr('dy', 5);\n};\n\n/**\n * Render node icons and name labels\n */\nexport const drawNodes = function() {\n  const {\n    centralNode,\n    linkedNodes,\n    nodeActive,\n    nodeSelected,\n    nodes,\n    textLabels\n  } = this.props;\n\n  this.el.nodes = this.el.nodeGroup\n    .selectAll('.pipeline-node')\n    .data(nodes, node => node.id);\n\n  const enterNodes = this.el.nodes\n    .enter()\n    .append('g')\n    .attr('tabindex', '0')\n    .attr('class', 'pipeline-node');\n\n  enterNodes\n    .attr('transform', node => `translate(${node.x}, ${node.y})`)\n    .attr('opacity', 0);\n\n  enterNodes.append('rect');\n\n  enterNodes.append(icon);\n\n  enterNodes\n    .append('text')\n    .text(node => node.name)\n    .attr('text-anchor', 'middle')\n    .attr('dy', 5)\n    .attr('dx', node => node.textOffset);\n\n  this.el.nodes\n    .exit()\n    .transition('exit-nodes')\n    .duration(this.DURATION)\n    .attr('opacity', 0)\n    .remove();\n\n  this.el.nodes = this.el.nodes\n    .merge(enterNodes)\n    .attr('data-id', node => node.id)\n    .classed('pipeline-node--parameters', node => node.type === 'parameters')\n    .classed('pipeline-node--data', node => node.type === 'data')\n    .classed('pipeline-node--task', node => node.type === 'task')\n    .classed('pipeline-node--icon', !textLabels)\n    .classed('pipeline-node--text', textLabels)\n    .classed('pipeline-node--active', node => nodeActive[node.id])\n    .classed('pipeline-node--selected', node => nodeSelected[node.id])\n    .classed(\n      'pipeline-node--faded',\n      node => centralNode && !linkedNodes[node.id]\n    )\n    .on('click', this.handleNodeClick)\n    .on('mouseover', this.handleNodeMouseOver)\n    .on('mouseout', this.handleNodeMouseOut)\n    .on('focus', this.handleNodeMouseOver)\n    .on('blur', this.handleNodeMouseOut)\n    .on('keydown', this.handleNodeKeyDown);\n\n  this.el.nodes\n    .transition('update-nodes')\n    .duration(this.DURATION)\n    .attr('opacity', 1)\n    .attr('transform', node => `translate(${node.x}, ${node.y})`)\n    .end()\n    .catch(() => {})\n    .finally(() => {\n      // Sort nodes so tab focus order follows X/Y position\n      this.el.nodes.sort((a, b) => a.order - b.order);\n    });\n\n  this.el.nodes\n    .select('rect')\n    .attr('width', node => node.width - 5)\n    .attr('height', node => node.height - 5)\n    .attr('x', node => (node.width - 5) / -2)\n    .attr('y', node => (node.height - 5) / -2)\n    .attr('rx', node => (node.type === 'task' ? 0 : node.height / 2));\n\n  this.el.nodes\n    .select('.pipeline-node__icon')\n    .transition('node-icon-offset')\n    .duration(150)\n    .attr('width', node => node.iconSize)\n    .attr('height', node => node.iconSize)\n    .attr('x', node => node.iconOffset)\n    .attr('y', node => node.iconSize / -2);\n};\n\n/**\n * Render edge lines\n */\nexport const drawEdges = function() {\n  const { edges, centralNode, linkedNodes } = this.props;\n\n  this.el.edges = this.el.edgeGroup\n    .selectAll('.pipeline-edge')\n    .data(edges, edge => edge.id);\n\n  // Set up line shape function\n  const lineShape = line()\n    .x(d => d.x)\n    .y(d => d.y)\n    .curve(curveBasis);\n\n  // Create edges\n  const enterEdges = this.el.edges\n    .enter()\n    .append('g')\n    .attr('class', 'pipeline-edge')\n    .attr('opacity', 0);\n\n  enterEdges.append('path').attr('marker-end', d => `url(#pipeline-arrowhead)`);\n\n  this.el.edges\n    .exit()\n    .transition('exit-edges')\n    .duration(this.DURATION)\n    .attr('opacity', 0)\n    .remove();\n\n  this.el.edges = this.el.edges.merge(enterEdges);\n\n  this.el.edges\n    .attr('data-id', edge => edge.id)\n    .classed(\n      'pipeline-edge--faded',\n      ({ source, target }) =>\n        centralNode && (!linkedNodes[source] || !linkedNodes[target])\n    )\n    .transition('show-edges')\n    .duration(this.DURATION)\n    .attr('opacity', 1);\n\n  this.el.edges\n    .select('path')\n    .transition('update-edges')\n    .duration(this.DURATION)\n    .attrTween('d', function(edge) {\n      const current = edge.points && lineShape(edge.points);\n      const previous = select(this).attr('d') || current;\n      return interpolatePath(previous, current);\n    });\n};\n","import React from 'react';\nimport classnames from 'classnames';\nimport './tooltip.css';\n\nconst zeroWidthSpace = String.fromCharCode(0x200b);\n\n/**\n * Force tooltip text to break on special characters\n * @param {string} text Any text with special characters\n * @return {string} text\n */\nexport const insertZeroWidthSpace = text =>\n  text.replace(/([^\\w\\s]|[_])/g, `${zeroWidthSpace}$1${zeroWidthSpace}`);\n\n/**\n * Display flowchart node tooltip\n * @param {object} chartSize Chart dimensions in pixels\n * @param {object} targetRect event.target.getBoundingClientRect()\n * @param {boolean} visible Whether to show the tooltip\n * @param {string} text Tooltip display label\n */\nconst Tooltip = ({ chartSize, targetRect, visible, text }) => {\n  const { left, top, width, height, outerWidth, sidebarWidth } = chartSize;\n  const isRight = targetRect.left - sidebarWidth > width / 2;\n  const isTop = targetRect.top < height / 2;\n  const xOffset = isRight ? targetRect.left - outerWidth : targetRect.left;\n  const yOffset = isTop ? targetRect.top + targetRect.height : targetRect.top;\n  const x = xOffset - left + targetRect.width / 2;\n  const y = yOffset - top;\n\n  return (\n    <div\n      className={classnames('pipeline-tooltip', {\n        'pipeline-tooltip--visible': visible,\n        'pipeline-tooltip--right': isRight,\n        'pipeline-tooltip--top': isTop\n      })}\n      style={{ transform: `translate(${x}px, ${y}px)` }}>\n      <div className=\"pipeline-tooltip__text\">{insertZeroWidthSpace(text)}</div>\n    </div>\n  );\n};\n\nTooltip.defaultProps = {\n  chartSize: {},\n  targetRect: {},\n  visible: false,\n  text: ''\n};\n\nexport default Tooltip;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport 'd3-transition';\nimport { select, event } from 'd3-selection';\nimport { interpolate } from 'd3-interpolate';\nimport { zoom, zoomIdentity, zoomTransform } from 'd3-zoom';\nimport { updateChartSize, updateZoom } from '../../actions';\nimport { toggleNodeClicked, toggleNodeHovered } from '../../actions/nodes';\nimport { getNodeActive, getNodeSelected } from '../../selectors/nodes';\nimport { getChartSize, getChartZoom } from '../../selectors/layout';\nimport { getLayers } from '../../selectors/layers';\nimport { getCentralNode, getLinkedNodes } from '../../selectors/linked-nodes';\nimport { drawNodes, drawEdges, drawLayers, drawLayerNames } from './draw';\nimport Tooltip from '../tooltip';\nimport './styles/flowchart.css';\n\n/**\n * Display a pipeline flowchart, mostly rendered with D3\n */\nexport class FlowChart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tooltip: { visible: false }\n    };\n\n    this.DURATION = 700;\n\n    this.containerRef = React.createRef();\n    this.svgRef = React.createRef();\n    this.wrapperRef = React.createRef();\n    this.edgesRef = React.createRef();\n    this.nodesRef = React.createRef();\n    this.layersRef = React.createRef();\n    this.layerNamesRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.selectD3Elements();\n    this.updateChartSize();\n    this.initZoomBehaviour();\n    this.addGlobalEventListeners();\n    this.update();\n\n    if (this.props.tooltip) {\n      this.showTooltip(null, this.props.tooltip);\n    } else {\n      this.hideTooltip();\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeGlobalEventListeners();\n  }\n\n  componentDidUpdate(prevProps) {\n    this.update(prevProps);\n  }\n\n  /**\n   * Updates drawing and zoom if props have changed\n   */\n  update(prevProps = {}) {\n    const { chartZoom } = this.props;\n    const changed = (...names) => this.changed(names, prevProps, this.props);\n\n    if (changed('visibleSidebar')) {\n      this.updateChartSize();\n    }\n\n    if (changed('layers', 'chartSize')) {\n      drawLayers.call(this);\n      drawLayerNames.call(this);\n    }\n\n    if (changed('edges', 'centralNode', 'linkedNodes')) {\n      drawEdges.call(this);\n    }\n\n    if (\n      changed(\n        'nodes',\n        'centralNode',\n        'linkedNodes',\n        'nodeActive',\n        'nodeSelected',\n        'textLabels'\n      )\n    ) {\n      drawNodes.call(this);\n    }\n\n    if (changed('edges', 'nodes', 'layers', 'textLabels', 'chartSize')) {\n      this.zoomToFit();\n    } else {\n      this.updateZoom(chartZoom);\n    }\n  }\n\n  /**\n   * Returns true if any of the given props are different between given objects.\n   * Only shallow changes are detected.\n   */\n  changed(props, objectA, objectB) {\n    return (\n      objectA && objectB && props.some(prop => objectA[prop] !== objectB[prop])\n    );\n  }\n\n  /**\n   * Create D3 element selectors\n   */\n  selectD3Elements() {\n    this.el = {\n      svg: select(this.svgRef.current),\n      wrapper: select(this.wrapperRef.current),\n      edgeGroup: select(this.edgesRef.current),\n      nodeGroup: select(this.nodesRef.current),\n      layerGroup: select(this.layersRef.current),\n      layerNameGroup: select(this.layerNamesRef.current)\n    };\n  }\n\n  /**\n   * Configure globals for the container dimensions,\n   * and apply them to the chart SVG\n   */\n  updateChartSize() {\n    this.props.onUpdateChartSize(\n      this.containerRef.current.getBoundingClientRect()\n    );\n  }\n\n  /**\n   * Add window event listeners on mount\n   */\n  addGlobalEventListeners() {\n    // Add ResizeObserver to listen for any changes in the container's width/height\n    // (with event listener fallback)\n    if (window.ResizeObserver) {\n      this.resizeObserver =\n        this.resizeObserver ||\n        new window.ResizeObserver(this.handleWindowResize);\n      this.resizeObserver.observe(this.containerRef.current);\n    } else {\n      window.addEventListener('resize', this.handleWindowResize);\n    }\n    // Print event listeners\n    window.addEventListener('beforeprint', this.handleBeforePrint);\n    window.addEventListener('afterprint', this.handleAfterPrint);\n  }\n\n  /**\n   * Remove window event listeners on unmount\n   */\n  removeGlobalEventListeners() {\n    // ResizeObserver\n    if (window.ResizeObserver) {\n      this.resizeObserver.unobserve(this.containerRef.current);\n    } else {\n      window.removeEventListener('resize', this.handleWindowResize);\n    }\n    // Print event listeners\n    window.removeEventListener('beforeprint', this.handleBeforePrint);\n    window.removeEventListener('afterprint', this.handleAfterPrint);\n  }\n\n  /**\n   * Handle window resize\n   */\n  handleWindowResize = () => {\n    this.updateChartSize();\n  };\n\n  /**\n   * Add viewBox on window print so that the SVG can be scaled to fit\n   */\n  handleBeforePrint = () => {\n    const gs = this.props.graphSize;\n    const width = gs.width + gs.marginx * 2;\n    const height = gs.height + gs.marginy * 2;\n    this.el.svg.attr('viewBox', `0 0 ${width} ${height}`);\n  };\n\n  /**\n   * Remove viewBox once printing is done\n   */\n  handleAfterPrint = () => {\n    this.el.svg.attr('viewBox', null);\n  };\n\n  /**\n   * Setup D3 zoom behaviour on component mount\n   */\n  initZoomBehaviour() {\n    this.zoomBehaviour = zoom()\n      // Transition using linear interpolation\n      .interpolate(interpolate)\n      // When zoom changes\n      .on('zoom', () => {\n        const { k: scale, x, y } = event.transform;\n        const [\n          minScale = 0,\n          maxScale = Infinity\n        ] = this.zoomBehaviour.scaleExtent();\n        const { sidebarWidth } = this.props.chartSize;\n        const { width = 0, height = 0 } = this.props.graphSize;\n\n        // Limit zoom translate extent: This needs to be recalculated on zoom\n        // as it needs access to the current scale to correctly multiply the\n        // sidebarWidth by the scale to offset it properly\n        const margin = 500;\n        this.zoomBehaviour.translateExtent([\n          [-sidebarWidth / scale - margin, -margin],\n          [width + margin, height + margin]\n        ]);\n\n        // Transform the <g> that wraps the chart\n        this.el.wrapper.attr('transform', event.transform);\n\n        // Update layer label y positions\n        if (this.el.layerNames) {\n          this.el.layerNames.style('transform', d => {\n            const ty = y + (d.y + d.height / 2) * scale;\n            return `translateY(${ty}px)`;\n          });\n        }\n\n        // Hide the tooltip so it doesn't get misaligned to its node\n        this.hideTooltip();\n\n        // Share the applied zoom state with other components\n        this.props.onUpdateZoom({\n          scale,\n          x,\n          y,\n          applied: true,\n          transition: false,\n          minScale,\n          maxScale\n        });\n      });\n\n    this.el.svg.call(this.zoomBehaviour);\n  }\n\n  /**\n   * Applies the given zoom state if necessary\n   * @param {Object} chartZoom The new zoom state\n   */\n  updateZoom(chartZoom) {\n    // No change if already applied (i.e. ignores internal updates)\n    if (chartZoom.applied) {\n      return;\n    }\n\n    // If the update is a reset, then just zoom to fit the graph\n    if (chartZoom.reset === true) {\n      this.zoomToFit();\n      return;\n    }\n\n    // Get current zoom transform\n    const zoom = this.zoomBehaviour;\n    const currentTransform = zoomTransform(this.wrapperRef.current);\n    const { k = 1 } = currentTransform;\n\n    // Get the updated zoom components\n    const { scale: targetScale = k, x: targetX, y: targetY } = chartZoom;\n    const transition =\n      chartZoom.transition || typeof chartZoom.transition === 'undefined';\n    const hasTranslation =\n      typeof targetX !== 'undefined' && typeof targetY !== 'undefined';\n\n    // Apply the zoom update immediately at first\n    // Note: only translateTo and scaleTo respect zoom extents\n    // Note: requires three separate calls so can't transition this\n    if (hasTranslation) {\n      // Update position and scale\n      this.el.svg\n        .call(zoom.transform, zoomIdentity)\n        .call(zoom.translateTo, targetX, targetY)\n        .call(zoom.scaleTo, targetScale);\n    } else {\n      // Update scale only\n      this.el.svg.call(zoom.scaleTo, targetScale);\n    }\n\n    // If the update requires a transition\n    if (transition) {\n      // Store the already computed target transform\n      const targetTransform = zoomTransform(this.wrapperRef.current);\n\n      // Revert and transition to target in a single call\n      this.el.svg\n        .call(zoom.transform, currentTransform)\n        .transition('zoom')\n        .duration(200)\n        .call(zoom.transform, targetTransform);\n    }\n  }\n\n  /**\n   * Zoom and scale to fit graph exactly in the viewport\n   */\n  zoomToFit() {\n    const { chartSize, graphSize } = this.props;\n\n    let scale = 1;\n    let translateX = 0;\n    let translateY = 0;\n\n    // Fit the graph exactly in the viewport\n    if (chartSize.width > 0 && graphSize.width > 0) {\n      scale = Math.min(\n        chartSize.width / graphSize.width,\n        chartSize.height / graphSize.height\n      );\n\n      translateX =\n        (chartSize.width - graphSize.width * scale) / 2 +\n        chartSize.sidebarWidth;\n      translateY = (chartSize.height - graphSize.height * scale) / 2;\n    }\n\n    // Limit zoom scale extent\n    this.zoomBehaviour.scaleExtent([scale * 0.8, 2]);\n\n    // Get the target zoom transform\n    const targetTransform = zoomIdentity\n      .translate(translateX, translateY)\n      .scale(scale);\n\n    // Get the current zoom transform\n    const { k = 1, x = 0, y = 0 } = zoomTransform(this.wrapperRef.current);\n    const isFirstZoom = k === 1 && x === 0 && y === 0;\n\n    // Avoid errors during tests due to lack of SVG support\n    if (typeof jest !== 'undefined') {\n      return;\n    }\n\n    // Apply transform but only transition after first zoom\n    (isFirstZoom\n      ? this.el.svg\n      : this.el.svg.transition('zoom').duration(this.DURATION)\n    ).call(this.zoomBehaviour.transform, targetTransform);\n  }\n\n  /**\n   * Enable a node's focus state and highlight linked nodes\n   * @param {Object} node Datum for a single node\n   */\n  handleNodeClick = node => {\n    this.props.onToggleNodeClicked(node.id);\n    event.stopPropagation();\n  };\n\n  /**\n   * Remove a node's focus state and dim linked nodes\n   */\n  handleChartClick = () => {\n    this.props.onToggleNodeClicked(null);\n  };\n\n  /**\n   * Enable a node's active state, show tooltip, and highlight linked nodes\n   * @param {Object} node Datum for a single node\n   */\n  handleNodeMouseOver = node => {\n    this.props.onToggleNodeHovered(node.id);\n    this.showTooltip(node);\n  };\n\n  /**\n   * Remove a node's active state, hide tooltip, and dim linked nodes\n   * @param {Object} node Datum for a single node\n   */\n  handleNodeMouseOut = () => {\n    this.props.onToggleNodeHovered(null);\n    this.hideTooltip();\n  };\n\n  /**\n   * Handle keydown event when a node is focused\n   * @param {Object} node Datum for a single node\n   */\n  handleNodeKeyDown = node => {\n    const ENTER = 13;\n    const ESCAPE = 27;\n    if (event.keyCode === ENTER) {\n      this.handleNodeClick(node);\n    }\n    if (event.keyCode === ESCAPE) {\n      this.handleChartClick();\n      this.handleNodeMouseOut(node);\n    }\n  };\n\n  /**\n   * Show, fill and and position the tooltip\n   * @param {Object} node A node datum\n   * @param {?Object} options Options for the tooltip if required\n   */\n  showTooltip(node, options = {}) {\n    this.setState({\n      tooltip: {\n        targetRect: event && event.target.getBoundingClientRect(),\n        text: node && node.fullName,\n        visible: true,\n        ...options\n      }\n    });\n  }\n\n  /**\n   * Hide the tooltip\n   */\n  hideTooltip() {\n    if (this.state.tooltip.visible) {\n      this.setState({\n        tooltip: {\n          ...this.state.tooltip,\n          visible: false\n        }\n      });\n    }\n  }\n\n  /**\n   * Render React elements\n   */\n  render() {\n    const { chartSize, layers } = this.props;\n    const { outerWidth = 0, outerHeight = 0 } = chartSize;\n\n    return (\n      <div\n        className=\"pipeline-flowchart kedro\"\n        ref={this.containerRef}\n        onClick={this.handleChartClick}>\n        <svg\n          id=\"pipeline-graph\"\n          className=\"pipeline-flowchart__graph\"\n          width={outerWidth}\n          height={outerHeight}\n          ref={this.svgRef}>\n          <defs>\n            <marker\n              id=\"pipeline-arrowhead\"\n              className=\"pipeline-flowchart__arrowhead\"\n              viewBox=\"0 0 10 10\"\n              refX=\"7\"\n              refY=\"5\"\n              markerUnits=\"strokeWidth\"\n              markerWidth=\"8\"\n              markerHeight=\"6\"\n              orient=\"auto\">\n              <path d=\"M 0 0 L 10 5 L 0 10 L 4 5 z\" />\n            </marker>\n          </defs>\n          <g id=\"zoom-wrapper\" ref={this.wrapperRef}>\n            <g className=\"pipeline-flowchart__layers\" ref={this.layersRef} />\n            <g className=\"pipeline-flowchart__edges\" ref={this.edgesRef} />\n            <g\n              id=\"nodes\"\n              className=\"pipeline-flowchart__nodes\"\n              ref={this.nodesRef}\n            />\n          </g>\n        </svg>\n        <ul\n          className={classnames('pipeline-flowchart__layer-names', {\n            'pipeline-flowchart__layer-names--visible': layers.length\n          })}\n          ref={this.layerNamesRef}\n        />\n        <Tooltip chartSize={chartSize} {...this.state.tooltip} />\n      </div>\n    );\n  }\n}\n\n// Maintain a single reference to support change detection\nconst emptyEdges = [];\nconst emptyNodes = [];\nconst emptyGraphSize = {};\n\nexport const mapStateToProps = (state, ownProps) => ({\n  centralNode: getCentralNode(state),\n  chartSize: getChartSize(state),\n  chartZoom: getChartZoom(state),\n  edges: state.graph.edges || emptyEdges,\n  graphSize: state.graph.size || emptyGraphSize,\n  layers: getLayers(state),\n  linkedNodes: getLinkedNodes(state),\n  nodes: state.graph.nodes || emptyNodes,\n  nodeActive: getNodeActive(state),\n  nodeSelected: getNodeSelected(state),\n  textLabels: state.textLabels,\n  visibleSidebar: state.visible.sidebar,\n  ...ownProps\n});\n\nexport const mapDispatchToProps = (dispatch, ownProps) => ({\n  onToggleNodeClicked: nodeClicked => {\n    dispatch(toggleNodeClicked(nodeClicked));\n  },\n  onToggleNodeHovered: nodeHovered => {\n    dispatch(toggleNodeHovered(nodeHovered));\n  },\n  onUpdateChartSize: chartSize => {\n    dispatch(updateChartSize(chartSize));\n  },\n  onUpdateZoom: transform => {\n    dispatch(updateZoom(transform));\n  },\n  ...ownProps\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FlowChart);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Dropdown from '@quantumblack/kedro-ui/lib/components/dropdown';\nimport MenuOption from '@quantumblack/kedro-ui/lib/components/menu-option';\nimport { updateActivePipeline } from '../../actions';\nimport './pipeline-list.css';\n\n/**\n * A Dropdown displaying a list of selectable pipelines\n * @param {Object} pipeline Pipeline IDs, names, and active pipeline\n * @param {Function} onUpdateActivePipeline Handle updating the active pipeline\n * @param {string} theme Kedro UI light/dark theme\n */\nexport const PipelineList = ({ onUpdateActivePipeline, pipeline, theme }) => {\n  if (!pipeline.ids.length) {\n    return null;\n  }\n  return (\n    <div className=\"pipeline-list\">\n      <Dropdown\n        theme={theme}\n        width={null}\n        onChanged={onUpdateActivePipeline}\n        defaultText={pipeline.name[pipeline.active]}>\n        {pipeline.ids.map(id => (\n          <MenuOption\n            key={`pipeline-${id}`}\n            value={id}\n            primaryText={pipeline.name[id]}\n          />\n        ))}\n      </Dropdown>\n    </div>\n  );\n};\n\nexport const mapStateToProps = state => ({\n  pipeline: state.pipeline,\n  theme: state.theme\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  onUpdateActivePipeline: event => {\n    dispatch(updateActivePipeline(event.value));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PipelineList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Checkbox from '@quantumblack/kedro-ui/lib/components/checkbox';\nimport Dropdown from '@quantumblack/kedro-ui/lib/components/dropdown';\nimport '@quantumblack/kedro-ui/lib/components/menu-option/menu-option.css';\nimport { toggleTagActive, toggleTagFilter } from '../../actions/tags';\nimport { getTagData, getTagCount } from '../../selectors/tags';\nimport './tag-list.css';\n\n/**\n * A Dropdown displaying a list of tags with checkboxes to toggle them on/off\n * @param {Object} tagCount Number of enabled and active tags\n * @param {Function} onToggleTagActive Handle toggling a tag's active state\n * @param {Function} onToggleTagFilter Handle toggling a tag's enabled state\n * @param {Array} tags List of tags for given pipline\n * @param {string} theme Kedro UI light/dark theme\n */\nexport const TagList = ({\n  tagCount,\n  onToggleTagActive,\n  onToggleTagFilter,\n  tags,\n  theme\n}) => (\n  <div className=\"pipeline-tags\">\n    <Dropdown\n      theme={theme}\n      width={null}\n      defaultText={`Tag filters (${tagCount.enabled}/${tagCount.total})`}>\n      <React.Fragment>\n        {tagCount.total > 0 ? (\n          <ul className=\"pipeline-tags__tag-list\">\n            {tags.map(tag => (\n              <li\n                key={`tag-${tag.id}`}\n                title={tag.name}\n                className=\"pipeline-tags__tag-list-item kui-menu-option\"\n                onMouseEnter={() => onToggleTagActive(tag.id, true)}\n                onMouseLeave={() => onToggleTagActive(tag.id, false)}>\n                <Checkbox\n                  checked={tag.enabled}\n                  label={<span>{tag.name}</span>}\n                  name={tag.id}\n                  onChange={(e, { checked }) =>\n                    onToggleTagFilter(tag.id, checked)\n                  }\n                  theme={theme}\n                />\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <div className=\"pipeline-tags__empty kui-menu-option\">\n            There are no tags used in this pipeline.\n          </div>\n        )}\n      </React.Fragment>\n    </Dropdown>\n  </div>\n);\n\nexport const mapStateToProps = state => {\n  const tags = getTagData(state);\n  const tagCount = getTagCount(state);\n  return {\n    tagCount,\n    tags,\n    theme: state.theme\n  };\n};\n\nexport const mapDispatchToProps = dispatch => ({\n  onToggleTagActive: (tagID, active) => {\n    dispatch(toggleTagActive(tagID, active));\n  },\n  onToggleTagFilter: (tagID, enabled) => {\n    dispatch(toggleTagFilter(tagID, enabled));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TagList);\n","import { createSelector } from 'reselect';\nimport utils from '@quantumblack/kedro-ui/lib/utils';\nconst { escapeRegExp, getHighlightedText } = utils;\n\n/**\n * Get a list of IDs of the visible nodes\n * @param {object} nodes Grouped nodes\n * @return {array} List of node IDs\n */\nexport const getNodeIDs = nodes => {\n  const getNodeIDs = type => nodes[type].map(node => node.id);\n  const concatNodeIDs = (nodeIDs, type) => nodeIDs.concat(getNodeIDs(type));\n\n  return Object.keys(nodes).reduce(concatNodeIDs, []);\n};\n\n/**\n * Add a new highlightedLabel field to each of the node objects\n * @param {object} nodes Grouped lists of nodes\n * @param {string} searchValue Search term\n * @return {object} The grouped nodes with highlightedLabel fields added\n */\nexport const highlightMatch = (nodes, searchValue) => {\n  const addHighlightedLabel = node => ({\n    highlightedLabel: getHighlightedText(node.name, searchValue),\n    ...node\n  });\n  const addLabelsToNodes = (newNodes, type) => ({\n    ...newNodes,\n    [type]: nodes[type].map(addHighlightedLabel)\n  });\n\n  return Object.keys(nodes).reduce(addLabelsToNodes, {});\n};\n\n/**\n * Check whether a name matches the search text\n * @param {string} name\n * @param {string} searchValue\n * @return {boolean} True if match\n */\nexport const nodeMatchesSearch = (node, searchValue) => {\n  const valueRegex = searchValue\n    ? new RegExp(escapeRegExp(searchValue), 'gi')\n    : '';\n  return Boolean(node.name.match(valueRegex));\n};\n\n/**\n * Return only the results that match the search text\n * @param {object} nodes Grouped lists of nodes\n * @param {string} searchValue Search term\n * @return {object} Grouped nodes\n */\nexport const filterNodes = (nodes, searchValue) => {\n  const filterNodesByType = type =>\n    nodes[type].filter(node => nodeMatchesSearch(node, searchValue));\n  const filterNodeLists = (newNodes, type) => ({\n    ...newNodes,\n    [type]: filterNodesByType(type)\n  });\n\n  return Object.keys(nodes).reduce(filterNodeLists, {});\n};\n\n/**\n * Return filtered/highlighted nodes, and filtered node IDs\n * @param {object} nodes Grouped lists of nodes\n * @param {string} searchValue Search term\n * @return {object} Grouped nodes, and node IDs\n */\nconst getFilteredNodes = createSelector(\n  [state => state.nodes, state => state.searchValue],\n  (nodes, searchValue) => {\n    const filteredNodes = filterNodes(nodes, searchValue);\n\n    return {\n      filteredNodes: highlightMatch(filteredNodes, searchValue),\n      nodeIDs: getNodeIDs(filteredNodes)\n    };\n  }\n);\n\nexport default getFilteredNodes;\n","import React, { useEffect, useRef } from 'react';\nimport SearchBar from '@quantumblack/kedro-ui/lib/components/search-bar';\nimport { connect } from 'react-redux';\n\n/**\n * Handle Node List Search\n * @param {function} onUpdateSearchValue Event handler\n * @param {string} searchValue Search text\n * @param {string} theme Light/dark theme for Kedro-UI component\n */\nexport const NodeListSearch = ({ onUpdateSearchValue, searchValue, theme }) => {\n  const container = useRef(null);\n\n  /**\n   * Focus search on CMD+F/CTRL+F, but only if not already focused, so that if\n   * you hit the shortcut again you will receive the default browser behaviour\n   * @param {object} event Keydown event\n   */\n  const handleWindowKeyDown = event => {\n    const isKeyF = event.key === 'f' || event.keyCode === 70;\n    const isKeyCtrlOrCmd = event.ctrlKey || event.metaKey;\n    if (isKeyF && isKeyCtrlOrCmd) {\n      const input = container.current.querySelector('input');\n      if (document.activeElement !== input) {\n        input.focus();\n        event.preventDefault();\n      } else {\n        input.blur();\n      }\n    }\n  };\n\n  /**\n   * Add window keydown event listener on mount, and remove on unmount\n   */\n  useEffect(() => {\n    window.addEventListener('keydown', handleWindowKeyDown);\n    return () => window.removeEventListener('keydown', handleWindowKeyDown);\n  });\n\n  /**\n   * Listen for keyboard events, and trigger relevant actions\n   * @param {number} keyCode The key event keycode\n   */\n  const handleKeyDown = event => {\n    const isKeyEscape = event.key === 'Escape' || event.keyCode === 27;\n    if (isKeyEscape) {\n      onUpdateSearchValue('');\n      container.current.querySelector('input').blur();\n    }\n  };\n\n  return (\n    <div\n      ref={container}\n      className=\"pipeline-nodelist-search\"\n      onKeyDown={handleKeyDown}>\n      <SearchBar\n        onChange={onUpdateSearchValue}\n        value={searchValue}\n        theme={theme}\n      />\n    </div>\n  );\n};\n\nexport const mapStateToProps = state => ({\n  theme: state.theme\n});\n\nexport default connect(mapStateToProps)(NodeListSearch);\n","import React from 'react';\n\nexport default ({ className }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    <path d=\"M12 5.7c4.4 0 8 5 8 6s-3.6 6-8 6-8-5-8-6 3.6-6 8-6zm0 2a4 4 0 100 8 4 4 0 000-8zm0 2a2 2 0 110 4 2 2 0 010-4z\" />\n  </svg>\n);\n","import React from 'react';\n\nexport default ({ className }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    <path d=\"M18.6 5.17l1.4 1.4-2.2 2.19C19.18 10.09 20 11.5 20 12c0 1.03-3.58 6-8 6a6.8 6.8 0 01-2.8-.64L6.56 20l-1.4-1.4L18.6 5.17zm-2.8 5.59l-1.92 1.93a2 2 0 01-1.2 1.19l-1.92 1.92a4 4 0 005.04-5.04zM12 6c.85 0 1.68.19 2.45.5l-1.6 1.59a4 4 0 00-4.76 4.76L5.94 15C4.74 13.75 4 12.48 4 12c0-1.06 3.58-6 8-6z\" />\n  </svg>\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { toggleNodesDisabled } from '../../actions/nodes';\nimport VisibleIcon from '../icons/visible';\nimport InvisibleIcon from '../icons/invisible';\n\nexport const NodeListToggleAll = ({ onToggleNodesDisabled, nodeIDs }) => (\n  <div className=\"kedro pipeline-nodelist__toggle\">\n    <h2 className=\"pipeline-nodelist__toggle__title\">All Elements</h2>\n    <div className=\"pipeline-nodelist__toggle__row\">\n      <button\n        onClick={() => onToggleNodesDisabled(nodeIDs, false)}\n        className=\"pipeline-nodelist__toggle__button\">\n        <VisibleIcon className=\"pipeline-nodelist__toggle__icon\" />\n        Show all\n      </button>\n      <button\n        onClick={() => onToggleNodesDisabled(nodeIDs, true)}\n        className=\"pipeline-nodelist__toggle__button\">\n        <InvisibleIcon className=\"pipeline-nodelist__toggle__icon\" />\n        Hide all\n      </button>\n    </div>\n  </div>\n);\n\nexport const mapDispatchToProps = dispatch => ({\n  onToggleNodesDisabled: (nodeIDs, disabled) => {\n    dispatch(toggleNodesDisabled(nodeIDs, disabled));\n  }\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(NodeListToggleAll);\n","import { createSelector } from 'reselect';\nimport { getNodeDisabled } from './disabled';\nimport { arrayToObject } from '../utils';\n\nconst getNodeIDs = state => state.node.ids;\nconst getNodeType = state => state.node.type;\nconst getNodeTypeIDs = state => state.nodeType.ids;\nconst getNodeTypeName = state => state.nodeType.name;\nconst getNodeTypeDisabled = state => state.nodeType.disabled;\n\n/**\n * Calculate the total number of nodes (and the number of visible nodes)\n * for each node-type\n */\nexport const getTypeNodeCount = createSelector(\n  [getNodeTypeIDs, getNodeIDs, getNodeType, getNodeDisabled],\n  (types, nodeIDs, nodeType, nodeDisabled) =>\n    arrayToObject(types, type => {\n      const typeNodeIDs = nodeIDs.filter(nodeID => nodeType[nodeID] === type);\n      const visibleTypeNodeIDs = typeNodeIDs.filter(\n        nodeID => !nodeDisabled[nodeID]\n      );\n      return {\n        total: typeNodeIDs.length,\n        visible: visibleTypeNodeIDs.length\n      };\n    })\n);\n\n/**\n * Get formatted list of node type objects\n */\nexport const getNodeTypes = createSelector(\n  [getNodeTypeIDs, getNodeTypeName, getNodeTypeDisabled, getTypeNodeCount],\n  (types, typeName, typeDisabled, typeNodeCount) =>\n    types.map(id => ({\n      id,\n      name: typeName[id],\n      disabled: Boolean(typeDisabled[id]),\n      nodeCount: typeNodeCount[id]\n    }))\n);\n","import React from 'react';\nimport classnames from 'classnames';\nimport NodeIcon from '../icons/node-icon';\nimport VisibleIcon from '../icons/visible';\nimport InvisibleIcon from '../icons/invisible';\n\nconst NodeListRow = ({\n  active,\n  checked,\n  children,\n  disabled,\n  id,\n  label,\n  name,\n  onMouseEnter,\n  onMouseLeave,\n  onChange,\n  onClick,\n  selected,\n  type\n}) => {\n  const VisibilityIcon = checked ? VisibleIcon : InvisibleIcon;\n  const visible = Boolean(onClick && !disabled && checked);\n  const faded = disabled || !checked;\n\n  return (\n    <div\n      className={classnames('pipeline-nodelist__row kedro', {\n        'pipeline-nodelist__row--visible': visible,\n        'pipeline-nodelist__row--active': active,\n        'pipeline-nodelist__row--selected': selected,\n        'pipeline-nodelist__row--disabled': disabled\n      })}\n      onMouseEnter={visible ? onMouseEnter : null}\n      onMouseLeave={visible ? onMouseLeave : null}>\n      <button\n        className=\"pipeline-nodelist__row__text\"\n        onClick={onClick}\n        onFocus={onMouseEnter}\n        onBlur={onMouseLeave}\n        disabled={!visible}\n        title={children ? null : name}>\n        <NodeIcon\n          className={classnames(\n            'pipeline-nodelist__row__type-icon pipeline-nodelist__row__icon',\n            {\n              'pipeline-nodelist__row__type-icon--faded': faded,\n              'pipeline-nodelist__row__type-icon--nested': !children\n            }\n          )}\n          type={type}\n        />\n        <span\n          className={classnames('pipeline-nodelist__row__label', {\n            'pipeline-nodelist__row__label--faded': faded\n          })}\n          dangerouslySetInnerHTML={{ __html: label }}\n        />\n      </button>\n      {children}\n      <label htmlFor={id} className=\"pipeline-nodelist__row__visibility\">\n        <input\n          id={id}\n          className=\"pipeline-nodelist__row__checkbox\"\n          type=\"checkbox\"\n          checked={checked}\n          disabled={disabled}\n          name={name}\n          onChange={onChange}\n        />\n        <VisibilityIcon\n          aria-label={name}\n          className={classnames(\n            'pipeline-nodelist__row__icon pipeline-nodelist__row__visibility-icon',\n            {\n              'pipeline-nodelist__row__visibility-icon--unchecked': !checked\n            }\n          )}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default NodeListRow;\n","import React from 'react';\nimport classnames from 'classnames';\nimport { connect } from 'react-redux';\nimport { Flipped } from 'react-flip-toolkit';\nimport NodeListRow from './node-list-row';\nimport { toggleTypeDisabled } from '../../actions/node-type';\n\nexport const NodeListGroup = ({\n  children,\n  collapsed,\n  onToggleTypeDisabled,\n  onToggleCollapsed,\n  type\n}) => (\n  <Flipped flipId={type.id}>\n    <li>\n      <Flipped inverseFlipId={type.id} scale>\n        <div>\n          <h3 className=\"pipeline-nodelist__heading\">\n            <NodeListRow\n              checked={!type.disabled}\n              id={type.id}\n              label={`${type.name} <i>(${type.nodeCount.visible}/${\n                type.nodeCount.total\n              })</i>`}\n              name={type.name}\n              onChange={e => {\n                onToggleTypeDisabled(type.id, !e.target.checked);\n              }}\n              type={type.id}>\n              <button\n                aria-label={`${\n                  collapsed ? 'Show' : 'Hide'\n                } ${type.name.toLowerCase()}`}\n                onClick={() => onToggleCollapsed(type.id)}\n                className={classnames('pipeline-type-group-toggle', {\n                  'pipeline-type-group-toggle--alt': collapsed\n                })}\n              />\n            </NodeListRow>\n          </h3>\n          <Flipped\n            flipId={`${type.id}-children`}\n            onAppear={el => {\n              el.classList.add('pipeline-nodelist--fade-in');\n              el.onanimationend = () => {\n                el.style.opacity = 1;\n                el.classList.remove('pipeline-nodelist--fade-in');\n              };\n            }}\n            onExit={(el, i, removeElement) => {\n              el.style.opacity = 0;\n              el.classList.add('pipeline-nodelist--fade-out');\n              el.onanimationend = removeElement;\n            }}\n            opacity>\n            {collapsed ? null : children}\n          </Flipped>\n        </div>\n      </Flipped>\n    </li>\n  </Flipped>\n);\n\nexport const mapDispatchToProps = dispatch => ({\n  onToggleTypeDisabled: (typeID, disabled) => {\n    dispatch(toggleTypeDisabled(typeID, disabled));\n  }\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(NodeListGroup);\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Flipper } from 'react-flip-toolkit';\nimport utils from '@quantumblack/kedro-ui/lib/utils';\nimport { loadState, saveState } from '../../store/helpers';\nimport { getNodeActive, getNodeSelected } from '../../selectors/nodes';\nimport { getNodeTypes } from '../../selectors/node-types';\nimport NodeListGroup from './node-list-group';\nimport NodeListRow from './node-list-row';\nimport {\n  toggleNodeClicked,\n  toggleNodeHovered,\n  toggleNodesDisabled\n} from '../../actions/nodes';\n\nconst storedState = loadState();\n\nconst NodeListGroups = ({\n  onToggleNodeClicked,\n  onToggleNodesDisabled,\n  onToggleNodeHovered,\n  nodes,\n  nodeActive,\n  nodeSelected,\n  types\n}) => {\n  // Deselect node on Escape key\n  const handleKeyDown = event => {\n    utils.handleKeyEvent(event.keyCode, {\n      escape: () => onToggleNodeClicked(null)\n    });\n  };\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  });\n\n  const [collapsed, setCollapsed] = useState(storedState.groupsCollapsed || {});\n\n  // Collapse/expand node group\n  const onToggleCollapsed = typeID => {\n    const groupsCollapsed = Object.assign({}, collapsed, {\n      [typeID]: !collapsed[typeID]\n    });\n    setCollapsed(groupsCollapsed);\n    saveState({ groupsCollapsed });\n  };\n\n  // Toggle node selection depending on whether it's already selected\n  const handleNodeSelection = nodeID => {\n    if (nodeSelected[nodeID]) {\n      onToggleNodeClicked(null);\n    } else {\n      onToggleNodeClicked(nodeID);\n    }\n  };\n\n  const renderTypeGroup = type => {\n    if (!nodes[type.id]) {\n      return null;\n    }\n    return (\n      <NodeListGroup\n        key={type.id}\n        onToggleCollapsed={onToggleCollapsed}\n        type={type}\n        collapsed={collapsed[type.id]}>\n        <ul className=\"pipeline-nodelist pipeline-nodelist--nested\">\n          {nodes[type.id].map(node => (\n            <li key={node.id}>\n              <NodeListRow\n                active={nodeActive[node.id]}\n                checked={!node.disabled_node}\n                disabled={node.disabled_tag || node.disabled_type}\n                id={node.id}\n                label={node.highlightedLabel}\n                name={node.name}\n                onClick={() => handleNodeSelection(node.id)}\n                onMouseEnter={() => onToggleNodeHovered(node.id)}\n                onMouseLeave={() => onToggleNodeHovered(null)}\n                onChange={e => {\n                  onToggleNodesDisabled([node.id], !e.target.checked);\n                }}\n                selected={nodeSelected[node.id]}\n                type={node.type}\n              />\n            </li>\n          ))}\n        </ul>\n      </NodeListGroup>\n    );\n  };\n\n  return (\n    <Flipper flipKey={collapsed}>\n      <ul className=\"pipeline-nodelist\">{types.map(renderTypeGroup)}</ul>\n    </Flipper>\n  );\n};\n\nexport const mapStateToProps = state => ({\n  nodeActive: getNodeActive(state),\n  nodeSelected: getNodeSelected(state),\n  types: getNodeTypes(state)\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  onToggleNodeClicked: nodeID => {\n    dispatch(toggleNodeClicked(nodeID));\n  },\n  onToggleNodeHovered: nodeID => {\n    dispatch(toggleNodeHovered(nodeID));\n  },\n  onToggleNodesDisabled: (nodeIDs, disabled) => {\n    dispatch(toggleNodesDisabled(nodeIDs, disabled));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NodeListGroups);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { getGroupedNodes } from '../../selectors/nodes';\nimport getFilteredNodes from './filter-nodes';\nimport NodeListSearch from './node-list-search';\nimport NodeListToggleAll from './node-list-toggle';\nimport NodeListGroups from './node-list-groups';\nimport './styles/node-list.css';\n\n/**\n * Scrollable list of toggleable nodes, with search & filter functionality\n */\nconst NodeList = ({ nodes }) => {\n  const [searchValue, updateSearchValue] = useState('');\n  const { filteredNodes, nodeIDs } = getFilteredNodes({ nodes, searchValue });\n\n  return (\n    <React.Fragment>\n      <NodeListSearch\n        onUpdateSearchValue={updateSearchValue}\n        searchValue={searchValue}\n      />\n      <Scrollbars\n        className=\"pipeline-nodelist-scrollbars\"\n        style={{ width: 'auto' }}\n        autoHide\n        hideTracksWhenNotNeeded>\n        <NodeListToggleAll nodeIDs={nodeIDs} />\n        <NodeListGroups nodes={filteredNodes} />\n      </Scrollbars>\n    </React.Fragment>\n  );\n};\n\nexport const mapStateToProps = state => ({\n  nodes: getGroupedNodes(state)\n});\n\nexport default connect(mapStateToProps)(NodeList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport LabelIcon from '../icons/label';\nimport LayersIcon from '../icons/layers';\nimport MenuIcon from '../icons/menu';\nimport ThemeIcon from '../icons/theme';\nimport ExportIcon from '../icons/export';\nimport MapIcon from '../icons/map';\nimport PlusIcon from '../icons/plus';\nimport MinusIcon from '../icons/minus';\nimport ResetIcon from '../icons/reset';\nimport './icon-button.css';\n\nconst icons = {\n  label: LabelIcon,\n  layers: LayersIcon,\n  menu: MenuIcon,\n  theme: ThemeIcon,\n  export: ExportIcon,\n  map: MapIcon,\n  plus: PlusIcon,\n  minus: MinusIcon,\n  reset: ResetIcon\n};\n\n/**\n * Icon button component\n * @param {Function} onToggle Handle toggling theme between light/dark\n * @param {string} theme Kedro UI light/dark theme\n */\nconst IconButton = ({\n  ariaLabel,\n  ariaLive,\n  className,\n  disabled,\n  icon,\n  labelText,\n  onClick,\n  visible,\n  active\n}) => {\n  const Icon = icons[icon];\n\n  return visible ? (\n    <li>\n      <button\n        aria-label={ariaLabel}\n        aria-live={ariaLive}\n        className={classnames({\n          [className]: true,\n          'pipeline-icon-toolbar__button': true,\n          'pipeline-icon-toolbar__button--active': active\n        })}\n        disabled={disabled}\n        onClick={onClick}>\n        <span className=\"pipeline-toolbar__label\">{labelText}</span>\n        <Icon className={`pipeline-icon pipeline-icon-${icon}`} />\n      </button>\n    </li>\n  ) : null;\n};\n\nIconButton.propTypes = {\n  ariaLabel: PropTypes.string,\n  ariaLive: PropTypes.string,\n  disabled: PropTypes.bool,\n  icon: PropTypes.string,\n  labelText: PropTypes.string,\n  onClick: PropTypes.func,\n  visible: PropTypes.bool,\n  active: PropTypes.bool\n};\n\nIconButton.defaultProps = {\n  ariaLabel: null,\n  ariaLive: null,\n  disabled: false,\n  icon: 'label',\n  labelText: null,\n  onClick: null,\n  visible: true,\n  active: false\n};\n\nexport default IconButton;\n","import React from 'react';\n\nexport default ({ className }) => (\n  <svg className={className} viewBox=\"0 0 22 20\">\n    <path d=\"M22 0v20H7.3L0 10 7.3 0H22zm-6.2 5h-3.6L10 15h2l.3-1.8h3.4L16 15H18L15.8 5zm-1.5 1.7l1 4.7h-2.6l1-4.7h.6z\" />\n  </svg>\n);\n","import React from 'react';\n\nexport default ({ className }) => (\n  <svg\n    className={className}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\">\n    <path d=\"M9.97 0l10.09 5-5.04 2.5 5.04 2.5-5.04 2.5 5.04 2.5L10 20 0 15l5-2.5L0 10l5.02-2.5L0 5zM7.23 13.61L4.47 15 10 17.77 15.56 15l-2.79-1.38L10 15zm5.56-4.98L9.99 10 7.26 8.63l-2.77 1.38 3.56 1.77 1.96.95 2.1-1L15.57 10zm-2.82-6.4L4.47 5 10 7.77 15.56 5z\" />\n  </svg>\n);\n","import React from 'react';\n\nexport default ({ className }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    <path d=\"M15.3 3.3l1.4 1.4L9.4 12l7.3 7.3-1.4 1.4L6.6 12z\" />\n  </svg>\n);\n","import React from 'react';\n\nexport default ({ className }) => (\n  <svg className={className} viewBox=\"0 0 20 20\">\n    <path d=\"M10 0a10 10 0 1 1 0 20 10 10 0 0 1 0-20zm0 2v16a8 8 0 1 0 0-16z\" />\n  </svg>\n);\n","import React from 'react';\n\nexport default ({ className }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    <path d=\"M5 16v4h14v-4h2v4c0 1-.8 2-1.9 2H5a2 2 0 01-2-2v-4h2zm8-14v11l3.5-3.5L18 11l-6 6-6-6 1.5-1.5L11 13V2h2z\" />\n  </svg>\n);\n","import React from 'react';\n\nexport default ({ className }) => (\n  <svg\n    className={className}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\">\n    <path\n      transform=\"translate(-3 -4)\"\n      strokeWidth=\"2\"\n      d=\"M20.573 6.875L15.352 8.75l-6-3.75L4 6.875v12.96l5.352-2.085 6 3.75 5.221-2.736zM15.352 8v12.75M9.352 5v12.75\"\n    />\n  </svg>\n);\n","import React from 'react';\n\nexport default ({ className }) => (\n  <svg\n    className={className}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\">\n    <path\n      transform=\"translate(-1 1) rotate(90 11.5 12)\"\n      strokeWidth=\"2\"\n      d=\"M11.5 4L11.5 20\"\n    />\n    <path transform=\"translate(-1 1)\" strokeWidth=\"2\" d=\"M11.5 4L11.5 20\" />\n  </svg>\n);\n","import React from 'react';\n\nexport default ({ className }) => (\n  <svg\n    className={className}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\">\n    <path\n      transform=\"translate(-1 1) rotate(90 11.5 12)\"\n      strokeWidth=\"2\"\n      d=\"M11.5 5L11.5 19\"\n    />\n  </svg>\n);\n","import React from 'react';\n\nexport default ({ className }) => (\n  <svg\n    className={className}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 26 26\">\n    <path\n      transform=\"translate(0 0)\"\n      d=\"M8.48 2.637V8h.002v.128H6.488V6.207c-1.531 1.457-2.485 3.515-2.485 5.796 0 4.418 3.581 8 8 8 .18 0 .359-.006.536-.018l.001 2c-.179.01-.359.015-.54.015-5.523 0-10-4.477-10-10 0-2.913 1.246-5.536 3.234-7.364H2.997V2.644l5.471-.001.011-.005zM12 2c5.523 0 10 4.477 10 10 0 2.927-1.258 5.56-3.262 7.39l2.29-.002v1.994h-5.485v-.028l-.003.001V19.18l.003-.001v-3.282h1.994v1.882c1.52-1.456 2.466-3.506 2.466-5.776 0-4.419-3.582-8-8-8-.176 0-.35.005-.524.016V2.013C11.652 2.004 11.825 2 12 2z\"\n    />\n  </svg>\n);\n","import React from 'react';\nimport classnames from 'classnames';\nimport { connect } from 'react-redux';\nimport {\n  toggleExportModal,\n  toggleLayers,\n  toggleSidebar,\n  toggleTextLabels,\n  toggleTheme\n} from '../../actions';\nimport IconButton from '../icon-button';\nimport { getVisibleLayerIDs } from '../../selectors/disabled';\nimport './primary-toolbar.css';\n\n/**\n * Main contols for filtering the chart data\n * @param {Function} onToggleTheme Handle toggling theme between light/dark\n * @param {Function} onToggleTextLabels Handle toggling text labels on/off\n * @param {Boolean} textLabels Whether text labels are displayed\n * @param {string} theme Kedro UI light/dark theme\n */\nexport const PrimaryToolbar = ({\n  disableLayerBtn,\n  onToggleExportModal,\n  onToggleLayers,\n  onToggleSidebar,\n  onToggleTextLabels,\n  onToggleTheme,\n  textLabels,\n  theme,\n  visible,\n  visibleLayers\n}) => (\n  <>\n    <ul className=\"pipeline-primary-toolbar kedro\">\n      <IconButton\n        ariaLabel={`${visible.sidebar ? 'Hide' : 'Show'} menu`}\n        className={classnames('pipeline-menu-button', {\n          'pipeline-menu-button--inverse': !visible.sidebar\n        })}\n        onClick={() => onToggleSidebar(!visible.sidebar)}\n        icon=\"menu\"\n        labelText={`${visible.sidebar ? 'Hide' : 'Show'} menu`}\n      />\n      <IconButton\n        ariaLive=\"polite\"\n        ariaLabel={`Change to ${theme === 'light' ? 'dark' : 'light'} theme`}\n        onClick={() => onToggleTheme(theme === 'light' ? 'dark' : 'light')}\n        icon=\"theme\"\n        labelText=\"Toggle theme\"\n        visible={visible.themeBtn}\n      />\n      <IconButton\n        ariaLive=\"polite\"\n        onClick={() => onToggleTextLabels(!textLabels)}\n        icon=\"label\"\n        labelText={`${textLabels ? 'Hide' : 'Show'} text labels`}\n        visible={visible.labelBtn}\n      />\n      <IconButton\n        ariaLabel=\"Export graph as SVG or PNG\"\n        onClick={() => onToggleExportModal(true)}\n        icon=\"export\"\n        labelText=\"Export visualisation\"\n        visible={visible.exportBtn}\n      />\n      <IconButton\n        ariaLabel={`Turn data layers ${visibleLayers ? 'off' : 'on'}`}\n        onClick={() => onToggleLayers(!visibleLayers)}\n        icon=\"layers\"\n        labelText={`${visibleLayers ? 'Hide' : 'Show'} layers`}\n        disabled={disableLayerBtn}\n        visible={visible.layerBtn}\n      />\n    </ul>\n  </>\n);\n\nexport const mapStateToProps = state => ({\n  disableLayerBtn: !state.layer.ids.length,\n  textLabels: state.textLabels,\n  theme: state.theme,\n  visible: state.visible,\n  visibleLayers: Boolean(getVisibleLayerIDs(state).length)\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  onToggleExportModal: value => {\n    dispatch(toggleExportModal(value));\n  },\n  onToggleLayers: value => {\n    dispatch(toggleLayers(Boolean(value)));\n  },\n  onToggleSidebar: visible => {\n    dispatch(toggleSidebar(visible));\n  },\n  onToggleTextLabels: value => {\n    dispatch(toggleTextLabels(Boolean(value)));\n  },\n  onToggleTheme: value => {\n    dispatch(toggleTheme(value));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PrimaryToolbar);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { toggleMiniMap, updateZoom } from '../../actions';\nimport { getChartZoom } from '../../selectors/layout';\nimport IconButton from '../icon-button';\nimport './minimap-toolbar.css';\n\n/**\n * Controls for minimap\n */\nexport const MiniMapToolbar = ({\n  onToggleMiniMap,\n  visible,\n  chartZoom,\n  onUpdateChartZoom\n}) => {\n  const { scale, minScale, maxScale } = chartZoom;\n\n  return (\n    <>\n      <ul className=\"pipeline-minimap-toolbar kedro\">\n        <IconButton\n          icon=\"map\"\n          className={\n            'pipeline-minimap-button pipeline-icon--stroke pipeline-minimap-button--map'\n          }\n          ariaLabel={`Turn minimap ${visible.miniMap ? 'off' : 'on'}`}\n          onClick={() => onToggleMiniMap(!visible.miniMap)}\n          labelText={`${visible.miniMap ? 'Hide' : 'Show'} minimap`}\n          visible={visible.miniMapBtn}\n          active={visible.miniMap}\n        />\n        <IconButton\n          icon=\"plus\"\n          className={\n            'pipeline-minimap-button pipeline-icon--stroke pipeline-minimap-button--zoom-in'\n          }\n          ariaLabel={'Zoom in'}\n          labelText={'Zoom in'}\n          visible={visible.miniMapBtn}\n          disabled={scale >= maxScale}\n          onClick={() => onUpdateChartZoom(scaleZoom(chartZoom, 1.3))}\n        />\n        <IconButton\n          icon=\"minus\"\n          className={\n            'pipeline-minimap-button pipeline-icon--stroke pipeline-minimap-button--zoom-out'\n          }\n          ariaLabel={'Zoom out'}\n          labelText={'Zoom out'}\n          visible={visible.miniMapBtn}\n          disabled={scale <= minScale}\n          onClick={() => onUpdateChartZoom(scaleZoom(chartZoom, 0.7))}\n        />\n        <IconButton\n          icon=\"reset\"\n          className={'pipeline-minimap-button pipeline-minimap-button--reset'}\n          ariaLabel={'Reset zoom'}\n          labelText={'Reset zoom'}\n          visible={visible.miniMapBtn}\n          onClick={() => onUpdateChartZoom(scaleZoom(chartZoom, 0))}\n        />\n        <li>\n          <span className=\"pipeline-minimap-toolbar__scale\" title=\"Zoom level\">\n            {Math.round(100 * chartZoom.scale) || 100}%\n          </span>\n        </li>\n      </ul>\n    </>\n  );\n};\n\nconst scaleZoom = ({ scale }, factor) => ({\n  scale: scale * (factor || 1),\n  applied: false,\n  transition: true,\n  reset: factor === 0\n});\n\nexport const mapStateToProps = state => ({\n  visible: state.visible,\n  chartZoom: getChartZoom(state)\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  onToggleMiniMap: value => {\n    dispatch(toggleMiniMap(value));\n  },\n  onUpdateChartZoom: transform => {\n    dispatch(updateZoom(transform));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MiniMapToolbar);\n","import 'd3-transition';\n\nconst viewportMargin = 2;\n\n/**\n * Render viewport region\n */\nexport const drawViewport = function() {\n  const { mapSize } = this.props;\n  const { x, y, width, height } = this.getViewport();\n\n  const minX = Math.max(x, viewportMargin);\n  const minY = Math.max(y, viewportMargin);\n  const maxX = Math.min(x + width, mapSize.width - viewportMargin);\n  const maxY = Math.min(y + height, mapSize.height - viewportMargin);\n\n  this.el.viewport\n    .enter()\n    .attr('x', 0)\n    .attr('y', 0);\n\n  this.el.viewport\n    .attr('transform', `translate(${minX}, ${minY})`)\n    .attr('width', Math.max(0, maxX - minX))\n    .attr('height', Math.max(0, maxY - minY));\n};\n\n/**\n * Render nodes\n */\nexport const drawNodes = function() {\n  const {\n    centralNode,\n    linkedNodes,\n    nodeActive,\n    nodeSelected,\n    nodes\n  } = this.props;\n\n  this.el.nodes = this.el.nodeGroup\n    .selectAll('.pipeline-minimap-node')\n    .data(nodes, node => node.id);\n\n  const enterNodes = this.el.nodes\n    .enter()\n    .append('g')\n    .attr('class', 'pipeline-minimap-node');\n\n  enterNodes\n    .attr('transform', node => `translate(${node.x}, ${node.y})`)\n    .attr('opacity', 0);\n\n  enterNodes.append('rect');\n\n  this.el.nodes\n    .exit()\n    .transition('exit-nodes')\n    .duration(this.DURATION)\n    .attr('opacity', 0)\n    .remove();\n\n  this.el.nodes = this.el.nodes\n    .merge(enterNodes)\n    .attr('data-id', node => node.id)\n    .classed('pipeline-minimap-node--active', node => nodeActive[node.id])\n    .classed('pipeline-minimap-node--selected', node => nodeSelected[node.id])\n    .classed(\n      'pipeline-minimap-node--faded',\n      node => centralNode && !linkedNodes[node.id]\n    );\n\n  this.el.nodes\n    .transition('update-nodes')\n    .duration(this.DURATION)\n    .attr('opacity', 1)\n    .attr('transform', node => `translate(${node.x}, ${node.y})`)\n    .end()\n    .catch(() => {});\n\n  this.el.nodes\n    .select('rect')\n    .attr('width', node => node.width - sizeOffset(node))\n    .attr('height', node => node.height - sizeOffset(node))\n    .attr('x', node => (node.width - sizeOffset(node)) / -2)\n    .attr('y', node => (node.height - sizeOffset(node)) / -2);\n};\n\nconst sizeOffset = node => (node.type === 'task' ? 5 : 16);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport 'd3-transition';\nimport { interpolate } from 'd3-interpolate';\nimport { select, event } from 'd3-selection';\nimport { zoom, zoomIdentity, zoomTransform } from 'd3-zoom';\nimport { getNodeActive, getNodeSelected } from '../../selectors/nodes';\nimport { updateZoom } from '../../actions';\nimport { getChartSize, getChartZoom } from '../../selectors/layout';\nimport { getCentralNode, getLinkedNodes } from '../../selectors/linked-nodes';\nimport { drawNodes, drawViewport } from './draw';\nimport './styles/minimap.css';\n\n/**\n * Display a pipeline minimap, mostly rendered with D3\n */\nexport class MiniMap extends Component {\n  constructor(props) {\n    super(props);\n\n    this.DURATION = 700;\n    this.TRANSITION_WAIT = 200;\n    this.ZOOM_RATE = 0.0025;\n    this.isPointerDown = false;\n    this.isPointerInside = false;\n    this.lastTransitionTime = 0;\n\n    this.containerRef = React.createRef();\n    this.svgRef = React.createRef();\n    this.wrapperRef = React.createRef();\n    this.nodesRef = React.createRef();\n    this.viewportRef = React.createRef();\n\n    this.onPointerMove = this.onPointerMove.bind(this);\n    this.onPointerEnter = this.onPointerEnter.bind(this);\n    this.onPointerLeave = this.onPointerLeave.bind(this);\n    this.onPointerDown = this.onPointerDown.bind(this);\n    this.onPointerWheel = this.onPointerWheel.bind(this);\n    this.onPointerWheelGlobal = this.onPointerWheelGlobal.bind(this);\n    this.onPointerUpGlobal = this.onPointerUpGlobal.bind(this);\n  }\n\n  componentDidMount() {\n    this.selectD3Elements();\n    this.initZoomBehaviour();\n    this.addGlobalEventListeners();\n    this.update();\n  }\n\n  componentWillUnmount() {\n    this.removeGlobalEventListeners();\n  }\n\n  /**\n   * Add window event listeners\n   */\n  addGlobalEventListeners() {\n    window.addEventListener('wheel', this.onPointerWheelGlobal, {\n      passive: false\n    });\n    window.addEventListener(\n      pointerEventName('pointerup'),\n      this.onPointerUpGlobal\n    );\n  }\n\n  /**\n   * Remove window event listeners\n   */\n  removeGlobalEventListeners() {\n    window.removeEventListener('wheel', this.onPointerWheelGlobal);\n    window.removeEventListener(\n      pointerEventName('pointerup'),\n      this.onPointerUpGlobal\n    );\n  }\n\n  componentDidUpdate(prevProps) {\n    this.update(prevProps);\n  }\n\n  /**\n   * Updates drawing and zoom if props have changed\n   */\n  update(prevProps = {}) {\n    const { visible, chartZoom } = this.props;\n\n    if (visible) {\n      const changed = (...names) => this.changed(names, prevProps, this.props);\n\n      if (\n        changed(\n          'visible',\n          'nodes',\n          'centralNode',\n          'linkedNodes',\n          'nodesActive',\n          'nodeSelected'\n        )\n      ) {\n        drawNodes.call(this);\n      }\n\n      if (changed('visible', 'chartZoom') && chartZoom.applied) {\n        drawViewport.call(this);\n      }\n\n      if (changed('visible', 'nodes', 'textLabels', 'chartSize')) {\n        this.zoomToFit();\n      }\n    }\n  }\n\n  /**\n   * Returns true if any of the given props are different between given objects.\n   * Only shallow changes are detected.\n   */\n  changed(props, objectA, objectB) {\n    return (\n      objectA && objectB && props.some(prop => objectA[prop] !== objectB[prop])\n    );\n  }\n\n  /**\n   * Create D3 element selectors\n   */\n  selectD3Elements() {\n    this.el = {\n      svg: select(this.svgRef.current),\n      wrapper: select(this.wrapperRef.current),\n      nodeGroup: select(this.nodesRef.current),\n      viewport: select(this.viewportRef.current)\n    };\n  }\n\n  /**\n   * Setup D3 zoom behaviour on component mount\n   */\n  initZoomBehaviour() {\n    // Create zoom behaviour\n    this.zoomBehaviour = zoom()\n      // Ignore all user input default behaviour\n      .filter(() => false)\n      // Transition using linear interpolation\n      .interpolate(interpolate)\n      // When zoom changes\n      .on('zoom', () => {\n        // Transform the <g> that wraps the map\n        this.el.wrapper.attr('transform', event.transform);\n      });\n\n    this.el.svg.call(this.zoomBehaviour);\n  }\n\n  /**\n   * Handle pointer enter\n   */\n  onPointerEnter = () => {\n    this.isPointerInside = true;\n  };\n\n  /**\n   * Handle pointer leave\n   */\n  onPointerLeave = () => {\n    this.isPointerInside = false;\n  };\n\n  /**\n   * Handle global pointer up\n   */\n  onPointerUpGlobal = () => {\n    this.isPointerDown = false;\n    this.isPointerInside = false;\n  };\n\n  /**\n   * Handle pointer down\n   * @param {Object} event Event object\n   */\n  onPointerDown = event => {\n    this.isPointerDown = true;\n    this.isPointerInside = true;\n\n    this.onPointerMove(event, true);\n  };\n\n  /**\n   * Handle pointer wheel\n   * @param {Object} event Event object\n   */\n  onPointerWheel = event => {\n    const { scale = 1 } = this.props.chartZoom;\n\n    // Change zoom based on wheel velocity\n    this.props.onUpdateChartZoom({\n      scale: scale - (event.deltaY || 0) * scale * this.ZOOM_RATE,\n      applied: false,\n      transition: false\n    });\n  };\n\n  /**\n   * Handle global pointer wheel\n   * @param {Object} event Event object\n   */\n  onPointerWheelGlobal = event => {\n    // Prevent window scroll when wheeling on this minimap\n    const wasTarget = this.containerRef.current.contains(event.target);\n    if (wasTarget) {\n      event.preventDefault();\n    }\n  };\n\n  /**\n   * Handle pointer move\n   * @param {Object} event Event object\n   * @param {?Boolean} useTransition Apply with transition\n   */\n  onPointerMove = (event, useTransition = false) => {\n    if (this.isPointerDown && this.isPointerInside) {\n      // Wait for transition\n      const time = Number(new Date());\n      if (time - this.lastTransitionTime < this.TRANSITION_WAIT) {\n        return;\n      }\n\n      // Get current state\n      const { width, height } = this.props.mapSize;\n      const { width: graphWidth, height: graphHeight } = this.props.graphSize;\n      const { k: scale = 1 } = zoomTransform(this.wrapperRef.current);\n      const containerRect = this.svgRef.current.getBoundingClientRect();\n\n      // Transform minimap pointer position to a graph position\n      const pointerX = event.clientX - containerRect.x;\n      const pointerY = event.clientY - containerRect.y;\n      const centerX = (width / scale - graphWidth) * 0.5;\n      const centerY = (height / scale - graphHeight) * 0.5;\n      const x = (pointerX / width) * (width / scale) - centerX;\n      const y = (pointerY / height) * (height / scale) - centerY;\n\n      // Dispatch an update to be applied\n      this.props.onUpdateChartZoom({\n        x,\n        y,\n        applied: false,\n        transition: useTransition\n      });\n\n      if (useTransition) {\n        this.lastTransitionTime = time;\n      }\n    }\n  };\n\n  /**\n   * Zoom and scale to fit\n   */\n  zoomToFit() {\n    const { mapSize, graphSize } = this.props;\n\n    let scale = 1;\n    let translateX = 0;\n    let translateY = 0;\n\n    // Fit the graph exactly in the viewport\n    if (mapSize.width > 0 && graphSize.width > 0) {\n      scale = Math.min(\n        (mapSize.width - padding) / graphSize.width,\n        (mapSize.height - padding) / graphSize.height\n      );\n      translateX = (mapSize.width - graphSize.width * scale) / 2;\n      translateY = (mapSize.height - graphSize.height * scale) / 2;\n    }\n\n    // Get the target zoom transform\n    const targetTransform = zoomIdentity\n      .translate(translateX, translateY)\n      .scale(scale);\n\n    // Get the current zoom transform\n    const { k = 1, x = 0, y = 0 } = zoomTransform(this.wrapperRef.current);\n    const isFirstZoom = k === 1 && x === 0 && y === 0;\n\n    // Avoid errors during tests due to lack of SVG support\n    if (typeof jest !== 'undefined') {\n      return;\n    }\n\n    // Apply transform but only transition after first zoom\n    (isFirstZoom\n      ? this.el.svg\n      : this.el.svg.transition('zoom').duration(this.DURATION)\n    ).call(this.zoomBehaviour.transform, targetTransform);\n  }\n\n  /**\n   * Get the position of the viewport relative to the minimap\n   */\n  getViewport() {\n    const { chartZoom, chartSize } = this.props;\n    const { k: mapScale, x: translateX, y: translateY } = zoomTransform(\n      this.wrapperRef.current\n    );\n\n    const scale = mapScale / chartZoom.scale;\n    const width = chartSize.width * scale;\n    const height = chartSize.height * scale;\n    const x = translateX - (chartZoom.x - chartSize.sidebarWidth) * scale;\n    const y = translateY - chartZoom.y * scale;\n\n    return { x, y, width, height };\n  }\n\n  /**\n   * Render React elements\n   */\n  render() {\n    const { width, height } = this.props.mapSize;\n    const transformStyle = {\n      transform: `translate(calc(-100% + ${width}px), -100%)`\n    };\n\n    // Add pointer events with back compatibility\n    const _ = pointerEventName;\n    const inputEvents = {\n      onWheel: this.onPointerWheel,\n      [_('onPointerEnter')]: this.onPointerEnter,\n      [_('onPointerLeave')]: this.onPointerLeave,\n      [_('onPointerDown')]: this.onPointerDown,\n      [_('onPointerMove')]: this.onPointerMove\n    };\n\n    return (\n      <div\n        className={classnames('pipeline-minimap-container', {\n          'pipeline-minimap-container--visible': this.props.visible\n        })}\n        style={this.props.visible ? transformStyle : {}}>\n        <div\n          className=\"pipeline-minimap kedro\"\n          ref={this.containerRef}\n          {...inputEvents}>\n          <svg\n            id=\"pipeline-minimap-graph\"\n            className=\"pipeline-minimap__graph\"\n            width={width}\n            height={height}\n            viewBox={`0 0 ${width} ${height}`}\n            ref={this.svgRef}>\n            <g id=\"zoom-wrapper\" ref={this.wrapperRef}>\n              <g\n                id=\"minimap-nodes\"\n                className=\"pipeline-minimap__nodes\"\n                ref={this.nodesRef}\n              />\n            </g>\n            <rect\n              className=\"pipeline-minimap__viewport\"\n              ref={this.viewportRef}\n            />\n          </svg>\n        </div>\n      </div>\n    );\n  }\n}\n\n// Map sizing constants\nconst padding = 32;\nconst height = 220;\nconst minWidth = 218;\nconst maxWidth = 1.5 * minWidth;\n\n/**\n * Convert pointer event name to a mouse event name if not supported\n */\nconst pointerEventName = event =>\n  window.PointerEvent\n    ? event\n    : event.replace('pointer', 'mouse').replace('Pointer', 'Mouse');\n\n/**\n * Gets the map sizing that fits the graph in state\n */\nconst getMapSize = state => {\n  const size = state.graph.size || {};\n  const graphWidth = size.width || 0;\n  const graphHeight = size.height || 0;\n\n  if (graphWidth > 0 && graphHeight > 0) {\n    // Constrain width\n    const scaledWidth = graphWidth * (height / graphHeight);\n    const width = Math.min(Math.max(scaledWidth, minWidth), maxWidth);\n\n    return { width, height };\n  }\n\n  // Use minimum size if no graph\n  return { width: minWidth, height: height };\n};\n\n// Maintain a single reference to support change detection\nconst emptyNodes = [];\nconst emptyGraphSize = {};\n\nexport const mapStateToProps = (state, ownProps) => ({\n  visible: state.visible.miniMap,\n  mapSize: getMapSize(state),\n  centralNode: getCentralNode(state),\n  chartSize: getChartSize(state),\n  chartZoom: getChartZoom(state),\n  graphSize: state.graph.size || emptyGraphSize,\n  nodes: state.graph.nodes || emptyNodes,\n  linkedNodes: getLinkedNodes(state),\n  nodeActive: getNodeActive(state),\n  nodeSelected: getNodeSelected(state),\n  textLabels: state.textLabels,\n  ...ownProps\n});\n\nexport const mapDispatchToProps = (dispatch, ownProps) => ({\n  onUpdateChartZoom: transform => {\n    dispatch(updateZoom(transform));\n  },\n  ...ownProps\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MiniMap);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport PipelineList from '../pipeline-list';\nimport TagList from '../tag-list';\nimport NodeList from '../node-list';\nimport PrimaryToolbar from '../primary-toolbar';\nimport MiniMapToolbar from '../minimap-toolbar';\nimport MiniMap from '../minimap';\nimport './sidebar.css';\n\n/**\n * Main app container. Handles showing/hiding the sidebar nav, and theme classes.\n * @param {Object} props visible\n */\nexport const Sidebar = ({ flags, visible }) => (\n  <>\n    <div\n      className={classnames('pipeline-sidebar', {\n        'pipeline-sidebar--visible': visible\n      })}>\n      <div className=\"pipeline-ui\">\n        {flags.pipelines && <PipelineList />}\n        <TagList />\n        <NodeList />\n      </div>\n      <nav className=\"pipeline-toolbar\">\n        <PrimaryToolbar />\n        <MiniMapToolbar />\n      </nav>\n      <MiniMap />\n    </div>\n  </>\n);\n\nconst mapStateToProps = state => ({\n  flags: state.flags,\n  visible: state.visible.sidebar\n});\n\nexport default connect(mapStateToProps)(Sidebar);\n","import downloadSvg, { downloadPng } from 'svg-crowbar';\n\n/**\n * Handle onClick for the SVG/PNG download button\n * @param {string} format Must be 'svg' or 'png'\n * @param {string} theme light/dark theme\n * @param {Object} graphSize Graph width/height/margin\n * @param {function} mockFn Mock testing function stand-in for svg-crowbar\n * @return {Function} onClick handler\n */\nconst exportGraph = ({ format, theme, graphSize, mockFn }) => {\n  const downloadFormats = {\n    png: downloadPng,\n    svg: downloadSvg\n  };\n  const download = mockFn || downloadFormats[format];\n\n  // Create clone of graph SVG to avoid breaking the original\n  const svg = document.querySelector('#pipeline-graph');\n  const clone = svg.parentNode.appendChild(svg.cloneNode(true));\n  clone.classList.add('kedro', `kui-theme--${theme}`, 'pipeline-graph--export');\n\n  // Reset zoom/translate\n  let width = graphSize.width + graphSize.marginx * 2;\n  let height = graphSize.height + graphSize.marginy * 2;\n  clone.setAttribute('viewBox', `0 0 ${width} ${height}`);\n  clone.querySelector('#zoom-wrapper').removeAttribute('transform');\n\n  // Impose a maximum size on PNGs because otherwise they break when downloading\n  if (format === 'png') {\n    const maxWidth = 5000;\n    width = Math.min(width, maxWidth);\n    height = Math.min(height, maxWidth * (height / width));\n  }\n  clone.setAttribute('width', width);\n  clone.setAttribute('height', height);\n\n  const style = document.createElement('style');\n  if (format === 'svg') {\n    // Add webfont\n    style.innerHTML =\n      '@import url(https://fonts.googleapis.com/css?family=Titillium+Web:400);';\n  } else {\n    // Add websafe fallback font\n    style.innerHTML = `.kedro {\n      font-family: \"Trebuchet MS\", \"Lucida Grande\", \"Lucida Sans Unicode\", \"Lucida Sans\", Tahoma, sans-serif;\n      letter-spacing: -0.4px;\n    }`;\n  }\n  clone.prepend(style);\n\n  // Download SVG/PNG\n  download(clone, 'kedro-pipeline', { css: 'internal' });\n\n  // Delete cloned SVG\n  svg.parentNode.removeChild(clone);\n};\n\nexport default exportGraph;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Modal from '@quantumblack/kedro-ui/lib/components/modal';\nimport Button from '@quantumblack/kedro-ui/lib/components/button';\nimport { toggleExportModal } from '../../actions';\nimport exportGraph from './export-graph';\nimport './export-modal.css';\n\n/**\n * Kedro-UI modal to allow users to choose between SVG/PNG export formats\n */\nconst ExportModal = ({ graphSize, theme, onToggle, visible }) => {\n  if (!visible.exportBtn) {\n    return null;\n  }\n  return (\n    <Modal\n      title=\"Export pipeline visualisation\"\n      onClose={() => onToggle(false)}\n      theme={theme}\n      visible={visible.exportModal}>\n      <div className=\"pipeline-icon-modal\">\n        <Button\n          theme={theme}\n          onClick={() => {\n            exportGraph({ format: 'png', theme, graphSize });\n            onToggle(false);\n          }}>\n          Download PNG\n        </Button>\n        <Button\n          theme={theme}\n          onClick={() => {\n            exportGraph({ format: 'svg', theme, graphSize });\n            onToggle(false);\n          }}>\n          Download SVG\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport const mapStateToProps = state => ({\n  graphSize: state.graph.size || {},\n  visible: state.visible,\n  theme: state.theme\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  onToggle: value => {\n    dispatch(toggleExportModal(value));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExportModal);\n","import React from 'react';\nimport classnames from 'classnames';\nimport './loading.css';\n\nconst d =\n  'M11.4 90.3q-1.4-2.4 0-4.7l42.3-73.3q1.3-2.3 4-2.3h84.6q2.7 0 4 2.3l42.4 73.3q1.3 2.3 0 4.7l-42.3 73.2q-1.4 2.4-4.1 2.4H57.7q-2.7 0-4-2.4z';\n\nexport default ({ className, visible }) => (\n  <svg\n    className={classnames(className, 'pipeline-loading-icon', {\n      'pipeline-loading-icon--visible': visible\n    })}\n    viewBox=\"0 0 200 180\">\n    <path d={d} />\n    <path d={d} />\n  </svg>\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport FlowChart from '../flowchart';\nimport Sidebar from '../sidebar';\nimport ExportModal from '../export-modal';\nimport LoadingIcon from '../icons/loading';\nimport './wrapper.css';\n\n/**\n * Main app container. Handles showing/hiding the sidebar nav, and theme classes.\n */\nexport const Wrapper = ({ loading, theme }) => (\n  <div\n    className={classnames('kedro-pipeline', {\n      'kui-theme--dark': theme === 'dark',\n      'kui-theme--light': theme === 'light'\n    })}>\n    <Sidebar />\n    <div className=\"pipeline-wrapper\">\n      <FlowChart />\n      <LoadingIcon className=\"pipeline-wrapper__loading\" visible={loading} />\n    </div>\n    <ExportModal />\n  </div>\n);\n\nexport const mapStateToProps = state => ({\n  loading: state.graph.loading,\n  theme: state.theme\n});\n\nexport default connect(mapStateToProps)(Wrapper);\n","import { arrayToObject } from '../utils';\n\n/**\n * Create new default pipeline state instance\n * @return {object} state\n */\nexport const createInitialPipelineState = () => ({\n  id: null,\n  pipeline: {\n    ids: [],\n    name: {},\n    default: null,\n    active: null\n  },\n  node: {\n    ids: [],\n    name: {},\n    fullName: {},\n    type: {},\n    isParam: {},\n    tags: {},\n    layer: {},\n    disabled: {},\n    pipelines: {},\n    clicked: null,\n    hovered: null\n  },\n  nodeType: {\n    ids: ['task', 'data', 'parameters'],\n    name: {\n      data: 'Datasets',\n      task: 'Nodes',\n      parameters: 'Parameters'\n    },\n    disabled: {}\n  },\n  edge: {\n    ids: [],\n    sources: {},\n    targets: {}\n  },\n  layer: {\n    ids: [],\n    name: {},\n    visible: true\n  },\n  tag: {\n    ids: [],\n    name: {},\n    active: {},\n    enabled: {}\n  }\n});\n\n/**\n * Check whether data is in expected format\n * @param {Object} data - The parsed data input\n * @return {Boolean} True if valid for formatting\n */\nconst validateInput = data => {\n  if (!data) {\n    throw new Error('No data provided to Kedro-Viz');\n  }\n  if (data === 'json') {\n    // Data is still loading\n    return false;\n  }\n  if (!Array.isArray(data.edges) || !Array.isArray(data.nodes)) {\n    if (typeof jest === 'undefined') {\n      console.error('Invalid Kedro-Viz data:', data);\n    }\n    throw new Error(\n      'Invalid Kedro-Viz data input. Please ensure that your pipeline data includes arrays of nodes and edges'\n    );\n  }\n  return true;\n};\n\n/**\n * Get unique, reproducible ID for each edge, based on its nodes\n * @param {Object} source - Name and type of the source node\n * @param {Object} target - Name and type of the target node\n */\nconst createEdgeID = (source, target) => [source, target].join('|');\n\n/**\n * Add a new pipeline\n * @param {string} pipeline.id - Unique ID\n * @param {string} pipeline.name - Pipeline name\n */\nconst addPipeline = state => pipeline => {\n  const { id } = pipeline;\n  if (state.pipeline.name[id]) {\n    return;\n  }\n  state.pipeline.ids.push(id);\n  state.pipeline.name[id] = pipeline.name;\n};\n\n/**\n * Add a new node if it doesn't already exist\n * @param {string} name - Default node name\n * @param {string} type - 'data' or 'task'\n * @param {Array} tags - List of associated tags\n */\nconst addNode = state => node => {\n  const { id } = node;\n  if (state.node.name[id]) {\n    return;\n  }\n  state.node.ids.push(id);\n  state.node.name[id] = node.name;\n  state.node.fullName[id] = node.full_name || node.name;\n  state.node.type[id] = node.type;\n  state.node.layer[id] = node.layer;\n  state.node.pipelines[id] = node.pipelines\n    ? arrayToObject(node.pipelines, () => true)\n    : {};\n  state.node.isParam[id] = node.type === 'parameters';\n  state.node.tags[id] = node.tags || [];\n};\n\n/**\n * Create a new link between two nodes and add it to the edges array\n * @param {Object} source - Parent node\n * @param {Object} target - Child node\n */\nconst addEdge = state => ({ source, target }) => {\n  const id = createEdgeID(source, target);\n  if (state.edge.ids.includes(id)) {\n    return;\n  }\n  state.edge.ids.push(id);\n  state.edge.sources[id] = source;\n  state.edge.targets[id] = target;\n};\n\n/**\n * Add a new Tag if it doesn't already exist\n * @param {Object} tag - Tag object\n */\nconst addTag = state => tag => {\n  const { id } = tag;\n  state.tag.ids.push(id);\n  state.tag.name[id] = tag.name;\n};\n\n/**\n * Add a new Layer if it doesn't already exist\n * @param {Object} layer - Layer object\n */\nconst addLayer = state => layer => {\n  // using layer name as both layerId and name.\n  // It futureproofs it if we need a separate layer ID in the future.\n  state.layer.ids.push(layer);\n  state.layer.name[layer] = layer;\n};\n\n/**\n * Convert the pipeline data into a normalized state object\n * @param {Object} data Raw unformatted data input\n * @return {Object} Formatted, normalized state\n */\nconst normalizeData = data => {\n  const state = createInitialPipelineState();\n\n  if (!validateInput(data)) {\n    return state;\n  }\n\n  if (data.schema_id) {\n    state.id = data.schema_id;\n  }\n  data.nodes.forEach(addNode(state));\n  data.edges.forEach(addEdge(state));\n  if (data.pipelines) {\n    data.pipelines.forEach(addPipeline(state));\n    if (state.pipeline.ids.length) {\n      state.pipeline.default = data.selected_pipeline || state.pipeline.ids[0];\n      state.pipeline.active = state.pipeline.default;\n    }\n  }\n  if (data.tags) {\n    data.tags.forEach(addTag(state));\n  }\n  if (data.layers) {\n    data.layers.forEach(addLayer(state));\n  }\n\n  return state;\n};\n\nexport default normalizeData;\n","import { flags as flagsConfig } from '../config';\n\n/**\n * Flag definitions\n */\nexport const Flags = {\n  /**\n   * Returns `true` if the flag is defined otherwise `false`\n   * @param {string} name The flag name to test\n   * @returns {boolean} The result\n   */\n  isDefined: name => Flags.names().includes(name),\n\n  /**\n   * Returns an array of defined flag names\n   * @returns {array} The defined flag names\n   */\n  names: () => Object.keys(flagsConfig),\n\n  /**\n   * Returns an object mapping flag names to their default values\n   * @returns {object} The defined flag defaults\n   */\n  defaults: () =>\n    Flags.names().reduce(\n      (result, flag) =>\n        Object.assign(result, { [flag]: flagsConfig[flag].default }),\n      {}\n    )\n};\n\n/**\n * Returns an object with flags as set in given or current URL\n * @param {string=} url The URL (optional, default current location)\n * @returns {object} An object with flags and their values\n */\nexport const getFlagsFromUrl = url => {\n  const flags = {};\n\n  let urlParams;\n  try {\n    urlParams = new URL(url || document.location.href).searchParams;\n  } catch (e) {\n    console.warn('Feature flags are not supported in this browser');\n    return flags;\n  }\n\n  [...urlParams].forEach(([name, value]) =>\n    Flags.isDefined(name)\n      ? (flags[name] = value === 'true' || value === '1' || value === '')\n      : null\n  );\n\n  return flags;\n};\n\n/**\n * Returns a user info message describing the status of all defined flags\n * @param {object} flagsEnabled An object mapping of flag status\n * @returns {string} The info message\n */\nexport const getFlagsMessage = flagsEnabled => {\n  const allNames = Flags.names();\n\n  if (allNames.length > 0) {\n    let info = 'Experimental features 🏄‍♂️\\n';\n\n    allNames.forEach(name => {\n      const isEnabled = flagsEnabled[name];\n      const status = isEnabled ? 'Enabled' : 'Disabled';\n      const statusIcon = isEnabled ? '🟢' : '⚪️';\n      const icon = flagsConfig[name].icon;\n      const description = flagsConfig[name].description;\n      info += `\\n${statusIcon} ${icon} \"${name}\" · ${description} · ${status}`;\n    });\n\n    info += `\\n\\nSee docs on flags for more info 📖`;\n    info += `\\nhttps://github.com/quantumblacklabs/kedro-viz#flags`;\n\n    return info;\n  }\n};\n","import deepmerge from 'deepmerge';\nimport { loadState } from './helpers';\nimport normalizeData from './normalize-data';\nimport { getFlagsFromUrl, Flags } from '../utils/flags';\n\n/**\n * Create new default state instance for properties that aren't overridden\n * when the pipeline is reset with new data via the App component's data prop\n * @return {object} state\n */\nexport const createInitialState = () => ({\n  chartSize: {},\n  flags: Flags.defaults(),\n  textLabels: true,\n  theme: 'dark',\n  visible: {\n    labelBtn: true,\n    layerBtn: true,\n    exportBtn: true,\n    exportModal: false,\n    sidebar: true,\n    themeBtn: true,\n    miniMapBtn: true,\n    miniMap: true\n  },\n  zoom: {}\n});\n\n/**\n * Load values from localStorage and combine with existing state,\n * but filter out any unused values from localStorage\n * @param {object} state Initial/extant state\n * @return {object} Combined state from localStorage\n */\nexport const mergeLocalStorage = state => {\n  const localStorageState = loadState();\n  Object.keys(localStorageState).forEach(key => {\n    if (!state[key]) {\n      delete localStorageState[key];\n    }\n  });\n  return deepmerge(state, localStorageState);\n};\n\n/**\n * Prepare the pipeline data part of the state. This part is separated so that it\n * can be reset without overriding user settings.\n * @param {object} props Props passed to App component\n */\nexport const preparePipelineState = props => {\n  // Normalize raw data, and apply saved state from localStorage\n  const state = mergeLocalStorage(normalizeData(props.data));\n  // Use first pipeline in list if active pipeline from localStorage isn't recognised\n  if (!state.pipeline.ids.includes(state.pipeline.active)) {\n    state.pipeline.active = state.pipeline.default;\n  }\n  return state;\n};\n\n/**\n * Prepare the non-pipeline data part of the state. This part is separated so that it\n * will persist if the pipeline data is reset.\n * Merge local storage and add custom state overrides from props etc\n * @param {object} props Props passed to App component\n */\nexport const prepareNonPipelineState = props => {\n  const state = mergeLocalStorage(createInitialState());\n  // Override flag defaults with URL values (on page load only)\n  state.flags = Object.assign({}, state.flags, getFlagsFromUrl());\n  // Override theme if set in props\n  if (props.theme) {\n    state.theme = props.theme;\n  }\n  // Override button visibility if set in props\n  if (props.visible) {\n    state.visible = Object.assign({}, state.visible, props.visible);\n  }\n  return state;\n};\n\n/**\n * Configure the redux store's initial state, by merging default values\n * with normalised pipeline data and localStorage\n * @param {Object} props App component props\n * @return {Object} Initial state\n */\nconst getInitialState = (props = {}) => {\n  // Perform 2 deepmerges seperately because it performs much faster\n  const state = deepmerge(\n    prepareNonPipelineState(props),\n    preparePipelineState(props)\n  );\n  // Reset active pipeline if pipelines are disabled\n  // TODO: Delete this when removing flags.pipeline\n  if (!state.flags.pipelines) {\n    state.pipeline.active = null;\n  }\n  return state;\n};\n\nexport default getInitialState;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport configureStore from '../../store';\nimport { resetData, updateFontLoaded } from '../../actions';\nimport checkFontLoaded from '../../actions/check-font-loaded';\nimport Wrapper from '../wrapper';\nimport getInitialState, {\n  preparePipelineState\n} from '../../store/initial-state';\nimport { getFlagsMessage } from '../../utils/flags';\nimport '@quantumblack/kedro-ui/lib/styles/app.css';\nimport './app.css';\n\n/**\n * Main wrapper component. Intialises the Redux store\n */\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    const initialState = getInitialState(props);\n    this.store = configureStore(initialState);\n    this.announceFlags(initialState.flags);\n  }\n\n  componentDidMount() {\n    this.checkWebFontLoading();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.data !== this.props.data) {\n      this.updatePipelineData();\n    }\n  }\n\n  /**\n   * Shows a console message regarding the given flags\n   */\n  announceFlags(flags) {\n    const message = getFlagsMessage(flags);\n\n    if (message && typeof jest === 'undefined') {\n      console.info(message);\n    }\n  }\n\n  /**\n   * Dispatch an action once the webfont has loaded\n   */\n  checkWebFontLoading() {\n    checkFontLoaded().then(() => {\n      this.store.dispatch(updateFontLoaded(true));\n    });\n  }\n\n  /**\n   * Dispatch an action to update the store with new pipeline data\n   */\n  updatePipelineData() {\n    const newState = preparePipelineState(this.props);\n    this.store.dispatch(resetData(newState));\n  }\n\n  render() {\n    return this.props.data ? (\n      <Provider store={this.store}>\n        <Wrapper />\n      </Provider>\n    ) : null;\n  }\n}\n\nApp.propTypes = {\n  /**\n   * Determines what pipeline data will be displayed on the chart.\n   * You can supply an object containing lists of edges, nodes, tags -\n   * See /src/utils/data for examples of the expected data format.\n   * Alternatively, the string 'json' indicates that data is being\n   * loaded asynchronously from /public/api/nodes.json\n   */\n  data: PropTypes.oneOfType([\n    PropTypes.oneOf(['json']),\n    PropTypes.shape({\n      schema_id: PropTypes.string,\n      edges: PropTypes.array.isRequired,\n      layers: PropTypes.array,\n      nodes: PropTypes.array.isRequired,\n      tags: PropTypes.array\n    })\n  ]),\n  /**\n   * Specify the theme: Either 'light' or 'dark'.\n   * If set, this will override the localStorage value.\n   */\n  theme: PropTypes.oneOf(['dark', 'light']),\n  /**\n   * Override visibility of various features, e.g. icon buttons\n   */\n  visible: PropTypes.shape({\n    labelBtn: PropTypes.bool,\n    layerBtn: PropTypes.bool,\n    exportBtn: PropTypes.bool,\n    sidebar: PropTypes.bool,\n    themeBtn: PropTypes.bool\n  })\n};\n\nexport default App;\n","import React from 'react';\nimport KonamiCode from 'konami-code';\nimport './easter-egg.css';\nimport mp3 from './brodyquest.mp3';\nimport img from './easter-egg.png';\n\n/**\n * Konami code Easter Egg component\n */\nclass EasterEgg extends React.Component {\n  /**\n   * Create new APP\n   * @param {object} props\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      play: false\n    };\n    if (typeof jest === 'undefined') {\n      console.info('Konami code is supported');\n    }\n\n    this.audio = new Audio(mp3);\n    this.audio.loop = true;\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  /**\n   * Called when mounted to view\n   */\n  componentDidMount() {\n    const konami = new KonamiCode();\n    konami.listen(this.toggleState.bind(this));\n    document.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  /**\n   * Triggered when component state updates\n   */\n  componentDidUpdate() {\n    this.toggleAudio();\n    this.toggleCSS();\n  }\n\n  /**\n   * Called just before component is removed from the view\n   */\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyDown);\n    document.body.classList.remove('easter-theme');\n  }\n\n  /**\n   * Handle keyboard interaction\n   * @param {Event} e\n   */\n  handleKeyDown(e) {\n    const escape = e.keyCode === 27;\n    if (escape && this.state.play) {\n      this.setState({\n        play: false\n      });\n    }\n  }\n\n  /**\n   * Toggle play state on/off\n   */\n  toggleState() {\n    this.setState({ play: !this.state.play });\n  }\n\n  /**\n   * Play/Pause the mp3\n   */\n  toggleAudio() {\n    if (this.state.play) {\n      this.audio.play();\n    } else {\n      this.audio.pause();\n    }\n  }\n\n  /**\n   * Play/Pause the mp3\n   */\n  toggleCSS() {\n    if (this.state.play) {\n      document.body.classList.add('easter-theme');\n    } else {\n      document.body.classList.remove('easter-theme');\n    }\n  }\n\n  /**\n   * Render the component\n   * @return {ReactElement}\n   */\n  render() {\n    const { play } = this.state;\n    if (!play) {\n      return null;\n    }\n    return (\n      <div className=\"easter-egg\">\n        <img src={img} alt=\"\" width=\"500\" height=\"480\" />\n      </div>\n    );\n  }\n}\n\nexport default EasterEgg;\n","import seedrandom from 'seedrandom';\n\n/**\n * Generate a pseudo-random UUID\n * via https://stackoverflow.com/a/1349426/1651713\n * @param {number} length Hash/ID length\n * @return string\n */\nexport const generateHash = length => {\n  const result = [];\n  const characters =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  for (let i = 0; i < length; i++) {\n    result.push(\n      characters.charAt(Math.floor(Math.random() * characters.length))\n    );\n  }\n  return result.join('');\n};\n\n/**\n * Seed data with a random hash, allowing it to be reproduced.\n * If the URL searchParams contain a 'seed' key then use its value,\n * else create a new one, and make it available via the console.\n */\nexport const getSeedFromURL = () => {\n  let url;\n  let seed;\n  try {\n    url = new URL(document.location.href);\n    seed = url.searchParams.get('seed');\n  } catch (e) {\n    console.warn('Random data seeding is not supported in this browser');\n    return;\n  }\n  if (!seed) {\n    seed = generateHash(30);\n    url.searchParams.set('seed', seed);\n  }\n  if (typeof jest === 'undefined') {\n    console.info(\n      `%cRandom data seed: ${seed}\\nTo reuse this layout, visit ${url.toString()}`,\n      'font-weight: bold'\n    );\n  }\n  return seed;\n};\n\n// Set up seeded random number generator:\nconst seed = getSeedFromURL();\nexport const random = seedrandom(seed);\n\n/**\n * Get an array of numbers\n * @param {number} n Length of the array\n */\nexport const getNumberArray = n => Array.from(Array(n).keys());\n\n/**\n * Get a random number between 0 to n-1, inclusive\n * @param {number} n Max number\n */\nexport const randomIndex = n => Math.floor(random() * n);\n\n/**\n * Get a random number between 1 to n, inclusive\n * @param {number} n Max number\n */\nexport const randomNumber = n => Math.ceil(random() * n);\n\n/**\n * Get a random number between min and max, inclusive\n * @param {number} (min) Min number\n * @param {number} (max) Max number\n */\nexport const randomNumberBetween = (min, max) => randomNumber(max - min) + min;\n\n/**\n * Get a random datum from an array\n * @param {Array} range The array to select a random item from\n */\nexport const getRandom = range => range[randomIndex(range.length)];\n\nexport const LOREM_IPSUM = 'lorem ipsum dolor sit amet consectetur adipiscing elit vestibulum id turpis nunc nulla vitae diam dignissim fermentum elit sit amet viverra libero quisque condimentum pellentesque convallis sed consequat neque ac rhoncus finibus'.split(\n  ' '\n);\n\n/**\n * Generate a random latin name\n * @param {number} n Number of words in the name\n * @param {string} join The character(s) used to join each word\n */\nexport const getRandomName = (n, join = '_') =>\n  getNumberArray(n)\n    .map(() => getRandom(LOREM_IPSUM))\n    .join(join);\n\n/**\n * Randomly select a certain number (n) of items from an array (arr).\n * via https://stackoverflow.com/a/19270021/1651713\n * @param {array} arr List from which to choose\n * @param {number} n Number of items to select\n */\nexport const getRandomSelection = (arr, n) => {\n  const result = new Array(n);\n  let len = arr.length;\n  const taken = new Array(len);\n  if (n > len) {\n    return arr;\n  }\n  while (n--) {\n    var x = Math.floor(random() * len);\n    result[n] = arr[x in taken ? taken[x] : x];\n    taken[x] = --len in taken ? taken[len] : len;\n  }\n  return result;\n};\n","import batchingToposort from 'batching-toposort';\n\nimport { arrayToObject, unique } from './index';\nimport {\n  getNumberArray,\n  random,\n  randomIndex,\n  randomNumber,\n  randomNumberBetween,\n  getRandom,\n  getRandomName,\n  getRandomSelection\n} from './random-utils';\n\n//--- Config variables ---//\n\nconst MAX_EDGE_COUNT = 200;\nconst MIN_EDGE_COUNT = 100;\nconst MAX_RANK_COUNT = 50;\nconst MIN_RANK_COUNT = 10;\nconst MAX_RANK_NODE_COUNT = 10;\nconst MIN_RANK_NODE_COUNT = 1;\nconst MIN_NODE_DEGREE = 2;\nconst MAX_NODE_TAG_COUNT = 5;\nconst MAX_TAG_COUNT = 20;\nconst PARAMETERS_FREQUENCY = 0.2;\nconst MIN_PIPELINES_COUNT = 2;\nconst MAX_PIPELINES_COUNT = 15;\nconst LAYERS = [\n  'Raw',\n  'Intermediate',\n  'Primary',\n  'Feature',\n  'Model Input',\n  'Model Output'\n];\n\n/**\n * Generate a random pipeline dataset\n */\nclass Pipeline {\n  constructor() {\n    this.pipelines = this.generatePipelines();\n    this.rankCount = this.getRankCount();\n    this.rankLayers = this.getRankLayers();\n    this.tags = this.generateTags();\n    this.nodes = this.generateNodes();\n    this.edges = this.generateEdges();\n\n    this.update();\n    this.finalise();\n  }\n\n  /**\n   * Create the pipelines aray\n   * @returns {number} Rank count total\n   */\n  generatePipelines() {\n    const pipelines = ['Default'];\n    const pipelineCount = randomNumberBetween(\n      MIN_PIPELINES_COUNT,\n      MAX_PIPELINES_COUNT\n    );\n    for (let i = 1; i < pipelineCount; i++) {\n      pipelines.push(getRandomName(randomNumber(4), ' '));\n    }\n    return pipelines.filter(unique);\n  }\n\n  /**\n   * Get the number of ranks (i.e. horizontal bands)\n   * Odd ranks are data, even are task\n   * @returns {number} Rank count total\n   */\n  getRankCount() {\n    let rankCount = randomNumberBetween(MIN_RANK_COUNT, MAX_RANK_COUNT);\n    // Ensure odd numbers only, so that we start and end with a data node\n    if (!rankCount % 2) {\n      rankCount += 1;\n    }\n    return rankCount;\n  }\n\n  /**\n   * Randomly determine the layer for each rank\n   * @returns {object} Layers by rank\n   */\n  getRankLayers() {\n    const layerSize = arrayToObject(LAYERS, () => 0);\n    // Randomly decide the number of ranks in each layer\n    for (let i = 0; i < this.rankCount; i++) {\n      layerSize[getRandom(LAYERS)]++;\n    }\n    // Assign layers to ranks based on layerSize\n    const rankLayers = {};\n    for (let rank = 0, layer = 0; rank < this.rankCount; rank++) {\n      while (layerSize[LAYERS[layer]] < 1) {\n        layer++;\n      }\n      rankLayers[rank] = LAYERS[layer];\n      layerSize[LAYERS[layer]]--;\n    }\n    return rankLayers;\n  }\n\n  /**\n   * Generate a random list of tags\n   * @returns {array} Tag name strings\n   */\n  generateTags() {\n    const tagCount = randomNumber(MAX_TAG_COUNT);\n    return getNumberArray(tagCount)\n      .map(() => getRandomName(randomNumber(MAX_NODE_TAG_COUNT)))\n      .filter(unique);\n  }\n\n  /**\n   * Create list of nodes\n   * @returns {array} List of node objects\n   */\n  generateNodes() {\n    const nodes = [];\n    for (let rank = 0; rank < this.rankCount; rank++) {\n      const rankNodeCount = this.getRankNodeCount(rank);\n      for (let i = 0; i < rankNodeCount; i++) {\n        const node = this.createNode(i, rank);\n        nodes.push(node);\n      }\n    }\n    return nodes;\n  }\n\n  /**\n   * Return a random count of nodes for a rank\n   * @returns {number} rank node count\n   */\n  getRankNodeCount() {\n    return Math.min(MIN_RANK_NODE_COUNT / random(), MAX_RANK_NODE_COUNT);\n  }\n\n  /**\n   * Determine a node's type based on its rank\n   * @param {number} rank Rank number\n   * @returns {string} Node type (task/data/parameters)\n   */\n  getType(node) {\n    if (node.rank % 2) {\n      return 'task';\n    }\n\n    if (node._sources.length === 0 && random() < PARAMETERS_FREQUENCY) {\n      return 'parameters';\n    }\n\n    return 'data';\n  }\n\n  /**\n   * Create a node datum object.\n   * @param {number} i Node index within its rank\n   * @param {number} initialRank Rank index\n   * @returns {object} Node object\n   */\n  createNode(i, initialRank) {\n    const layer = this.rankLayers[initialRank];\n    const node = {\n      id: `${layer}_${initialRank}_${i}`,\n      name: null,\n      full_name: null,\n      type: null,\n      rank: initialRank,\n      layer: layer,\n      pipelines: this.getNodePipelines(),\n      tags: this.getRandomTags(),\n      _sources: [],\n      _targets: []\n    };\n    return node;\n  }\n\n  /**\n   * Create a new node name of up to 10 words\n   * @param {string} Node type (task/data/parameters)\n   * @returns {string} Node name\n   */\n  getNodeName(type) {\n    const name = getRandomName(randomNumber(10), ' ');\n    return type === 'parameters' ? `Parameters ${name}` : name;\n  }\n\n  /**\n   * Create a list of the pipelines that the node will be included in\n   * @returns {array} Node piplines\n   */\n  getNodePipelines() {\n    return this.pipelines.reduce((pipelines, id, i) => {\n      if (i === 0 || randomIndex(2)) {\n        return pipelines.concat(id);\n      }\n      return pipelines;\n    }, []);\n  }\n\n  /**\n   * Select a random number of tags from the list of tags\n   * @returns {array} List of tags\n   */\n  getRandomTags() {\n    return getRandomSelection(this.tags, randomNumber(this.tags.length));\n  }\n\n  /**\n   * Gets a map of ranks to lists of nodes at that rank\n   * @returns {array} List of nodes\n   */\n  getNodesByRank() {\n    const nodesByRank = {};\n\n    for (const node of this.nodes) {\n      nodesByRank[node.rank] = nodesByRank[node.rank] || [];\n      nodesByRank[node.rank].push(node);\n    }\n\n    return nodesByRank;\n  }\n\n  /**\n   * Create list of edges\n   * @returns {array} Edge objects\n   */\n  generateEdges() {\n    const edges = [];\n    const edgeCount = randomNumberBetween(MIN_EDGE_COUNT, MAX_EDGE_COUNT);\n    const nodesByRank = this.getNodesByRank();\n\n    // Find the sorted list of node ranks\n    const ranks = Object.keys(nodesByRank)\n      .map(rank => parseFloat(rank))\n      .sort((a, b) => a - b);\n\n    // Gets a random node with the given rank index\n    const getRandomNodeAtRank = rankIndex => {\n      const rankValue = ranks[rankIndex];\n      const rankNodes = nodesByRank[rankValue];\n      const rankNodeIndex = randomIndex(rankNodes.length);\n      return rankNodes[rankNodeIndex];\n    };\n\n    // For the desired amount of edges\n    for (let i = 0; i < edgeCount; i += 1) {\n      // Choose a random source node excluding the last rank\n      const sourceRankIndex = randomIndex(ranks.length - 1);\n      const source = getRandomNodeAtRank(sourceRankIndex);\n\n      // Choose a random target node after the source rank prefering nearby\n      const remainingRankCount = ranks.length - 1 - sourceRankIndex;\n      const biasedRandom = Math.round(0.5 / random());\n      const targetRankIndex =\n        sourceRankIndex + Math.min(biasedRandom, remainingRankCount);\n      const target = getRandomNodeAtRank(targetRankIndex);\n\n      // Build the edge\n      const edge = {\n        source: source.id,\n        target: target.id,\n        _sourceNode: source,\n        _targetNode: target\n      };\n\n      edges.push(edge);\n\n      // Keep track of edges on nodes for later convenience\n      source._targets.push(edge);\n      target._sources.push(edge);\n    }\n\n    return edges;\n  }\n\n  /**\n   * Select only nodes with at least the minimum required connected nodes\n   * @returns {object} Filtered nodes\n   */\n  activeNodes() {\n    const nodes = {};\n\n    // Gets the total number of edges for the given node\n    const degree = node => node._sources.length + node._targets.length;\n\n    for (const edge of this.edges) {\n      // Keep both nodes if they have enough combined connections\n      if (\n        degree(edge._sourceNode) + degree(edge._targetNode) >\n        MIN_NODE_DEGREE\n      ) {\n        nodes[edge._sourceNode.id] = edge._sourceNode;\n        nodes[edge._targetNode.id] = edge._targetNode;\n      }\n    }\n\n    return Object.values(nodes);\n  }\n\n  /**\n   * Select only used tags\n   * @returns {object} Filtered tags\n   */\n  activeTags() {\n    return this.nodes\n      .reduce((tags, node) => (node.tags ? tags.concat(node.tags) : tags), [])\n      .filter(unique)\n      .map(tag => ({ name: tag, id: tag }));\n  }\n\n  /**\n   * Select only used edges\n   * @returns {object} Filtered edges\n   */\n  activeEdges() {\n    const visibleNodes = arrayToObject(\n      this.nodes.map(node => node.id),\n      () => true\n    );\n\n    return this.edges.filter(\n      edge => visibleNodes[edge.target] && visibleNodes[edge.source]\n    );\n  }\n\n  /**\n   * Updates node properties including rank, type and name based on the current graph\n   */\n  update() {\n    const graph = {};\n\n    for (const node of this.nodes) {\n      graph[node.id] = [];\n    }\n\n    for (const edge of this.edges) {\n      graph[edge.source].push(edge.target);\n    }\n\n    // Use toposort to find actual ranks\n    const sortedNodes = batchingToposort(graph);\n\n    for (let rank = 0; rank < sortedNodes.length; rank++) {\n      for (const id of sortedNodes[rank]) {\n        const node = this.nodes.find(node => node.id === id);\n        node.rank = rank;\n        node.type = this.getType(node);\n        node.name = this.getNodeName(node.type);\n        node.full_name = `${node.layer}_${node.type}_${node.rank}_${\n          node.name\n        }`.replace(/\\s/g, '_');\n      }\n    }\n  }\n\n  /**\n   * Removes unused elements and cleans up temporary properties\n   */\n  finalise() {\n    this.nodes = this.activeNodes();\n    this.tags = this.activeTags();\n    this.edges = this.activeEdges();\n\n    for (const node of this.nodes) {\n      delete node._sources;\n      delete node._targets;\n    }\n\n    for (const edge of this.edges) {\n      delete edge._targetNode;\n      delete edge._sourceNode;\n    }\n  }\n\n  /**\n   * Gets the complete pipeline data\n   * @returns {object} The pipeline data\n   */\n  all() {\n    return {\n      edges: this.edges,\n      layers: LAYERS,\n      nodes: this.nodes,\n      pipelines: this.pipelines.map(name => ({ id: name, name })),\n      tags: this.tags\n    };\n  }\n}\n\nconst generateRandomPipeline = () => new Pipeline().all();\n\nexport default generateRandomPipeline;\n","export default {\n  schema_id: '09876543210987654321',\n  selected_pipeline: '__default__',\n  pipelines: [\n    {\n      id: 'de',\n      name: 'Data engineering'\n    },\n    {\n      id: 'ds',\n      name: 'Data science'\n    },\n    {\n      id: '__default__',\n      name: 'Default'\n    },\n    {\n      id: 'empty',\n      name: 'Empty pipeline'\n    }\n  ],\n  layers: [\n    'Raw',\n    'Intermediate',\n    'Primary',\n    'Feature',\n    'Model Input',\n    'Model Output'\n  ],\n  tags: [\n    {\n      id: 'small',\n      name: 'small'\n    },\n    {\n      id: 'medium',\n      name: 'medium'\n    },\n    {\n      id: 'large',\n      name: 'large'\n    },\n    {\n      id: 'huge',\n      name: 'huge'\n    }\n  ],\n  nodes: [\n    {\n      id: 'task/salmon',\n      name: 'salmon',\n      full_name: 'salmon',\n      tags: ['small'],\n      layer: 'Intermediate',\n      pipelines: ['__default__', 'de'],\n      type: 'task'\n    },\n    {\n      id: 'task/shark',\n      name: 'shark',\n      full_name: 'shark',\n      tags: ['medium', 'large'],\n      layer: 'Intermediate',\n      pipelines: ['__default__', 'de'],\n      type: 'task'\n    },\n    {\n      id: 'task/trout',\n      name: 'trout',\n      full_name: 'trout',\n      tags: ['small'],\n      layer: 'Model Input',\n      pipelines: ['__default__', 'ds'],\n      type: 'task'\n    },\n    {\n      id: 'data/whale',\n      name: 'whale',\n      full_name: 'whale',\n      tags: ['large', 'huge'],\n      layer: 'Model Output',\n      pipelines: ['__default__', 'ds'],\n      type: 'data'\n    },\n    {\n      id: 'data/dog',\n      name: 'dog',\n      full_name: 'dog',\n      tags: ['small', 'medium'],\n      layer: 'Raw',\n      pipelines: ['__default__', 'de'],\n      type: 'data'\n    },\n    {\n      id: 'data/cat',\n      name: 'cat',\n      full_name: 'cat',\n      tags: ['small', 'medium', 'large'],\n      layer: 'Raw',\n      pipelines: ['__default__', 'de'],\n      type: 'data'\n    },\n    {\n      id: 'data/parameters_rabbit',\n      name: 'parameters_rabbit',\n      full_name: 'parameters_rabbit',\n      tags: ['small'],\n      layer: 'Intermediate',\n      pipelines: ['__default__', 'de'],\n      type: 'parameters'\n    },\n    {\n      id: 'data/parameters',\n      name: 'parameters',\n      full_name: 'parameters',\n      tags: [],\n      layer: 'Intermediate',\n      pipelines: ['__default__', 'de'],\n      type: 'parameters'\n    },\n    {\n      id: 'data/sheep',\n      name: 'sheep',\n      full_name: 'sheep',\n      tags: ['medium'],\n      layer: 'Primary',\n      pipelines: ['__default__', 'de'],\n      type: 'data'\n    },\n    {\n      id: 'data/horse',\n      name: 'horse',\n      full_name: 'horse',\n      tags: ['large'],\n      layer: 'Model Output',\n      pipelines: ['__default__', 'de'],\n      type: 'data'\n    },\n    {\n      id: 'data/weasel',\n      name: 'weasel',\n      full_name: 'weasel',\n      tags: ['small'],\n      layer: 'Raw',\n      pipelines: ['__default__', 'de'],\n      type: 'data'\n    },\n    {\n      id: 'data/elephant',\n      name: 'elephant',\n      full_name: 'elephant',\n      tags: ['large'],\n      layer: 'Raw',\n      pipelines: ['__default__', 'de'],\n      type: 'data'\n    },\n    {\n      id: 'data/bear',\n      name: 'bear',\n      full_name: 'bear',\n      tags: ['large'],\n      layer: 'Raw',\n      pipelines: ['__default__', 'de'],\n      type: 'data'\n    },\n    {\n      id: 'data/giraffe',\n      name: 'giraffe',\n      full_name: 'giraffe',\n      tags: ['large'],\n      layer: 'Model Output',\n      pipelines: ['__default__', 'de'],\n      type: 'data'\n    },\n    {\n      id: 'data/pig',\n      name: 'pig',\n      full_name: 'pig',\n      tags: ['medium'],\n      layer: 'Feature',\n      pipelines: ['__default__', 'ds'],\n      type: 'data'\n    }\n  ],\n  edges: [\n    {\n      target: 'task/salmon',\n      source: 'data/cat'\n    },\n    {\n      target: 'task/salmon',\n      source: 'data/dog'\n    },\n    {\n      target: 'task/salmon',\n      source: 'data/parameters'\n    },\n    {\n      target: 'task/salmon',\n      source: 'data/parameters_rabbit'\n    },\n    {\n      target: 'data/pig',\n      source: 'task/salmon'\n    },\n    {\n      target: 'data/horse',\n      source: 'task/salmon'\n    },\n    {\n      target: 'data/sheep',\n      source: 'task/salmon'\n    },\n    {\n      target: 'task/shark',\n      source: 'data/cat'\n    },\n    {\n      target: 'task/shark',\n      source: 'data/weasel'\n    },\n    {\n      target: 'task/shark',\n      source: 'data/elephant'\n    },\n    {\n      target: 'task/shark',\n      source: 'data/bear'\n    },\n    {\n      target: 'data/sheep',\n      source: 'task/shark'\n    },\n    {\n      target: 'data/pig',\n      source: 'task/shark'\n    },\n    {\n      target: 'data/giraffe',\n      source: 'task/shark'\n    },\n    {\n      target: 'task/trout',\n      source: 'data/pig'\n    },\n    {\n      target: 'data/whale',\n      source: 'task/trout'\n    }\n  ]\n};\n","export default {\n  schema_id: '12345678901234567890',\n  selected_pipeline: '__default__',\n  pipelines: [\n    {\n      id: '__default__',\n      name: 'Default'\n    },\n    {\n      id: 'de',\n      name: 'Data engineering'\n    },\n    {\n      id: 'ds',\n      name: 'Data science'\n    }\n  ],\n  layers: [\n    'Raw',\n    'Intermediate',\n    'Primary',\n    'Feature',\n    'Model Input',\n    'Models',\n    'Model Output',\n    'Reporting'\n  ],\n  edges: [\n    {\n      source: '33920f3a',\n      target: '06c33e94'\n    },\n    {\n      source: '06c33e94',\n      target: '105160a0'\n    },\n    {\n      source: '814ef273',\n      target: '0b7e1ac6'\n    },\n    {\n      source: '0b7e1ac6',\n      target: '389b5286'\n    },\n    {\n      source: '58450007',\n      target: '22ea294c'\n    },\n    {\n      source: '22ea294c',\n      target: 'bcb40508'\n    },\n    {\n      source: '105160a0',\n      target: 'f1a163c4'\n    },\n    {\n      source: 'f1a163c4',\n      target: 'e44a096d'\n    },\n    {\n      source: '389b5286',\n      target: 'b2f97396'\n    },\n    {\n      source: 'b2f97396',\n      target: '8c1dcc36'\n    },\n    {\n      source: 'bcb40508',\n      target: '27bb9dc7'\n    },\n    {\n      source: '27bb9dc7',\n      target: '13a964bf'\n    },\n    {\n      source: '842a3580',\n      target: 'fb5bd01d'\n    },\n    {\n      source: 'e44a096d',\n      target: 'fb5bd01d'\n    },\n    {\n      source: '8c1dcc36',\n      target: 'fb5bd01d'\n    },\n    {\n      source: '13a964bf',\n      target: 'fb5bd01d'\n    },\n    {\n      source: 'fb5bd01d',\n      target: '55bd1af4'\n    },\n    {\n      source: '842a3580',\n      target: 'd52422da'\n    },\n    {\n      source: 'e44a096d',\n      target: 'd52422da'\n    },\n    {\n      source: '8c1dcc36',\n      target: 'd52422da'\n    },\n    {\n      source: '13a964bf',\n      target: 'd52422da'\n    },\n    {\n      source: 'd52422da',\n      target: '442c2c34'\n    },\n    {\n      source: '181c2b7c',\n      target: 'dcbb9652'\n    },\n    {\n      source: '057ade39',\n      target: 'dcbb9652'\n    },\n    {\n      source: 'dcbb9652',\n      target: '7eb64be0'\n    },\n    {\n      source: '181c2b7c',\n      target: 'c4cff5d0'\n    },\n    {\n      source: '42e79d42',\n      target: 'c4cff5d0'\n    },\n    {\n      source: 'c4cff5d0',\n      target: '842a3580'\n    },\n    {\n      source: '7eb64be0',\n      target: '95cfc42d'\n    },\n    {\n      source: '1b3afcba',\n      target: '95cfc42d'\n    },\n    {\n      source: '55bd1af4',\n      target: '95cfc42d'\n    },\n    {\n      source: '95cfc42d',\n      target: '8770a38e'\n    },\n    {\n      source: '95cfc42d',\n      target: '1dafa5fb'\n    },\n    {\n      source: '442c2c34',\n      target: 'ccbee9c5'\n    },\n    {\n      source: '3a60b3a4',\n      target: 'ccbee9c5'\n    },\n    {\n      source: 'ccbee9c5',\n      target: 'fb4f64bd'\n    },\n    {\n      source: 'ccbee9c5',\n      target: 'f4f3a276'\n    },\n    {\n      source: '1dafa5fb',\n      target: '394244dd'\n    },\n    {\n      source: '55bd1af4',\n      target: '394244dd'\n    },\n    {\n      source: '394244dd',\n      target: '792a14f6'\n    },\n    {\n      source: 'f4f3a276',\n      target: '67257e84'\n    },\n    {\n      source: '442c2c34',\n      target: '67257e84'\n    },\n    {\n      source: '67257e84',\n      target: '9bd2dc3d'\n    },\n    {\n      source: '1dafa5fb',\n      target: 'f6f50e64'\n    },\n    {\n      source: 'dff067eb',\n      target: 'f6f50e64'\n    },\n    {\n      source: '55bd1af4',\n      target: 'f6f50e64'\n    },\n    {\n      source: 'f6f50e64',\n      target: '92f58611'\n    },\n    {\n      source: 'dff067eb',\n      target: 'e061482b'\n    },\n    {\n      source: 'f4f3a276',\n      target: 'e061482b'\n    },\n    {\n      source: '442c2c34',\n      target: 'e061482b'\n    },\n    {\n      source: 'e061482b',\n      target: 'b2a3a8e5'\n    },\n    {\n      source: '792a14f6',\n      target: '53b05b01'\n    },\n    {\n      source: '8770a38e',\n      target: '53b05b01'\n    },\n    {\n      source: 'fb4f64bd',\n      target: '6d8d326d'\n    },\n    {\n      source: '9bd2dc3d',\n      target: '6d8d326d'\n    },\n    {\n      source: 'dff067eb',\n      target: '45bda5fd'\n    },\n    {\n      source: '9aeb6881',\n      target: '45bda5fd'\n    },\n    {\n      source: '92f58611',\n      target: '45bda5fd'\n    },\n    {\n      source: '45bda5fd',\n      target: '90713d4f'\n    },\n    {\n      source: 'dff067eb',\n      target: '211c92c3'\n    },\n    {\n      source: '92f58611',\n      target: '211c92c3'\n    },\n    {\n      source: '211c92c3',\n      target: '4704ff18'\n    },\n    {\n      source: 'dff067eb',\n      target: 'c17b9614'\n    },\n    {\n      source: '4704ff18',\n      target: 'c17b9614'\n    },\n    {\n      source: 'c17b9614',\n      target: 'ccd3d45b'\n    },\n    {\n      source: '90713d4f',\n      target: '90461ea7'\n    },\n    {\n      source: 'ccd3d45b',\n      target: '90461ea7'\n    },\n    {\n      source: '9bd2dc3d',\n      target: '90461ea7'\n    },\n    {\n      source: '792a14f6',\n      target: '90461ea7'\n    },\n    {\n      source: '4704ff18',\n      target: '90461ea7'\n    },\n    {\n      source: '90461ea7',\n      target: '3e3b263a'\n    },\n    {\n      source: '90461ea7',\n      target: 'f3e15708'\n    },\n    {\n      source: '90461ea7',\n      target: '83ebce11'\n    },\n    {\n      source: '90461ea7',\n      target: 'a72d7024'\n    },\n    {\n      source: '90461ea7',\n      target: '8dbed427'\n    }\n  ],\n  nodes: [\n    {\n      full_name: 'load_raw_interaction_data',\n      id: '06c33e94',\n      name: 'Load Raw Interaction Data',\n      tags: ['data_engineering', 'preprocessing'],\n      layer: 'Raw',\n      pipelines: ['__default__', 'ds'],\n      type: 'task'\n    },\n    {\n      full_name: 'load_raw_country_data',\n      id: '0b7e1ac6',\n      name: 'Load Raw Country Data',\n      tags: ['data_engineering', 'preprocessing'],\n      layer: 'Raw',\n      pipelines: ['__default__', 'ds'],\n      type: 'task'\n    },\n    {\n      full_name: 'load_raw_shopper_spend_data',\n      id: '22ea294c',\n      name: 'Load Raw Shopper Spend Data',\n      tags: ['data_engineering', 'preprocessing'],\n      layer: 'Raw',\n      pipelines: ['__default__', 'ds'],\n      type: 'task'\n    },\n    {\n      full_name: 'preprocess_intermediate_interaction_data',\n      id: 'f1a163c4',\n      name: 'Preprocess Intermediate Interaction Data',\n      tags: ['data_engineering', 'preprocessing'],\n      layer: 'Intermediate',\n      pipelines: ['__default__', 'ds'],\n      type: 'task'\n    },\n    {\n      full_name: 'preprocess_intermediate_country_data',\n      id: 'b2f97396',\n      name: 'Preprocess Intermediate Country Data',\n      tags: ['data_engineering', 'preprocessing'],\n      layer: 'Intermediate',\n      pipelines: ['__default__', 'ds'],\n      type: 'task'\n    },\n    {\n      full_name: 'preprocess_intermediate_shopper_spend_data',\n      id: '27bb9dc7',\n      name: 'Preprocess Intermediate Shopper Spend Data',\n      tags: ['data_engineering', 'preprocessing'],\n      layer: 'Intermediate',\n      pipelines: ['__default__', 'ds'],\n      type: 'task'\n    },\n    {\n      full_name: 'create_shopper_spend_features',\n      id: 'fb5bd01d',\n      name: 'Create Shopper Spend Features',\n      tags: ['feature_engineering', 'data_engineering'],\n      layer: 'Feature',\n      pipelines: ['__default__', 'ds'],\n      type: 'task'\n    },\n    {\n      full_name: 'create_shopper_churn_features',\n      id: 'd52422da',\n      name: 'Create Shopper Churn Features',\n      tags: ['feature_engineering', 'data_engineering'],\n      layer: 'Feature',\n      pipelines: ['__default__', 'ds'],\n      type: 'task'\n    },\n    {\n      full_name: 'prepare_vendor_input',\n      id: 'dcbb9652',\n      name: 'Prepare Vendor Input',\n      tags: ['feature_engineering', 'data_engineering'],\n      layer: 'Intermediate',\n      pipelines: ['__default__', 'ds'],\n      type: 'task'\n    },\n    {\n      full_name: 'prepare_crm_input',\n      id: 'c4cff5d0',\n      name: 'Prepare CRM Input',\n      tags: ['feature_engineering', 'data_engineering'],\n      layer: 'Intermediate',\n      pipelines: ['__default__', 'ds'],\n      type: 'task'\n    },\n    {\n      full_name: 'predictive_sales_model',\n      id: '95cfc42d',\n      name: 'Predictive Sales Model',\n      tags: ['model_training', 'data_science'],\n      layer: 'Model Input',\n      pipelines: ['__default__', 'ds'],\n      type: 'task'\n    },\n    {\n      full_name: 'predictive_engagement_model',\n      id: 'ccbee9c5',\n      name: 'Predictive Engagement Model',\n      tags: ['model_training', 'data_science'],\n      layer: 'Model Input',\n      pipelines: ['__default__', 'ds'],\n      type: 'task'\n    },\n    {\n      full_name: 'sales_model_explainable_ai',\n      id: '394244dd',\n      name: 'Sales Model Explainable AI',\n      tags: ['model_explanation', 'data_science'],\n      layer: 'Model Input',\n      pipelines: ['__default__', 'ds'],\n      type: 'task'\n    },\n    {\n      full_name: 'engagement_model_explainable_ai',\n      id: '67257e84',\n      name: 'Engagement Model Explainable AI',\n      tags: ['model_explanation', 'data_science'],\n      layer: 'Models',\n      pipelines: ['__default__', 'ds'],\n      type: 'task'\n    },\n    {\n      full_name: 'perform_digital_analysis',\n      id: 'f6f50e64',\n      name: 'Perform Digital Analysis',\n      tags: ['model_training', 'data_science'],\n      layer: 'Model Input',\n      pipelines: ['__default__', 'ds'],\n      type: 'task'\n    },\n    {\n      full_name: 'engagement_recommendation_engine',\n      id: 'e061482b',\n      name: 'Engagement Recommendation Engine',\n      tags: ['model_training', 'data_science'],\n      layer: 'Models',\n      pipelines: ['__default__', 'ds'],\n      type: 'task'\n    },\n    {\n      full_name: 'sales_model_performance_monitoring',\n      id: '53b05b01',\n      name: 'Sales Model Performance Monitoring',\n      tags: ['model_performance_monitoring', 'data_science'],\n      layer: 'Reporting',\n      pipelines: ['__default__', 'ds'],\n      type: 'task'\n    },\n    {\n      full_name: 'engagement_model_performance_monitoring',\n      id: '6d8d326d',\n      name: 'Engagement Model Performance Monitoring',\n      tags: ['model_performance_monitoring', 'data_science'],\n      layer: 'Reporting',\n      pipelines: ['__default__', 'ds'],\n      type: 'task'\n    },\n    {\n      full_name: 'multi-channel_optimisation',\n      id: '45bda5fd',\n      name: 'Multi-Channel Optimisation',\n      tags: ['optimisation', 'data_science'],\n      layer: 'Models',\n      pipelines: ['__default__', 'ds'],\n      type: 'task'\n    },\n    {\n      full_name: 'content_optimisation',\n      id: '211c92c3',\n      name: 'Content Optimisation',\n      tags: ['optimisation', 'data_science'],\n      layer: 'Models',\n      pipelines: ['__default__', 'ds'],\n      type: 'task'\n    },\n    {\n      full_name: 'segment_journeys',\n      id: 'c17b9614',\n      name: 'Segment Journeys',\n      tags: ['optimisation', 'data_science'],\n      layer: 'Model Output',\n      pipelines: ['__default__', 'ds'],\n      type: 'task'\n    },\n    {\n      full_name: 'generate_dashboard_inputs',\n      id: '90461ea7',\n      name: 'Generate Dashboard Inputs',\n      tags: ['reporting', 'data_science'],\n      layer: 'Reporting',\n      pipelines: ['__default__', 'ds'],\n      type: 'task'\n    },\n    {\n      full_name: 'interaction_raw',\n      id: '33920f3a',\n      name: 'Interaction Raw',\n      tags: ['data_engineering', 'preprocessing'],\n      layer: 'Raw',\n      pipelines: ['__default__', 'ds'],\n      type: 'data'\n    },\n    {\n      full_name: 'interaction_intermediate',\n      id: '105160a0',\n      name: 'Interaction Intermediate',\n      tags: ['data_engineering', 'preprocessing'],\n      layer: 'Intermediate',\n      pipelines: ['__default__', 'ds'],\n      type: 'data'\n    },\n    {\n      full_name: 'country_raw',\n      id: '814ef273',\n      name: 'Country Raw',\n      tags: ['data_engineering', 'preprocessing'],\n      layer: 'Raw',\n      pipelines: ['__default__', 'ds'],\n      type: 'data'\n    },\n    {\n      full_name: 'country_intermediate',\n      id: '389b5286',\n      name: 'Country Intermediate',\n      tags: ['data_engineering', 'preprocessing'],\n      layer: 'Intermediate',\n      pipelines: ['__default__', 'ds'],\n      type: 'data'\n    },\n    {\n      full_name: 'shopper_spend_raw',\n      id: '58450007',\n      name: 'Shopper Spend Raw',\n      tags: ['data_engineering', 'preprocessing'],\n      layer: 'Raw',\n      pipelines: ['__default__', 'ds'],\n      type: 'data'\n    },\n    {\n      full_name: 'shopper_spend_intermediate',\n      id: 'bcb40508',\n      name: 'Shopper Spend Intermediate',\n      tags: ['data_engineering', 'preprocessing'],\n      layer: 'Intermediate',\n      pipelines: ['__default__', 'ds'],\n      type: 'data'\n    },\n    {\n      full_name: 'interaction_primary',\n      id: 'e44a096d',\n      name: 'Interaction Primary',\n      tags: ['feature_engineering', 'data_engineering', 'preprocessing'],\n      layer: 'Primary',\n      pipelines: ['__default__', 'ds'],\n      type: 'data'\n    },\n    {\n      full_name: 'country_primary',\n      id: '8c1dcc36',\n      name: 'Country Primary',\n      tags: ['feature_engineering', 'data_engineering', 'preprocessing'],\n      layer: 'Primary',\n      pipelines: ['__default__', 'ds'],\n      type: 'data'\n    },\n    {\n      full_name: 'shopper_spend_primary',\n      id: '13a964bf',\n      name: 'Shopper Spend Primary',\n      tags: ['feature_engineering', 'data_engineering', 'preprocessing'],\n      layer: 'Primary',\n      pipelines: ['__default__', 'ds'],\n      type: 'data'\n    },\n    {\n      full_name: 'crm_predictions',\n      id: '842a3580',\n      name: 'CRM Predictions',\n      tags: ['feature_engineering', 'data_engineering'],\n      layer: 'Primary',\n      pipelines: ['__default__', 'ds'],\n      type: 'data'\n    },\n    {\n      full_name: 'shopper_spend_features',\n      id: '55bd1af4',\n      name: 'Shopper Spend Features',\n      tags: [\n        'data_science',\n        'model_training',\n        'model_explanation',\n        'feature_engineering',\n        'data_engineering'\n      ],\n      layer: 'Feature',\n      pipelines: ['__default__', 'de'],\n      type: 'data'\n    },\n    {\n      full_name: 'shopper_churn_features',\n      id: '442c2c34',\n      name: 'Shopper Churn Features',\n      tags: [\n        'data_science',\n        'model_training',\n        'model_explanation',\n        'feature_engineering',\n        'data_engineering'\n      ],\n      layer: 'Feature',\n      pipelines: ['__default__', 'de'],\n      type: 'data'\n    },\n    {\n      full_name: 'vendor_main',\n      id: '181c2b7c',\n      name: 'Vendor Main',\n      tags: ['feature_engineering', 'data_engineering'],\n      layer: 'Raw',\n      pipelines: ['__default__', 'de'],\n      type: 'data'\n    },\n    {\n      full_name: 'salesforce_crm',\n      id: '057ade39',\n      name: 'Salesforce CRM',\n      tags: ['feature_engineering', 'data_engineering'],\n      layer: 'Raw',\n      pipelines: ['__default__', 'de'],\n      type: 'data'\n    },\n    {\n      full_name: 'vendor_predictions',\n      id: '7eb64be0',\n      name: 'Vendor Predictions',\n      tags: [\n        'feature_engineering',\n        'data_engineering',\n        'data_science',\n        'model_training'\n      ],\n      layer: 'Primary',\n      pipelines: ['__default__', 'de'],\n      type: 'data'\n    },\n    {\n      full_name: 'salesforce_accounts',\n      id: '42e79d42',\n      name: 'Salesforce Accounts',\n      tags: ['feature_engineering', 'data_engineering'],\n      layer: 'Raw',\n      pipelines: ['__default__', 'de'],\n      type: 'data'\n    },\n    {\n      full_name: 'params:_sales_model',\n      id: '1b3afcba',\n      name: 'params: Sales Model',\n      tags: ['data_science', 'model_training'],\n      layer: 'Model Input',\n      pipelines: ['__default__', 'de'],\n      type: 'parameters'\n    },\n    {\n      full_name: 'sales_validation_results',\n      id: '8770a38e',\n      name: 'Sales Validation Results',\n      tags: ['model_performance_monitoring', 'data_science', 'model_training'],\n      layer: 'Model Output',\n      pipelines: ['__default__', 'de'],\n      type: 'data'\n    },\n    {\n      full_name: 'sales_trained_model',\n      id: '1dafa5fb',\n      name: 'Sales Trained Model',\n      tags: ['model_explanation', 'data_science', 'model_training'],\n      layer: 'Model Input',\n      pipelines: ['__default__', 'de'],\n      type: 'data'\n    },\n    {\n      full_name: 'params:_engagement_model',\n      id: '3a60b3a4',\n      name: 'params: Engagement Model',\n      tags: ['data_science', 'model_training'],\n      layer: 'Model Input',\n      pipelines: ['__default__', 'de'],\n      type: 'parameters'\n    },\n    {\n      full_name: 'engagement_validation_results',\n      id: 'fb4f64bd',\n      name: 'Engagement Validation Results',\n      tags: ['model_performance_monitoring', 'data_science', 'model_training'],\n      layer: 'Model Output',\n      pipelines: ['__default__', 'de'],\n      type: 'data'\n    },\n    {\n      full_name: 'engagement_trained_model',\n      id: 'f4f3a276',\n      name: 'Engagement Trained Model',\n      tags: ['model_explanation', 'data_science', 'model_training'],\n      layer: 'Models',\n      pipelines: ['__default__', 'de'],\n      type: 'data'\n    },\n    {\n      full_name: 'sales_model_explanations',\n      id: '792a14f6',\n      name: 'Sales Model Explanations',\n      tags: [\n        'model_explanation',\n        'data_science',\n        'model_performance_monitoring',\n        'reporting'\n      ],\n      layer: 'Model Output',\n      pipelines: ['__default__', 'de'],\n      type: 'data'\n    },\n    {\n      full_name: 'engagement_model_explanations',\n      id: '9bd2dc3d',\n      name: 'Engagement Model Explanations',\n      tags: [\n        'model_explanation',\n        'data_science',\n        'model_performance_monitoring',\n        'reporting'\n      ],\n      layer: 'Model Output',\n      pipelines: ['__default__', 'de'],\n      type: 'data'\n    },\n    {\n      full_name: 'params:_optimisation',\n      id: 'dff067eb',\n      name: 'params: Optimisation',\n      tags: ['data_science', 'model_training', 'optimisation'],\n      layer: 'Model Input',\n      pipelines: ['__default__', 'de'],\n      type: 'parameters'\n    },\n    {\n      full_name: 'digital_analysis',\n      id: '92f58611',\n      name: 'Digital Analysis',\n      tags: ['data_science', 'model_training', 'optimisation'],\n      layer: 'Model Input',\n      pipelines: ['__default__', 'de'],\n      type: 'data'\n    },\n    {\n      full_name: 'engagement_recommendations',\n      id: 'b2a3a8e5',\n      name: 'Engagement Recommendations',\n      tags: ['data_science', 'model_training'],\n      layer: 'Model Output',\n      pipelines: ['__default__', 'de'],\n      type: 'data'\n    },\n    {\n      full_name: 'action_cost_table',\n      id: '9aeb6881',\n      name: 'Action Cost Table',\n      tags: ['data_science', 'optimisation'],\n      layer: 'Raw',\n      pipelines: ['__default__', 'de'],\n      type: 'data'\n    },\n    {\n      full_name: 'multi-channel_resolutions',\n      id: '90713d4f',\n      name: 'Multi-Channel Resolutions',\n      tags: ['reporting', 'data_science', 'optimisation'],\n      layer: 'Model Output',\n      pipelines: ['__default__', 'de'],\n      type: 'data'\n    },\n    {\n      full_name: 'content_resolutions',\n      id: '4704ff18',\n      name: 'Content Resolutions',\n      tags: ['reporting', 'data_science', 'optimisation'],\n      layer: 'Model Output',\n      pipelines: ['__default__', 'de'],\n      type: 'data'\n    },\n    {\n      full_name: 'segment_journeys_allocations',\n      id: 'ccd3d45b',\n      name: 'Segment Journeys Allocations',\n      tags: ['reporting', 'data_science', 'optimisation'],\n      layer: 'Model Output',\n      pipelines: ['__default__', 'de'],\n      type: 'data'\n    },\n    {\n      full_name: 'upselling_readiness_dashboard_input',\n      id: '3e3b263a',\n      name: 'Upselling Readiness Dashboard Input',\n      tags: ['reporting', 'data_science'],\n      layer: 'Reporting',\n      pipelines: ['__default__', 'de'],\n      type: 'data'\n    },\n    {\n      full_name: 'lead_scoring_dashboard_input',\n      id: 'f3e15708',\n      name: 'Lead Scoring Dashboard Input',\n      tags: ['reporting', 'data_science'],\n      layer: 'Reporting',\n      pipelines: ['__default__', 'de'],\n      type: 'data'\n    },\n    {\n      full_name: 'lifetime_value_prediction_dashboard_input',\n      id: '83ebce11',\n      name: 'Lifetime Value Prediction Dashboard Input',\n      tags: ['reporting', 'data_science'],\n      layer: 'Reporting',\n      pipelines: ['__default__', 'de'],\n      type: 'data'\n    },\n    {\n      full_name: 'digital_sales_dashboard_input',\n      id: 'a72d7024',\n      name: 'Digital Sales Dashboard Input',\n      tags: ['reporting', 'data_science'],\n      layer: 'Reporting',\n      pipelines: ['__default__', 'de'],\n      type: 'data'\n    },\n    {\n      full_name: 'vendor_sales_dashboard_input',\n      id: '8dbed427',\n      name: 'Vendor Sales Dashboard Input',\n      tags: ['reporting', 'data_science'],\n      layer: 'Reporting',\n      pipelines: ['__default__', 'de'],\n      type: 'data'\n    }\n  ],\n  tags: [\n    {\n      id: 'model_performance_monitoring',\n      name: 'Model Performance Monitoring'\n    },\n    {\n      id: 'data_science',\n      name: 'Data Science'\n    },\n    {\n      id: 'reporting',\n      name: 'Reporting'\n    },\n    {\n      id: 'model_training',\n      name: 'Model Training'\n    },\n    {\n      id: 'preprocessing',\n      name: 'Preprocessing'\n    },\n    {\n      id: 'optimisation',\n      name: 'Optimisation'\n    },\n    {\n      id: 'model_explanation',\n      name: 'Model Explanation'\n    },\n    {\n      id: 'feature_engineering',\n      name: 'Feature Engineering'\n    },\n    {\n      id: 'data_engineering',\n      name: 'Data Engineering'\n    }\n  ]\n};\n","import getRandomPipeline from './random-data';\nimport animals from './data/animals.mock';\nimport demo from './data/demo.mock';\n\n/**\n * Determine the data source ID from the URL query string, or an environment\n * variable from the CLI, or from the URL host, else return undefined.\n * You can supply one of the following strings:\n   - 'random': Use randomly-generated data\n   - 'animals': Use data from the 'animals' test dataset\n   - 'demo': Use data from the 'demo' test dataset\n   - 'json': Load data from a local json file (in /public/api/main)\n * @return {string} Data source identifier\n */\nexport const getSourceID = () => {\n  const qs = document.location.search.match(/data=(\\w+)/);\n  const { REACT_APP_DATA_SOURCE } = process.env;\n  const isDemo = document.location.host === 'quantumblacklabs.github.io';\n\n  if (qs) {\n    return encodeURIComponent(qs[1]);\n  }\n  if (REACT_APP_DATA_SOURCE) {\n    return REACT_APP_DATA_SOURCE;\n  }\n  if (isDemo) {\n    return 'demo';\n  }\n  return 'json';\n};\n\n/**\n * Either load synchronous pipeline data, or else indicate with a string\n * that json data should be loaded asynchronously later on.\n * @param {string} source Data source identifier\n * @return {object|string} Either raw data itself, or 'json'\n */\nexport const getDataValue = source => {\n  switch (source) {\n    case 'animals':\n      // Use data from the 'animals' test dataset\n      return animals;\n    case 'demo':\n      // Use data from the 'demo' test dataset\n      return demo;\n    case 'random':\n      // Use procedurally-generated data\n      return getRandomPipeline();\n    case 'json':\n      // Load data asynchronously later\n      return source;\n    default:\n      throw new Error(\n        `Unexpected data source value '${source}'. Your input should be one of the following values: 'animals', 'demo', 'json', or 'random'`\n      );\n  }\n};\n\n/**\n * Determine which data source to use, and return it\n * @return {object|string} Pipeline data, or 'json'\n */\nconst getPipelineData = () => getDataValue(getSourceID());\n\nexport default getPipelineData;\n","import { json } from 'd3-fetch';\nimport { dataPath, fullDataPath } from '../config';\n\n/**\n * Asynchronously load and parse data from json file using d3-fetch\n * @param {string} path JSON data file location. Defaults to dataPath from config.js\n * @return {function} A promise that will return when the file is loaded and parsed\n */\nconst loadJsonData = path =>\n  json(path || dataPath).catch(() => {\n    throw new Error(\n      `Unable to load pipeline data from ${path ||\n        dataPath}. If you're running Kedro-Viz as a standalone (e.g. for JavaScript development), please check that you have placed a data file at ${path ||\n        fullDataPath}.`\n    );\n  });\n\nexport default loadJsonData;\n","import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport 'what-input';\nimport App from './components/app';\nimport EasterEgg from './components/easter-egg';\nimport getPipelineData from './utils/data-source';\nimport loadData from './store/load-data';\nimport './styles/index.css';\n\nconst KedroViz = () => {\n  const [data, updateData] = useState(getPipelineData());\n  useEffect(() => {\n    if (data === 'json') {\n      loadData().then(updateData);\n    }\n  }, [data]);\n\n  return (\n    <>\n      <App data={data} />\n      <EasterEgg />\n    </>\n  );\n};\n\nReactDOM.render(<KedroViz />, document.getElementById('root'));\n","/**\n * PI / 2 constant\n */\nexport const halfPI = Math.PI * 0.5;\n\n/**\n * Clamps the value between min and max\n * @param {number} value The number to clamp\n * @param {number} min The minimum value\n * @param {number} max The maximum value\n * @returns {number} The value clamped\n */\nexport const clamp = (value, min, max) =>\n  value < min ? min : value > max ? max : value;\n\n/**\n * Rounds the value to the nearest unit value\n * @param {number} value The value to snap\n * @param {number} unit The unit\n * @returns {number} The value snapped\n */\nexport const snap = (value, unit) => Math.round(value / unit) * unit;\n\n/**\n * Returns the distance between two values\n * @param {number} a The first value\n * @param {number} b The second value\n * @returns {number} The distance\n */\nexport const distance1d = (a, b) => Math.abs(a - b);\n\n/**\n * Returns the angle in radians between the points a and b relative to the X-axis about the origin\n * @param {object} a The first point\n * @param {object} b The second point\n * @returns {number} The angle\n */\nexport const angle = (a, b) => Math.atan2(a.y - b.y, a.x - b.x);\n\n/**\n * Returns the left edge x-position of the node\n * @param {object} node The node\n * @returns {number} The left edge position\n */\nexport const nodeLeft = node => node.x - node.width * 0.5;\n\n/**\n * Returns the right edge x-position of the node\n * @param {object} node The node\n * @returns {number} The right edge position\n */\nexport const nodeRight = node => node.x + node.width * 0.5;\n\n/**\n * Returns the top edge y-position of the node\n * @param {object} node The node\n * @returns {number} The top edge position\n */\nexport const nodeTop = node => node.y - node.height * 0.5;\n\n/**\n * Returns the bottom edge y-position of the node\n * @param {object} node The node\n * @returns {number} The bottom edge position\n */\nexport const nodeBottom = node => node.y + node.height * 0.5;\n\n/**\n * Finds the rows formed by nodes given the their positions in Y.\n * The result is sorted in X and Y.\n * Adds a `row` property to each node in-place\n * @param {array} nodes The input nodes\n * @returns {array} The sorted rows of nodes\n */\nexport const groupByRow = nodes => {\n  const rows = {};\n\n  // Create rows using node Y values\n  for (const node of nodes) {\n    rows[node.y] = rows[node.y] || [];\n    rows[node.y].push(node);\n  }\n\n  // Sort the set of rows accounting for keys being strings\n  const rowNumbers = Object.keys(rows).map(row => parseFloat(row));\n  rowNumbers.sort((a, b) => a - b);\n\n  // Sort rows in order of X position if set. Break ties with ids for stability\n  const sortedRows = rowNumbers.map(row => rows[row]);\n  for (let i = 0; i < sortedRows.length; i += 1) {\n    sortedRows[i].sort((a, b) => compare(a.x, b.x, a.id, b.id));\n\n    for (const node of sortedRows[i]) {\n      node.row = i;\n    }\n  }\n\n  return sortedRows;\n};\n\n/**\n * Generalised comparator function for sorting\n * If values are strings then `localeCompare` is used, otherwise values are subtracted\n * Compares the first pair of values and returns the difference if non equal,\n * otherwise ties are broken by comparing the subsequent pairs of values\n * @param {number|string} a Value to compare with `b`\n * @param {number|string} b Value to compare with `a`\n * @param {...number|string} values Any number of further pairs of values to compare as tie-breakers\n * @returns {number} A standard signed comparator result\n */\nexport const compare = (a, b, ...values) => {\n  const delta = typeof a === 'string' ? a.localeCompare(b) : a - b;\n  return delta !== 0 || values.length === 0 ? delta : compare(...values);\n};\n\n/**\n * Returns the node with the position translated in-place\n * @param {object} node The node\n * @param {object} offset The translation vector\n * @returns {object} The node\n */\nexport const offsetNode = (node, offset) => {\n  node.x = node.x - offset.x;\n  node.y = node.y - offset.y;\n  // Node sort order for tabindex:\n  node.order = node.x + node.y * 9999;\n  return node;\n};\n\n/**\n * Returns the edge with each point translated in-place\n * @param {object} edge The edge\n * @param {object} offset The translation vector\n * @returns {object} The edge\n */\nexport const offsetEdge = (edge, offset) => {\n  edge.points.forEach(point => {\n    point.x = point.x - offset.x;\n    point.y = point.y - offset.y;\n  });\n  return edge;\n};\n\n/**\n * Returns the point on the line segment `ax, ay, bx, by` closest to point `x, y`\n * @param {number} x The test point x\n * @param {number} y The test point y\n * @param {number} ax The start of the line segement x point\n * @param {number} ay The start of the line segement y point\n * @param {number} bx The end of the line segement x point\n * @param {number} by The end of the line segement y point\n * @returns {object} An object with the closest point and both line segment points\n */\nexport const nearestOnLine = (x, y, ax, ay, bx, by) => {\n  const dx = bx - ax;\n  const dy = by - ay;\n  const position = ((x - ax) * dx + (y - ay) * dy) / (dx * dx + dy * dy || 1);\n  const positionClamped = clamp(position, 0, 1);\n\n  return {\n    x: ax + dx * positionClamped,\n    y: ay + dy * positionClamped,\n    ax,\n    ay,\n    bx,\n    by\n  };\n};\n","/** @license kiwi.js v1.1.2\n * #------------------------------------------------------------------------------\n * # Copyright (c) 2013, Nucleic Development Team & H. Rutjes.\n * #\n * # Distributed under the terms of the Modified BSD License.\n * #\n * # The full license is in the file COPYING.txt, distributed with this software.\n * #------------------------------------------------------------------------------\n **/\nimport * as kiwi from 'kiwi.js';\n\nimport { distance1d } from './common';\n\n/**\n * Combines the given object's id and key to create a new key\n * @param {number} obj An object with `id` property\n * @param {number} key An identifier string\n * @returns {string} The combined key\n */\nconst key = (obj, key) => {\n  if (typeof obj.id === 'undefined')\n    throw new Error(`Object is missing property 'id' required for key.`);\n  return obj.id + '_' + key;\n};\n\n/**\n * Returns the value `a - b`\n * @param {number} a The first number\n * @param {number} b The second number\n * @returns {number} The result\n */\nexport const subtract = (a, b) => a - b;\n\n/**\n * Given a `solver` operator function, returns the equivalent kiwi.js operator if defined\n * @param {function} operator The operator function\n * @returns {object|undefined} The kiwi.js operator\n */\nconst toStrictOperator = operator => {\n  if (operator === equalTo) return kiwi.Operator.Eq;\n  if (operator === greaterOrEqual) return kiwi.Operator.Ge;\n};\n\n/**\n * Returns `true` if `a === b` otherwise `false`\n * @param {number} a The first value\n * @param {number} b The second value\n * @returns {boolean} The result\n */\nexport const equalTo = (a, b) => a === b;\n\n/**\n * Returns `true` if `a >= b` otherwise `false`\n * @param {number} a The first number\n * @param {number} b The second number\n * @returns {boolean} The result\n */\nexport const greaterOrEqual = (a, b) => a >= b;\n\n/**\n * Applies the given constraints to the objects in-place.\n * If `strict` is set, limitations apply but an exact solution is attempted,\n * otherwise a solution is approximated iteratively\n * @param {array} constraints The constraints to apply\n * @param {object} constraint.a The first object to constrain\n * @param {object} constraint.b The second object to constrain\n * @param {string} constraint.key The property name on `a` and `b` to constrain\n * @param {boolean=true} constraint.required Whether the constraint must be satisfied during strict solving\n * @param {function=} constraint.delta A signed difference function given `a` and `b`. Default `subtract`\n * @param {function=} constraint.distance An absolute distance function given `a` and `b`. Default `distance1d`\n * @param {function=} constraint.target A target difference for `a` and `b`. Default `() => 0`\n * @param {function=} constraint.weightA The amount to adjust `a[key]`. Default `() => 1`\n * @param {function=} constraint.weightB The amount to adjust `b[key]`. Default `() => 1`\n * @param {number=1} iterations The number of iterations\n * @param {boolean=false} strict\n */\nexport const solve = (constraints, iterations = 1, strict = false) => {\n  if (strict) return solveStrict(constraints);\n  return solveLoose(constraints, iterations);\n};\n\n/**\n * Applies the given constraints to the objects in-place.\n * Constraint targets and operators can be static or dynamic.\n * A solution is approximated iteratively\n * @param {array} constraints The constraints. See docs for `solve`\n * @param {number} iterations The number of iterations\n */\nconst solveLoose = (constraints, iterations) => {\n  for (let i = 0; i < iterations; i += 1) {\n    for (const co of constraints) {\n      const delta = (co.delta || subtract)(co.a[co.key], co.b[co.key], co);\n      const distance = (co.distance || distance1d)(\n        co.a[co.key],\n        co.b[co.key],\n        co\n      );\n      const target = co.target(co.a[co.key], co.b[co.key], co, delta, distance);\n\n      if (!(co.operator || equalTo)(distance, target, delta)) {\n        const resolve = (co.strength ? co.strength(co) : 1) * (delta - target);\n\n        let weightA = co.weightA ? co.weightA(co) : 1;\n        let weightB = co.weightB ? co.weightB(co) : 1;\n\n        weightA = weightA / (weightA + weightB);\n        weightB = 1 - weightA;\n\n        co.a[co.key] -= weightA * resolve;\n        co.b[co.key] += weightB * resolve;\n      }\n    }\n  }\n};\n\n/**\n * Applies the given constraints to the objects in-place.\n * Limitations:\n *  - Constraint targets and operators must be static\n *  - `delta` is always subtract\n *  - `distance` is always subtract (i.e. signed)\n * A solution is found exactly if possible, otherwise throws an error\n * @param {array} constraints The constraints. See docs for `solve`\n */\nconst solveStrict = constraints => {\n  const solver = new kiwi.Solver();\n  const variables = {};\n\n  for (const co of constraints) {\n    variables[key(co.a, co.key)] = new kiwi.Variable();\n    variables[key(co.b, co.key)] = new kiwi.Variable();\n  }\n\n  for (const co of constraints) {\n    const expression = variables[key(co.a, co.key)].minus(\n      variables[key(co.b, co.key)]\n    );\n\n    co.constraint = new kiwi.Constraint(\n      expression,\n      toStrictOperator(co.operator || equalTo),\n      co.target(),\n      co.required === true ? kiwi.Strength.required : kiwi.Strength.strong\n    );\n\n    solver.addConstraint(co.constraint);\n  }\n\n  solver.updateVariables();\n\n  for (const co of constraints) {\n    co.a[co.key] = variables[key(co.a, co.key)].value();\n    co.b[co.key] = variables[key(co.b, co.key)].value();\n  }\n};\n","import { halfPI, snap, angle, compare, groupByRow } from './common';\nimport { solve, greaterOrEqual, equalTo } from './solver';\n\n/**\n * Finds positions for the given nodes relative to their edges.\n * Input nodes and edges are updated in-place.\n * Results are stored in the `x, y` properties on nodes.\n * @param {object} params The layout parameters\n * @param {array} params.nodes The input nodes\n * @param {array} params.edges The input edges\n * @param {object=} params.layers The node layers if specified\n * @param {number} params.basisX The basis relating diagram width in X\n * @param {number} params.spaceX The minimum gap between nodes in X\n * @param {number} params.spaceY The minimum gap between nodes in Y\n * @param {number} params.layerSpaceY The additional gap between nodes in Y between layers\n * @param {number} params.iterations The number of solver iterations to perform\n * @returns {void}\n */\nexport const layout = ({\n  nodes,\n  edges,\n  layers,\n  basisX,\n  spaceX,\n  spaceY,\n  layerSpaceY,\n  iterations\n}) => {\n  const layerConstraints = [];\n  const crossingConstraints = [];\n  const parallelConstraints = [];\n  const parallelSingleConstraints = [];\n  const parallelDoubleConstraints = [];\n  const separationConstraints = [];\n  const snapConstraints = [];\n\n  for (const node of nodes) {\n    node.x = 0;\n    node.y = 0;\n  }\n\n  // Constraints in Y formed by the edges of the graph\n  const rowConstraints = edges.map(edge => ({\n    a: edge.targetNode,\n    b: edge.sourceNode,\n    key: 'y',\n    operator: greaterOrEqual,\n    target: () => spaceY,\n    weightA: () => 0,\n    weightB: () => 1,\n    required: true\n  }));\n\n  // Constraints in Y separating nodes into layers if specified\n  if (layers) {\n    const layerNames = Object.values(layers);\n    const layerSpace = (spaceY + layerSpaceY) * 0.5;\n    let layerNodes = nodes.filter(node => node.nearestLayer === layerNames[0]);\n\n    // For each defined layer\n    for (let i = 0; i < layerNames.length - 1; i += 1) {\n      const layer = layerNames[i];\n      const nextLayer = layerNames[i + 1];\n      const nextLayerNodes = nodes.filter(\n        node => node.nearestLayer === nextLayer\n      );\n\n      // Create a temporary intermediary 'node'\n      const layerNode = { id: layer, x: 0, y: 0 };\n\n      // Constraints in Y for each node such that node.y <= layerNode.y - spaceY\n      for (const node of layerNodes) {\n        layerConstraints.push({\n          a: layerNode,\n          b: node,\n          key: 'y',\n          operator: greaterOrEqual,\n          target: () => layerSpace,\n          weightA: () => 0,\n          weightB: () => 1\n        });\n      }\n\n      // Constraints in Y for each node on the next layer such that node.y >= layerNode.y\n      for (const node of nextLayerNodes) {\n        layerConstraints.push({\n          a: node,\n          b: layerNode,\n          key: 'y',\n          operator: greaterOrEqual,\n          target: () => layerSpace,\n          weightA: () => 0,\n          weightB: () => 1\n        });\n      }\n\n      layerNodes = nextLayerNodes;\n    }\n  }\n\n  // Find the positions of each node in Y given the constraints exactly\n  solve([...rowConstraints, ...layerConstraints], 1, true);\n\n  // Find the rows formed by the nodes\n  const rows = groupByRow(nodes);\n\n  // Constraints in X to prevent a pair of edges crossing\n  const crossingConstraint = {\n    basisX,\n    key: 'x',\n    operator: (distance, target, delta) =>\n      target >= 0 ? delta >= target : delta <= target,\n    target: (a, b, co) => {\n      // Find the minimal target position that separates both nodes\n      const sourceDelta = co.edgeA.sourceNode.x - co.edgeB.sourceNode.x;\n      const targetDelta = co.edgeA.targetNode.x - co.edgeB.targetNode.x;\n      return sourceDelta + targetDelta < 0 ? -co.basisX : co.basisX;\n    },\n    strength: co => 1 / co.basisX,\n    weightA: () => 0.5,\n    weightB: () => 0.5\n  };\n\n  // For every pair of edges\n  for (let i = 0; i < edges.length; i += 1) {\n    const edgeA = edges[i];\n\n    for (let j = i + 1; j < edges.length; j += 1) {\n      const edgeB = edges[j];\n\n      // Add crossing constraint between edge source nodes, where different\n      if (edgeA.source !== edgeB.source) {\n        crossingConstraints.push({\n          ...crossingConstraint,\n          a: edgeA.sourceNode,\n          b: edgeB.sourceNode,\n          edgeA,\n          edgeB\n        });\n      }\n\n      // Add crossing constraint between edge target nodes, where different\n      if (edgeA.target !== edgeB.target) {\n        crossingConstraints.push({\n          ...crossingConstraint,\n          a: edgeA.targetNode,\n          b: edgeB.targetNode,\n          edgeA,\n          edgeB\n        });\n      }\n    }\n  }\n\n  // Constraints in X to minimise edge length thereby prioritising straight parallel edges in Y\n  for (const edge of edges) {\n    const parallelConstraint = {\n      a: edge.sourceNode,\n      b: edge.targetNode,\n      key: 'x',\n      operator: equalTo,\n      target: () => 0,\n      // Lower degree nodes can be moved more freely than higher\n      strength: co =>\n        1 / Math.max(1, 0.5 * (co.a.targets.length + co.b.sources.length)),\n      weightA: () => 0.5,\n      weightB: () => 0.5\n    };\n\n    parallelConstraints.push(parallelConstraint);\n\n    const sourceHasOneTarget = edge.sourceNode.targets.length === 1;\n    const targetHasOneSource = edge.targetNode.sources.length === 1;\n\n    // Collect edges connected to single-degree nodes at either end\n    if (sourceHasOneTarget || targetHasOneSource) {\n      parallelSingleConstraints.push(parallelConstraint);\n    }\n\n    // Collect edges connected to single-degree at both ends\n    if (sourceHasOneTarget && targetHasOneSource) {\n      parallelDoubleConstraints.push(parallelConstraint);\n    }\n  }\n\n  // Solving loop for constraints in X\n  const halfIterations = Math.ceil(iterations * 0.5);\n\n  for (let i = 0; i < iterations; i += 1) {\n    // Minimise crossing\n    solve(crossingConstraints, 1);\n\n    // Minimise edge length\n    solve(parallelConstraints, 1);\n\n    // Minimise edge length specifically for low-degree edges more strongly\n    solve(parallelSingleConstraints, halfIterations);\n    solve(parallelDoubleConstraints, halfIterations);\n\n    // Clear separation constraints from previous iteration\n    separationConstraints.length = 0;\n\n    // For each row\n    for (let l = 0; l < rows.length; l += 1) {\n      const rowNodes = rows[l];\n\n      // Sort rows in order of X position. Break ties with ids for stability\n      rowNodes.sort((a, b) => compare(a.x, b.x, a.id, b.id));\n\n      // Constraints in X to maintain minimum node separation\n      for (let j = 0; j < rowNodes.length - 1; j += 1) {\n        separationConstraints.push({\n          a: rowNodes[j],\n          b: rowNodes[j + 1],\n          key: 'x',\n          operator: (distance, target, delta) => delta <= target,\n          target: (ax, bx, co) => -spaceX - co.a.width * 0.5 - co.b.width * 0.5,\n          strength: () => 1,\n          weightA: () => 0.5,\n          weightB: () => 0.5\n        });\n      }\n    }\n\n    // Minimise node separation overlap\n    solve(separationConstraints, halfIterations);\n  }\n\n  // For each row already sorted in X\n  for (let l = 0; l < rows.length; l += 1) {\n    const rowNodes = rows[l];\n\n    // For each node on the row\n    for (let i = 0; i < rowNodes.length - 1; i += 1) {\n      // Find the current node separation\n      const separation = (rowNodes[i + 1].x - rowNodes[i].x) * 0.8;\n\n      // Find the minimal required separation\n      const minSeparation =\n        rowNodes[i].width * 0.5 + spaceX + rowNodes[i + 1].width * 0.5;\n\n      // Snap the separation to a unit amount\n      const targetSeparation = Math.max(\n        snap(separation, spaceX),\n        minSeparation\n      );\n\n      // Constraints in X to maintain target separation\n      snapConstraints.push({\n        a: rowNodes[i + 1],\n        b: rowNodes[i],\n        key: 'x',\n        operator: greaterOrEqual,\n        target: () => targetSeparation,\n        weightA: () => 0,\n        weightB: () => 1,\n        required: true\n      });\n    }\n  }\n\n  // Find final positions of each node in X under given constraints exactly\n  solve([...snapConstraints, ...parallelConstraints], 1, true);\n\n  // Add additional spacing in Y for rows with many crossing edges\n  expandDenseRows(edges, rows, spaceY);\n};\n\n/**\n * Adds additional spacing in Y for rows containing many crossing edges.\n * Node positions are updated in-place\n * @param {array} edges The input edges\n * @param {array} rows The input rows of nodes\n * @param {number} spaceY The minimum spacing between nodes in Y\n */\nconst expandDenseRows = (edges, rows, spaceY) => {\n  const densities = rowDensity(edges);\n  let currentOffsetY = 0;\n\n  // Add spacing based on density, snapped to a grid to improve vertical rhythm\n  for (let i = 0; i < densities.length; i += 1) {\n    const density = densities[i];\n    const offsetY = snap(density * spaceY, Math.round(spaceY * 0.25));\n    currentOffsetY += offsetY;\n\n    for (const node of rows[i + 1]) {\n      node.y += currentOffsetY;\n    }\n  }\n};\n\n/**\n * Estimates an average 'density' for each row based on average edge angle at that row.\n * Rows are decided by each edge's source and target node Y positions.\n * Intermediate rows are assumed always vertical as a simplification.\n * Returns a list of values in `(0, 1)` where `0` means all edges on that row are vertical and `1` means all horizontal\n * @param {array} edges The input edges\n * @returns {array} The density of each row\n */\nconst rowDensity = edges => {\n  const rows = {};\n\n  for (const edge of edges) {\n    // Find the normalized angle of the edge source and target nodes, relative to the X axis\n    const edgeAngle =\n      Math.abs(angle(edge.targetNode, edge.sourceNode) - halfPI) / halfPI;\n\n    const sourceRow = edge.sourceNode.row;\n    const targetRow = edge.targetNode.row - 1;\n\n    // Add angle to the source row total\n    rows[sourceRow] = rows[sourceRow] || [0, 0];\n    rows[sourceRow][0] += edgeAngle;\n    rows[sourceRow][1] += 1;\n\n    if (targetRow !== sourceRow) {\n      // Add angle to the target row total\n      rows[targetRow] = rows[targetRow] || [0, 0];\n      rows[targetRow][0] += edgeAngle;\n      rows[targetRow][1] += 1;\n    }\n  }\n\n  // Find the average angle for each row\n  for (const row in rows) {\n    rows[row] = rows[row][0] / (rows[row][1] || 1);\n  }\n\n  return Object.values(rows);\n};\n","import { offsetNode, offsetEdge } from './common';\nimport { layout } from './layout';\nimport { routing } from './routing';\n\nconst defaultOptions = {\n  layout: {\n    spaceX: 16,\n    spaceY: 110,\n    layerSpaceY: 55,\n    basisX: 1500,\n    padding: 100,\n    iterations: 20\n  },\n  routing: {\n    spaceX: 26,\n    spaceY: 28,\n    minPassageGap: 40,\n    stemUnit: 8,\n    stemMinSource: 5,\n    stemMinTarget: 5,\n    stemMax: 20,\n    stemSpaceSource: 6,\n    stemSpaceTarget: 10\n  }\n};\n\n/**\n * Generates a diagram of the given DAG.\n * Input nodes and edges are updated in-place.\n * Results are stored as `x, y` properties on nodes\n * and `points` properties on edges.\n * @param {array} nodes The input nodes\n * @param {array} edges The input edges\n * @param {object=} layers The node layers if specified\n * @param {object=} options The graph options\n * @returns {object} The generated graph\n */\nexport const graph = (nodes, edges, layers, options = defaultOptions) => {\n  addEdgeLinks(nodes, edges);\n  addNearestLayers(nodes, layers);\n\n  layout({ nodes, edges, layers, ...options.layout });\n  routing({ nodes, edges, layers, ...options.routing });\n\n  const size = bounds(nodes, options.layout.padding);\n  nodes.forEach(node => offsetNode(node, size.min));\n  edges.forEach(edge => offsetEdge(edge, size.min));\n\n  return {\n    nodes,\n    edges,\n    layers,\n    size\n  };\n};\n\n/**\n * Adds lists of source edges and target edges to each node in-place\n * @param {array} nodes The input nodes\n * @param {array} edges The input edges\n */\nconst addEdgeLinks = (nodes, edges) => {\n  const nodeById = {};\n\n  for (const node of nodes) {\n    nodeById[node.id] = node;\n    node.targets = [];\n    node.sources = [];\n  }\n\n  for (const edge of edges) {\n    edge.sourceNode = nodeById[edge.source];\n    edge.targetNode = nodeById[edge.target];\n    edge.sourceNode.targets.push(edge);\n    edge.targetNode.sources.push(edge);\n  }\n};\n\n/**\n * Adds the nearest layer to each node based on the layers of its connected nodes in-place\n * @param {array} nodes The input nodes\n * @param {?array} layers The input layers\n */\nconst addNearestLayers = (nodes, layers) => {\n  if (layers && layers.length > 0) {\n    // Only accept layers specififed in the layers list.\n    const layersMap = layers.reduce(\n      (res, layer) => ({ ...res, [layer]: true }),\n      {}\n    );\n    const hasValidLayer = node => Boolean(layersMap[node.layer]);\n\n    for (const node of nodes) {\n      const layerNode = findNodeBy(\n        node,\n        targetThenSourceNodes,\n        nodeDistance,\n        hasValidLayer\n      );\n      node.nearestLayer = layerNode && layerNode.layer;\n    }\n  }\n};\n\n/**\n * Returns the list of the node's connected target nodes followed by its connected source nodes\n * @param {object} node The input node\n * @returns {array} The connected nodes\n */\nconst targetThenSourceNodes = node =>\n  targetNodes(node).concat(sourceNodes(node));\n\n/**\n * Returns the list of target nodes directly connected to the given node\n * @param {object} node The input node\n * @returns {array} The target nodes\n */\nconst targetNodes = node => node.targets.map(edge => edge.targetNode);\n\n/**\n * Returns the list of source nodes directly connected to the given node\n * @param {object} node The input node\n * @returns {array} The source nodes\n */\nconst sourceNodes = node => node.sources.map(edge => edge.sourceNode);\n\n/**\n * Returns the distance between the two nodes using their assigned rank\n * @param {object} nodeA The first input node\n * @param {object} nodeB The second input node\n * @returns {number} The distance\n */\nconst nodeDistance = (nodeA, nodeB) => Math.abs(nodeA.rank - nodeB.rank);\n\n/**\n * Starting at the given node and expanding successors, returns the first node accepted relative to the metric\n * @param {object} node The starting node\n * @param {function} successors A function returning the next nodes to expand\n * @param {function} metric A function that measures the difference between two nodes\n * @param {function} accept A function that returns true if the current node fits the criteria\n * @param {object=} visited An object keeping track of nodes already searched\n * @returns {?object} The first node accepted, if found\n */\nconst findNodeBy = (node, successors, metric, accept, visited) => {\n  if (accept(node)) return node;\n\n  visited = visited || {};\n  visited[node.id] = true;\n\n  const next = successors(node).filter(node => !visited[node.id]);\n  const nearest = next.sort(\n    (nodeA, nodeB) => metric(node, nodeA) - metric(node, nodeB)\n  );\n  const accepted = nearest.filter(accept);\n\n  return (\n    accepted[0] ||\n    nearest.map(node =>\n      findNodeBy(node, successors, metric, accept, visited)\n    )[0]\n  );\n};\n\n/**\n * Finds the region bounding the given nodes\n * @param {array} nodes The input nodes\n * @param {number} padding Additional padding around the bounds\n * @returns {object} The bounds\n */\nconst bounds = (nodes, padding) => {\n  const size = {\n    min: { x: Infinity, y: Infinity },\n    max: { x: -Infinity, y: -Infinity }\n  };\n\n  for (const node of nodes) {\n    const x = node.x;\n    const y = node.y;\n\n    if (x < size.min.x) size.min.x = x;\n    if (x > size.max.x) size.max.x = x;\n    if (y < size.min.y) size.min.y = y;\n    if (y > size.max.y) size.max.y = y;\n  }\n\n  size.width = size.max.x - size.min.x + 2 * padding;\n  size.height = size.max.y - size.min.y + 2 * padding;\n  size.min.x -= padding;\n  size.min.y -= padding;\n\n  return size;\n};\n","import {\n  compare,\n  distance1d,\n  angle,\n  nearestOnLine,\n  groupByRow,\n  nodeLeft,\n  nodeRight,\n  nodeTop,\n  nodeBottom\n} from './common';\n\n/**\n * Finds positions for the given edges relative to their nodes.\n * Input nodes and edges are updated in-place.\n * Results are stored in the `points` property on edges.\n * @param {object} params The layout parameters\n * @param {array} params.nodes The input nodes\n * @param {array} params.edges The input edges\n * @param {number} params.spaceX The minimum gap between a node and passing edges in X\n * @param {number} params.spaceY The minimum gap between a node and passing edges in Y\n * @param {number} params.minPassageGap The minimum gap between two nodes in which an edge can pass in X\n * @param {number} params.stemUnit The unit length for edge stems at anchors\n * @param {number} params.stemMax The maximum length of edge stems at anchors\n * @param {number} params.stemMinSource The minimum length for edge stems at source anchors\n * @param {number} params.stemMinTarget The minimum length for edge stems at target anchors\n * @param {number} params.stemSpaceSource The ideal spacing between edge stems at source anchors\n * @param {number} params.stemSpaceTarget The ideal spacing between edge stems at target anchors\n * @returns {void}\n */\nexport const routing = ({\n  nodes,\n  edges,\n  spaceX,\n  spaceY,\n  minPassageGap,\n  stemUnit,\n  stemMinSource,\n  stemMinTarget,\n  stemMax,\n  stemSpaceSource,\n  stemSpaceTarget\n}) => {\n  // Find the rows formed by nodes\n  const rows = groupByRow(nodes);\n\n  // For each node\n  for (const node of nodes) {\n    // Sort the node's target edges by the angle between source and target nodes\n    node.targets.sort((a, b) =>\n      compare(\n        angle(b.sourceNode, b.targetNode),\n        angle(a.sourceNode, a.targetNode)\n      )\n    );\n  }\n\n  // For each edge\n  for (const edge of edges) {\n    const source = edge.sourceNode;\n    const target = edge.targetNode;\n\n    // Initialise result container\n    edge.points = [];\n\n    // Find the ideal gap between edge source anchors\n    const sourceSeparation = Math.min(\n      (source.width - stemSpaceSource) / source.targets.length,\n      stemSpaceSource\n    );\n\n    const sourceEdgeDistance =\n      source.targets.indexOf(edge) - (source.targets.length - 1) * 0.5;\n\n    const sourceOffsetX = sourceSeparation * sourceEdgeDistance;\n\n    // Start at source node offset\n    const startPoint = { x: source.x + sourceOffsetX, y: source.y };\n    let currentPoint = startPoint;\n\n    // For each row between the source and target rows exclusive\n    for (let l = source.row + 1; l < target.row; l += 1) {\n      const firstNode = rows[l][0];\n\n      // Initialise search for next point\n      let nearestPoint = { x: nodeLeft(firstNode) - spaceX, y: firstNode.y };\n      let nearestDistance = Infinity;\n\n      // Extend the row 'to infinity' on each side in X\n      const rowExtended = [\n        { ...firstNode, x: Number.MIN_SAFE_INTEGER },\n        ...rows[l],\n        { ...firstNode, x: Number.MAX_SAFE_INTEGER }\n      ];\n\n      // For each gap between each nodes on the row\n      for (let i = 0; i < rowExtended.length - 1; i += 1) {\n        const node = rowExtended[i];\n        const nextNode = rowExtended[i + 1];\n        const nodeGap = nodeLeft(nextNode) - nodeRight(node);\n\n        // Avoid routing through small gaps, increase bundling\n        if (nodeGap < minPassageGap) continue;\n\n        const offsetX = Math.min(spaceX, nodeGap * 0.5);\n\n        // Find the next potential point. Include offset to reduce overlapping edges\n        const candidatePoint = nearestOnLine(\n          currentPoint.x,\n          currentPoint.y,\n          nodeRight(node) + offsetX,\n          nodeTop(node) - spaceY,\n          nodeLeft(nextNode) - offsetX,\n          nodeTop(nextNode) - spaceY\n        );\n\n        const distance = distance1d(currentPoint.x, candidatePoint.x);\n\n        // Early out if diverging\n        if (distance > nearestDistance) {\n          break;\n        }\n\n        // Keep the nearest point\n        if (distance < nearestDistance) {\n          nearestDistance = distance;\n          nearestPoint = candidatePoint;\n        }\n      }\n\n      // Pass the node at nearest point\n      const offsetY = firstNode.height + spaceY;\n      edge.points.push({\n        x: nearestPoint.x + sourceOffsetX,\n        y: nearestPoint.y\n      });\n      edge.points.push({\n        x: nearestPoint.x + sourceOffsetX,\n        y: nearestPoint.y + offsetY\n      });\n\n      currentPoint = {\n        x: nearestPoint.x,\n        y: nearestPoint.y + offsetY\n      };\n    }\n  }\n\n  // For each node\n  for (const node of nodes) {\n    // Sort the node's outgoing edges by the starting angle of the edge path\n    node.targets.sort((a, b) =>\n      compare(\n        angle(b.sourceNode, b.points[0] || b.targetNode),\n        angle(a.sourceNode, a.points[0] || a.targetNode)\n      )\n    );\n    // Sort the node's incoming edges by the ending angle of the edge path\n    node.sources.sort((a, b) =>\n      compare(\n        angle(a.points[a.points.length - 1] || a.sourceNode, a.targetNode),\n        angle(b.points[b.points.length - 1] || b.sourceNode, b.targetNode)\n      )\n    );\n  }\n\n  // For each edge\n  for (const edge of edges) {\n    const source = edge.sourceNode;\n    const target = edge.targetNode;\n\n    // Find the ideal gap between edge source and target anchors\n    const sourceSeparation = Math.min(\n      (source.width - stemSpaceSource) / source.targets.length,\n      stemSpaceSource\n    );\n\n    const targetSeparation = Math.min(\n      (target.width - stemSpaceTarget) / target.sources.length,\n      stemSpaceTarget\n    );\n\n    const sourceEdgeDistance =\n      source.targets.indexOf(edge) - (source.targets.length - 1) * 0.5;\n    const targetEdgeDistance =\n      target.sources.indexOf(edge) - (target.sources.length - 1) * 0.5;\n\n    const sourceOffsetX = sourceSeparation * sourceEdgeDistance;\n    const targetOffsetX = targetSeparation * targetEdgeDistance;\n\n    // Decrease stem length outwards from the middle stem\n    const sourceOffsetY =\n      stemUnit *\n      source.targets.length *\n      (1 - Math.abs(sourceEdgeDistance) / source.targets.length);\n\n    const targetOffsetY =\n      stemUnit *\n      target.sources.length *\n      (1 - Math.abs(targetEdgeDistance) / target.sources.length);\n\n    // Build the source stem for the edge\n    const sourceStem = [\n      {\n        x: source.x + sourceOffsetX,\n        y: nodeBottom(source)\n      },\n      {\n        x: source.x + sourceOffsetX,\n        y: nodeBottom(source) + stemMinSource\n      },\n      {\n        x: source.x + sourceOffsetX,\n        y: nodeBottom(source) + stemMinSource + Math.min(sourceOffsetY, stemMax)\n      }\n    ];\n\n    // Build the target stem for the edge\n    const targetStem = [\n      {\n        x: target.x + targetOffsetX,\n        y: nodeTop(target) - stemMinTarget - Math.min(targetOffsetY, stemMax)\n      },\n      {\n        x: target.x + targetOffsetX,\n        y: nodeTop(target) - stemMinTarget\n      },\n      {\n        x: target.x + targetOffsetX,\n        y: nodeTop(target)\n      }\n    ];\n\n    // Combine all points\n    const points = [...sourceStem, ...edge.points, ...targetStem];\n\n    // Fix any invalid points caused by invalid layouts\n    let pointYMax = points[0].y;\n\n    for (const point of points) {\n      // Ensure increasing Y values for each point\n      if (point.y < pointYMax) {\n        point.y = pointYMax;\n      } else {\n        pointYMax = point.y;\n      }\n    }\n\n    // Assign finished points to edge\n    edge.points = points;\n  }\n};\n","import dagre from 'dagre';\nimport { graph } from './graph';\n\n/**\n * Calculate chart layout with experimental newgraph algorithm\n * This is an extremely expensive operation so we want it to run as infrequently\n * as possible, and keep it separate from other properties (like node.active)\n * which don't affect layout.\n */\nexport const graphNew = ({ nodes, edges, layers }) => {\n  const result = graph(nodes, edges, layers);\n  return {\n    ...result,\n    size: { ...result.size, marginx: 100, marginy: 100 },\n    newgraph: true\n  };\n};\n\n/**\n * Calculate chart layout with Dagre.js.\n * This is an extremely expensive operation so we want it to run as infrequently\n * as possible, and keep it separate from other properties (like node.active)\n * which don't affect layout.\n */\nexport const graphDagre = ({ nodes, edges, layers }) => {\n  const hasLayers = Boolean(layers.length);\n  const graph = new dagre.graphlib.Graph().setGraph({\n    ranker: hasLayers ? 'none' : null,\n    ranksep: hasLayers ? 200 : 70,\n    marginx: 40,\n    marginy: 40\n  });\n\n  nodes.forEach(node => {\n    graph.setNode(node.id, node);\n  });\n\n  edges.forEach(edge => {\n    graph.setEdge(edge.source, edge.target, edge);\n  });\n\n  // Run Dagre layout to calculate X/Y positioning\n  dagre.layout(graph);\n\n  return {\n    nodes: graph.nodes().map(id => {\n      const node = graph.node(id);\n      return {\n        ...node,\n        order: node.x + node.y * 9999\n      };\n    }),\n    edges: graph.edges().map(id => graph.edge(id)),\n    size: graph.graph(),\n    newgraph: false\n  };\n};\n"],"sourceRoot":""}